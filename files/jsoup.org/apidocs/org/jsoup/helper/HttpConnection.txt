<div> JavaScript is disabled on your browser. </div> Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Package org.jsoup.helper Class HttpConnection java.lang.Object org.jsoup.helper.HttpConnection All Implemented Interfaces: Connection public class HttpConnection extends Object implements Connection Implementation of Connection. See Also: Jsoup.connect(String) Nested Class Summary Nested Classes Modifier and Type Class Description static class HttpConnection.KeyVal static class HttpConnection.Request static class HttpConnection.Response Nested classes/interfaces inherited from interface org.jsoup.Connection Connection.Method Field Summary Fields Modifier and Type Field Description static String CONTENT_ENCODING static String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. Method Summary All Methods Static Methods Instance Methods Concrete Methods Modifier and Type Method Description static Connection connect​(String url) static Connection connect​(URL url) Connection cookie​(String name, String value) Set a cookie to be sent in the request. Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request. Connection.KeyVal data​(String key) Get the data KeyVal for this key, if any Connection data​(String... keyvals) Add a number of request data parameters. Connection data​(String key, String value) Add a request data parameter. Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter. Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter. Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parameters Connection data​(Map<String,String> data) Adds all of the supplied data to the request data parameters Connection.Response execute​() Execute the request. Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects. Document get​() Execute the request as a GET, and parse the result. Connection header​(String name, String value) Set a request header. Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request. Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response. Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs. Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. Connection method​(Connection.Method method) Set the request method to use, GET or POST. Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document. Document post​() Execute the request as a POST, and parse the result. Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post data Connection proxy​(String host, int port) Set the HTTP proxy to use for this request. Connection proxy​(Proxy proxy) Set the proxy to use for this request. Connection referrer​(String referrer) Set the request referrer (aka "referer") header. Connection.Request request​() Get the request object associated with this connection Connection request​(Connection.Request request) Set the connection's request Connection requestBody​(String body) Set a POST (or PUT) request body. Connection.Response response​() Get the response, once the request has been executed Connection response​(Connection.Response response) Set the connection's response Connection timeout​(int millis) Set the total request timeout duration. Connection url​(String url) Set the request URL to fetch. Connection url​(URL url) Set the request URL to fetch. Connection userAgent​(String userAgent) Set the request user-agent header. Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail CONTENT_ENCODING public static final String CONTENT_ENCODING See Also: Constant Field Values DEFAULT_UA public static final String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA. See Also: Constant Field Values Method Detail connect public static Connection connect​(String url) connect public static Connection connect​(URL url) url public Connection url​(URL url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining url public Connection url​(String url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining proxy public Connection proxy​(Proxy proxy) Description copied from interface: Connection Set the proxy to use for this request. Set to null to disable. Specified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chaining proxy public Connection proxy​(String host, int port) Description copied from interface: Connection Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining userAgent public Connection userAgent​(String userAgent) Description copied from interface: Connection Set the request user-agent header. Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UA timeout public Connection timeout​(int millis) Description copied from interface: Connection Set the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response. Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int) maxBodySize public Connection maxBodySize​(int bytes) Description copied from interface: Connection Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine). Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chaining followRedirects public Connection followRedirects​(boolean followRedirects) Description copied from interface: Connection Configures the connection to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chaining referrer public Connection referrer​(String referrer) Description copied from interface: Connection Set the request referrer (aka "referer") header. Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chaining method public Connection method​(Connection.Method method) Description copied from interface: Connection Set the request method to use, GET or POST. Default is GET. Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chaining ignoreHttpErrors public Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error. Specified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chaining ignoreContentType public Connection ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection Ignore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type. Specified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chaining validateTLSCertificates public Connection validateTLSCertificates​(boolean value) Description copied from interface: Connection Disable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations. Specified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chaining data public Connection data​(String key, String value) Description copied from interface: Connection Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name. Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chaining data public Connection data​(String key, String filename, InputStream inputStream) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype. data public Connection data​(String key, String filename, InputStream inputStream, String contentType) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chaining data public Connection data​(Map<String,String> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chaining data public Connection data​(String... keyvals) Description copied from interface: Connection Add a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English Specified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chaining data public Connection data​(Collection<Connection.KeyVal> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chaining data public Connection.KeyVal data​(String key) Description copied from interface: Connection Get the data KeyVal for this key, if any Specified by: data in interface Connection Parameters: key - the data key Returns: null if not set requestBody public Connection requestBody​(String body) Description copied from interface: Connection Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection Returns: this Request, for chaining header public Connection header​(String name, String value) Description copied from interface: Connection Set a request header. Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers() headers public Connection headers​(Map<String,String> headers) Description copied from interface: Connection Adds each of the supplied headers to the request. Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers() cookie public Connection cookie​(String name, String value) Description copied from interface: Connection Set a cookie to be sent in the request. Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chaining cookies public Connection cookies​(Map<String,String> cookies) Description copied from interface: Connection Adds each of the supplied cookies to the request. Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chaining parser public Connection parser​(Parser parser) Description copied from interface: Connection Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used. Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chaining get public Document get​() throws IOException Description copied from interface: Connection Execute the request as a GET, and parse the result. Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error post public Document post​() throws IOException Description copied from interface: Connection Execute the request as a POST, and parse the result. Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error execute public Connection.Response execute​() throws IOException Description copied from interface: Connection Execute the request. Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error request public Connection.Request request​() Description copied from interface: Connection Get the request object associated with this connection Specified by: request in interface Connection Returns: request request public Connection request​(Connection.Request request) Description copied from interface: Connection Set the connection's request Specified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chaining response public Connection.Response response​() Description copied from interface: Connection Get the response, once the request has been executed Specified by: response in interface Connection Returns: response response public Connection response​(Connection.Response response) Description copied from interface: Connection Set the connection's response Specified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chaining postDataCharset public Connection postDataCharset​(String charset) Description copied from interface: Connection Sets the default post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chaining Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Copyright © 2009–2017 Jonathan Hedley. All rights reserved.<div> JavaScript is disabled on your browser. </div>Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll ClassesSEARCH:SEARCH:SEARCH:<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |NestedField |FieldConstr |MethodMethodDetail: Field | Constr | MethodDetail:Field |FieldConstr |MethodMethodPackage org.jsoup.helper Class HttpConnectionPackage org.jsoup.helperPackageorg.jsoup.helperClass HttpConnectionjava.lang.Object org.jsoup.helper.HttpConnection All Implemented Interfaces: Connection public class HttpConnection extends Object implements Connection Implementation of Connection. See Also: Jsoup.connect(String) Nested Class Summary Nested Classes Modifier and Type Class Description static class HttpConnection.KeyVal static class HttpConnection.Request static class HttpConnection.Response Nested classes/interfaces inherited from interface org.jsoup.Connection Connection.Method Field Summary Fields Modifier and Type Field Description static String CONTENT_ENCODING static String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. Method Summary All Methods Static Methods Instance Methods Concrete Methods Modifier and Type Method Description static Connection connect​(String url) static Connection connect​(URL url) Connection cookie​(String name, String value) Set a cookie to be sent in the request. Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request. Connection.KeyVal data​(String key) Get the data KeyVal for this key, if any Connection data​(String... keyvals) Add a number of request data parameters. Connection data​(String key, String value) Add a request data parameter. Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter. Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter. Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parameters Connection data​(Map<String,String> data) Adds all of the supplied data to the request data parameters Connection.Response execute​() Execute the request. Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects. Document get​() Execute the request as a GET, and parse the result. Connection header​(String name, String value) Set a request header. Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request. Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response. Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs. Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. Connection method​(Connection.Method method) Set the request method to use, GET or POST. Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document. Document post​() Execute the request as a POST, and parse the result. Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post data Connection proxy​(String host, int port) Set the HTTP proxy to use for this request. Connection proxy​(Proxy proxy) Set the proxy to use for this request. Connection referrer​(String referrer) Set the request referrer (aka "referer") header. Connection.Request request​() Get the request object associated with this connection Connection request​(Connection.Request request) Set the connection's request Connection requestBody​(String body) Set a POST (or PUT) request body. Connection.Response response​() Get the response, once the request has been executed Connection response​(Connection.Response response) Set the connection's response Connection timeout​(int millis) Set the total request timeout duration. Connection url​(String url) Set the request URL to fetch. Connection url​(URL url) Set the request URL to fetch. Connection userAgent​(String userAgent) Set the request user-agent header. Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Field Detail CONTENT_ENCODING public static final String CONTENT_ENCODING See Also: Constant Field Values DEFAULT_UA public static final String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA. See Also: Constant Field Values Method Detail connect public static Connection connect​(String url) connect public static Connection connect​(URL url) url public Connection url​(URL url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining url public Connection url​(String url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining proxy public Connection proxy​(Proxy proxy) Description copied from interface: Connection Set the proxy to use for this request. Set to null to disable. Specified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chaining proxy public Connection proxy​(String host, int port) Description copied from interface: Connection Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining userAgent public Connection userAgent​(String userAgent) Description copied from interface: Connection Set the request user-agent header. Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UA timeout public Connection timeout​(int millis) Description copied from interface: Connection Set the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response. Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int) maxBodySize public Connection maxBodySize​(int bytes) Description copied from interface: Connection Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine). Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chaining followRedirects public Connection followRedirects​(boolean followRedirects) Description copied from interface: Connection Configures the connection to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chaining referrer public Connection referrer​(String referrer) Description copied from interface: Connection Set the request referrer (aka "referer") header. Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chaining method public Connection method​(Connection.Method method) Description copied from interface: Connection Set the request method to use, GET or POST. Default is GET. Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chaining ignoreHttpErrors public Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error. Specified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chaining ignoreContentType public Connection ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection Ignore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type. Specified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chaining validateTLSCertificates public Connection validateTLSCertificates​(boolean value) Description copied from interface: Connection Disable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations. Specified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chaining data public Connection data​(String key, String value) Description copied from interface: Connection Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name. Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chaining data public Connection data​(String key, String filename, InputStream inputStream) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype. data public Connection data​(String key, String filename, InputStream inputStream, String contentType) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chaining data public Connection data​(Map<String,String> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chaining data public Connection data​(String... keyvals) Description copied from interface: Connection Add a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English Specified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chaining data public Connection data​(Collection<Connection.KeyVal> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chaining data public Connection.KeyVal data​(String key) Description copied from interface: Connection Get the data KeyVal for this key, if any Specified by: data in interface Connection Parameters: key - the data key Returns: null if not set requestBody public Connection requestBody​(String body) Description copied from interface: Connection Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection Returns: this Request, for chaining header public Connection header​(String name, String value) Description copied from interface: Connection Set a request header. Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers() headers public Connection headers​(Map<String,String> headers) Description copied from interface: Connection Adds each of the supplied headers to the request. Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers() cookie public Connection cookie​(String name, String value) Description copied from interface: Connection Set a cookie to be sent in the request. Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chaining cookies public Connection cookies​(Map<String,String> cookies) Description copied from interface: Connection Adds each of the supplied cookies to the request. Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chaining parser public Connection parser​(Parser parser) Description copied from interface: Connection Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used. Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chaining get public Document get​() throws IOException Description copied from interface: Connection Execute the request as a GET, and parse the result. Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error post public Document post​() throws IOException Description copied from interface: Connection Execute the request as a POST, and parse the result. Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error execute public Connection.Response execute​() throws IOException Description copied from interface: Connection Execute the request. Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error request public Connection.Request request​() Description copied from interface: Connection Get the request object associated with this connection Specified by: request in interface Connection Returns: request request public Connection request​(Connection.Request request) Description copied from interface: Connection Set the connection's request Specified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chaining response public Connection.Response response​() Description copied from interface: Connection Get the response, once the request has been executed Specified by: response in interface Connection Returns: response response public Connection response​(Connection.Response response) Description copied from interface: Connection Set the connection's response Specified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chaining postDataCharset public Connection postDataCharset​(String charset) Description copied from interface: Connection Sets the default post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chainingjava.lang.Object org.jsoup.helper.HttpConnectionjava.lang.Objectjava.lang.Objectorg.jsoup.helper.HttpConnectionorg.jsoup.helper.HttpConnectionorg.jsoup.helper.HttpConnectionAll Implemented Interfaces: Connection public class HttpConnection extends Object implements Connection Implementation of Connection. See Also: Jsoup.connect(String)All Implemented Interfaces: Connection public class HttpConnection extends Object implements Connection Implementation of Connection. See Also: Jsoup.connect(String)All Implemented Interfaces: Connection public class HttpConnection extends Object implements Connection Implementation of Connection. See Also: Jsoup.connect(String)All Implemented Interfaces: ConnectionAll Implemented Interfaces:ConnectionConnectionConnectionpublic class HttpConnection extends Object implements ConnectionHttpConnectionObjectConnectionImplementation of Connection.ConnectionConnectionSee Also: Jsoup.connect(String)See Also:See Also:Jsoup.connect(String)Jsoup.connect(String)Jsoup.connect(String)Nested Class Summary Nested Classes Modifier and Type Class Description static class HttpConnection.KeyVal static class HttpConnection.Request static class HttpConnection.Response Nested classes/interfaces inherited from interface org.jsoup.Connection Connection.Method Field Summary Fields Modifier and Type Field Description static String CONTENT_ENCODING static String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. Method Summary All Methods Static Methods Instance Methods Concrete Methods Modifier and Type Method Description static Connection connect​(String url) static Connection connect​(URL url) Connection cookie​(String name, String value) Set a cookie to be sent in the request. Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request. Connection.KeyVal data​(String key) Get the data KeyVal for this key, if any Connection data​(String... keyvals) Add a number of request data parameters. Connection data​(String key, String value) Add a request data parameter. Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter. Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter. Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parameters Connection data​(Map<String,String> data) Adds all of the supplied data to the request data parameters Connection.Response execute​() Execute the request. Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects. Document get​() Execute the request as a GET, and parse the result. Connection header​(String name, String value) Set a request header. Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request. Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response. Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs. Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. Connection method​(Connection.Method method) Set the request method to use, GET or POST. Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document. Document post​() Execute the request as a POST, and parse the result. Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post data Connection proxy​(String host, int port) Set the HTTP proxy to use for this request. Connection proxy​(Proxy proxy) Set the proxy to use for this request. Connection referrer​(String referrer) Set the request referrer (aka "referer") header. Connection.Request request​() Get the request object associated with this connection Connection request​(Connection.Request request) Set the connection's request Connection requestBody​(String body) Set a POST (or PUT) request body. Connection.Response response​() Get the response, once the request has been executed Connection response​(Connection.Response response) Set the connection's response Connection timeout​(int millis) Set the total request timeout duration. Connection url​(String url) Set the request URL to fetch. Connection url​(URL url) Set the request URL to fetch. Connection userAgent​(String userAgent) Set the request user-agent header. Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitNested Class Summary Nested Classes Modifier and Type Class Description static class HttpConnection.KeyVal static class HttpConnection.Request static class HttpConnection.Response Nested classes/interfaces inherited from interface org.jsoup.Connection Connection.Method Field Summary Fields Modifier and Type Field Description static String CONTENT_ENCODING static String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. Method Summary All Methods Static Methods Instance Methods Concrete Methods Modifier and Type Method Description static Connection connect​(String url) static Connection connect​(URL url) Connection cookie​(String name, String value) Set a cookie to be sent in the request. Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request. Connection.KeyVal data​(String key) Get the data KeyVal for this key, if any Connection data​(String... keyvals) Add a number of request data parameters. Connection data​(String key, String value) Add a request data parameter. Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter. Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter. Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parameters Connection data​(Map<String,String> data) Adds all of the supplied data to the request data parameters Connection.Response execute​() Execute the request. Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects. Document get​() Execute the request as a GET, and parse the result. Connection header​(String name, String value) Set a request header. Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request. Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response. Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs. Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. Connection method​(Connection.Method method) Set the request method to use, GET or POST. Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document. Document post​() Execute the request as a POST, and parse the result. Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post data Connection proxy​(String host, int port) Set the HTTP proxy to use for this request. Connection proxy​(Proxy proxy) Set the proxy to use for this request. Connection referrer​(String referrer) Set the request referrer (aka "referer") header. Connection.Request request​() Get the request object associated with this connection Connection request​(Connection.Request request) Set the connection's request Connection requestBody​(String body) Set a POST (or PUT) request body. Connection.Response response​() Get the response, once the request has been executed Connection response​(Connection.Response response) Set the connection's response Connection timeout​(int millis) Set the total request timeout duration. Connection url​(String url) Set the request URL to fetch. Connection url​(URL url) Set the request URL to fetch. Connection userAgent​(String userAgent) Set the request user-agent header. Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitNested Class Summary Nested Classes Modifier and Type Class Description static class HttpConnection.KeyVal static class HttpConnection.Request static class HttpConnection.Response Nested classes/interfaces inherited from interface org.jsoup.Connection Connection.Method Field Summary Fields Modifier and Type Field Description static String CONTENT_ENCODING static String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. Method Summary All Methods Static Methods Instance Methods Concrete Methods Modifier and Type Method Description static Connection connect​(String url) static Connection connect​(URL url) Connection cookie​(String name, String value) Set a cookie to be sent in the request. Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request. Connection.KeyVal data​(String key) Get the data KeyVal for this key, if any Connection data​(String... keyvals) Add a number of request data parameters. Connection data​(String key, String value) Add a request data parameter. Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter. Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter. Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parameters Connection data​(Map<String,String> data) Adds all of the supplied data to the request data parameters Connection.Response execute​() Execute the request. Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects. Document get​() Execute the request as a GET, and parse the result. Connection header​(String name, String value) Set a request header. Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request. Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response. Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs. Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. Connection method​(Connection.Method method) Set the request method to use, GET or POST. Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document. Document post​() Execute the request as a POST, and parse the result. Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post data Connection proxy​(String host, int port) Set the HTTP proxy to use for this request. Connection proxy​(Proxy proxy) Set the proxy to use for this request. Connection referrer​(String referrer) Set the request referrer (aka "referer") header. Connection.Request request​() Get the request object associated with this connection Connection request​(Connection.Request request) Set the connection's request Connection requestBody​(String body) Set a POST (or PUT) request body. Connection.Response response​() Get the response, once the request has been executed Connection response​(Connection.Response response) Set the connection's response Connection timeout​(int millis) Set the total request timeout duration. Connection url​(String url) Set the request URL to fetch. Connection url​(URL url) Set the request URL to fetch. Connection userAgent​(String userAgent) Set the request user-agent header. Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitNested Class Summary Nested Classes Modifier and Type Class Description static class HttpConnection.KeyVal static class HttpConnection.Request static class HttpConnection.Response Nested classes/interfaces inherited from interface org.jsoup.Connection Connection.MethodNested Class Summary Nested Classes Modifier and Type Class Description static class HttpConnection.KeyVal static class HttpConnection.Request static class HttpConnection.Response Nested classes/interfaces inherited from interface org.jsoup.Connection Connection.MethodNested Class SummaryNested Classes Modifier and Type Class Description static class HttpConnection.KeyVal static class HttpConnection.Request static class HttpConnection.ResponseNested ClassesNested ClassesModifier and Type Class Description static class HttpConnection.KeyVal static class HttpConnection.Request static class HttpConnection.ResponseModifier and Type Class DescriptionModifier and TypeClassDescriptionstatic class HttpConnection.KeyValstatic classstatic classHttpConnection.KeyValHttpConnection.KeyValHttpConnection.KeyValHttpConnection.KeyValstatic class HttpConnection.Requeststatic classstatic classHttpConnection.RequestHttpConnection.RequestHttpConnection.RequestHttpConnection.Requeststatic class HttpConnection.Responsestatic classstatic classHttpConnection.ResponseHttpConnection.ResponseHttpConnection.ResponseHttpConnection.ResponseNested classes/interfaces inherited from interface org.jsoup.Connection Connection.MethodNested classes/interfaces inherited from interface org.jsoup.Connection Connection.MethodNested classes/interfaces inherited from interface org.jsoup.ConnectionConnectionConnection.MethodConnection.MethodField Summary Fields Modifier and Type Field Description static String CONTENT_ENCODING static String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java.Field Summary Fields Modifier and Type Field Description static String CONTENT_ENCODING static String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java.Field SummaryFields Modifier and Type Field Description static String CONTENT_ENCODING static String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java.FieldsFieldsModifier and Type Field Description static String CONTENT_ENCODING static String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java.Modifier and Type Field DescriptionModifier and TypeFieldDescriptionstatic String CONTENT_ENCODINGstatic Stringstatic StringStringCONTENT_ENCODINGCONTENT_ENCODINGCONTENT_ENCODINGCONTENT_ENCODINGstatic String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java.static Stringstatic StringStringDEFAULT_UADEFAULT_UADEFAULT_UADEFAULT_UAMany users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java.Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java.JavaMethod Summary All Methods Static Methods Instance Methods Concrete Methods Modifier and Type Method Description static Connection connect​(String url) static Connection connect​(URL url) Connection cookie​(String name, String value) Set a cookie to be sent in the request. Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request. Connection.KeyVal data​(String key) Get the data KeyVal for this key, if any Connection data​(String... keyvals) Add a number of request data parameters. Connection data​(String key, String value) Add a request data parameter. Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter. Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter. Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parameters Connection data​(Map<String,String> data) Adds all of the supplied data to the request data parameters Connection.Response execute​() Execute the request. Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects. Document get​() Execute the request as a GET, and parse the result. Connection header​(String name, String value) Set a request header. Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request. Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response. Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs. Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. Connection method​(Connection.Method method) Set the request method to use, GET or POST. Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document. Document post​() Execute the request as a POST, and parse the result. Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post data Connection proxy​(String host, int port) Set the HTTP proxy to use for this request. Connection proxy​(Proxy proxy) Set the proxy to use for this request. Connection referrer​(String referrer) Set the request referrer (aka "referer") header. Connection.Request request​() Get the request object associated with this connection Connection request​(Connection.Request request) Set the connection's request Connection requestBody​(String body) Set a POST (or PUT) request body. Connection.Response response​() Get the response, once the request has been executed Connection response​(Connection.Response response) Set the connection's response Connection timeout​(int millis) Set the total request timeout duration. Connection url​(String url) Set the request URL to fetch. Connection url​(URL url) Set the request URL to fetch. Connection userAgent​(String userAgent) Set the request user-agent header. Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Static Methods Instance Methods Concrete Methods Modifier and Type Method Description static Connection connect​(String url) static Connection connect​(URL url) Connection cookie​(String name, String value) Set a cookie to be sent in the request. Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request. Connection.KeyVal data​(String key) Get the data KeyVal for this key, if any Connection data​(String... keyvals) Add a number of request data parameters. Connection data​(String key, String value) Add a request data parameter. Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter. Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter. Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parameters Connection data​(Map<String,String> data) Adds all of the supplied data to the request data parameters Connection.Response execute​() Execute the request. Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects. Document get​() Execute the request as a GET, and parse the result. Connection header​(String name, String value) Set a request header. Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request. Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response. Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs. Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. Connection method​(Connection.Method method) Set the request method to use, GET or POST. Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document. Document post​() Execute the request as a POST, and parse the result. Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post data Connection proxy​(String host, int port) Set the HTTP proxy to use for this request. Connection proxy​(Proxy proxy) Set the proxy to use for this request. Connection referrer​(String referrer) Set the request referrer (aka "referer") header. Connection.Request request​() Get the request object associated with this connection Connection request​(Connection.Request request) Set the connection's request Connection requestBody​(String body) Set a POST (or PUT) request body. Connection.Response response​() Get the response, once the request has been executed Connection response​(Connection.Response response) Set the connection's response Connection timeout​(int millis) Set the total request timeout duration. Connection url​(String url) Set the request URL to fetch. Connection url​(URL url) Set the request URL to fetch. Connection userAgent​(String userAgent) Set the request user-agent header. Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod SummaryAll Methods Static Methods Instance Methods Concrete Methods Modifier and Type Method Description static Connection connect​(String url) static Connection connect​(URL url) Connection cookie​(String name, String value) Set a cookie to be sent in the request. Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request. Connection.KeyVal data​(String key) Get the data KeyVal for this key, if any Connection data​(String... keyvals) Add a number of request data parameters. Connection data​(String key, String value) Add a request data parameter. Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter. Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter. Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parameters Connection data​(Map<String,String> data) Adds all of the supplied data to the request data parameters Connection.Response execute​() Execute the request. Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects. Document get​() Execute the request as a GET, and parse the result. Connection header​(String name, String value) Set a request header. Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request. Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response. Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs. Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. Connection method​(Connection.Method method) Set the request method to use, GET or POST. Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document. Document post​() Execute the request as a POST, and parse the result. Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post data Connection proxy​(String host, int port) Set the HTTP proxy to use for this request. Connection proxy​(Proxy proxy) Set the proxy to use for this request. Connection referrer​(String referrer) Set the request referrer (aka "referer") header. Connection.Request request​() Get the request object associated with this connection Connection request​(Connection.Request request) Set the connection's request Connection requestBody​(String body) Set a POST (or PUT) request body. Connection.Response response​() Get the response, once the request has been executed Connection response​(Connection.Response response) Set the connection's response Connection timeout​(int millis) Set the total request timeout duration. Connection url​(String url) Set the request URL to fetch. Connection url​(URL url) Set the request URL to fetch. Connection userAgent​(String userAgent) Set the request user-agent header. Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests.All Methods Static Methods Instance Methods Concrete MethodsAll MethodsAll MethodsStatic MethodsStatic MethodsStatic MethodsInstance MethodsInstance MethodsInstance MethodsConcrete MethodsConcrete MethodsConcrete MethodsModifier and Type Method Description static Connection connect​(String url) static Connection connect​(URL url) Connection cookie​(String name, String value) Set a cookie to be sent in the request. Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request. Connection.KeyVal data​(String key) Get the data KeyVal for this key, if any Connection data​(String... keyvals) Add a number of request data parameters. Connection data​(String key, String value) Add a request data parameter. Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter. Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter. Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parameters Connection data​(Map<String,String> data) Adds all of the supplied data to the request data parameters Connection.Response execute​() Execute the request. Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects. Document get​() Execute the request as a GET, and parse the result. Connection header​(String name, String value) Set a request header. Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request. Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response. Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs. Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. Connection method​(Connection.Method method) Set the request method to use, GET or POST. Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document. Document post​() Execute the request as a POST, and parse the result. Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post data Connection proxy​(String host, int port) Set the HTTP proxy to use for this request. Connection proxy​(Proxy proxy) Set the proxy to use for this request. Connection referrer​(String referrer) Set the request referrer (aka "referer") header. Connection.Request request​() Get the request object associated with this connection Connection request​(Connection.Request request) Set the connection's request Connection requestBody​(String body) Set a POST (or PUT) request body. Connection.Response response​() Get the response, once the request has been executed Connection response​(Connection.Response response) Set the connection's response Connection timeout​(int millis) Set the total request timeout duration. Connection url​(String url) Set the request URL to fetch. Connection url​(URL url) Set the request URL to fetch. Connection userAgent​(String userAgent) Set the request user-agent header. Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests.Modifier and Type Method DescriptionModifier and TypeMethodDescriptionstatic Connection connect​(String url)static Connectionstatic ConnectionConnectionconnect​(String url)connect​(String url)connectconnectStringstatic Connection connect​(URL url)static Connectionstatic ConnectionConnectionconnect​(URL url)connect​(URL url)connectconnectURLConnection cookie​(String name, String value) Set a cookie to be sent in the request.ConnectionConnectionConnectioncookie​(String name, String value)cookie​(String name, String value)cookiecookieStringStringSet a cookie to be sent in the request.Set a cookie to be sent in the request.Connection cookies​(Map<String,String> cookies) Adds each of the supplied cookies to the request.ConnectionConnectionConnectioncookies​(Map<String,String> cookies)cookies​(Map<String,String> cookies)cookiescookiesMapStringStringAdds each of the supplied cookies to the request.Adds each of the supplied cookies to the request.Connection.KeyVal data​(String key) Get the data KeyVal for this key, if anyConnection.KeyValConnection.KeyValConnection.KeyValdata​(String key)data​(String key)datadataStringGet the data KeyVal for this key, if anyGet the data KeyVal for this key, if anyConnection data​(String... keyvals) Add a number of request data parameters.ConnectionConnectionConnectiondata​(String... keyvals)data​(String... keyvals)datadataStringAdd a number of request data parameters.Add a number of request data parameters.Connection data​(String key, String value) Add a request data parameter.ConnectionConnectionConnectiondata​(String key, String value)data​(String key, String value)datadataStringStringAdd a request data parameter.Add a request data parameter.Connection data​(String key, String filename, InputStream inputStream) Add an input stream as a request data parameter.ConnectionConnectionConnectiondata​(String key, String filename, InputStream inputStream)data​(String key, String filename, InputStream inputStream)datadataStringStringInputStreamAdd an input stream as a request data parameter.Add an input stream as a request data parameter.Connection data​(String key, String filename, InputStream inputStream, String contentType) Add an input stream as a request data parameter.ConnectionConnectionConnectiondata​(String key, String filename, InputStream inputStream, String contentType)data​(String key, String filename, InputStream inputStream, String contentType)datadataStringStringInputStreamStringAdd an input stream as a request data parameter.Add an input stream as a request data parameter.Connection data​(Collection<Connection.KeyVal> data) Adds all of the supplied data to the request data parametersConnectionConnectionConnectiondata​(Collection<Connection.KeyVal> data)data​(Collection<Connection.KeyVal> data)datadataCollectionConnection.KeyValAdds all of the supplied data to the request data parametersAdds all of the supplied data to the request data parametersConnection data​(Map<String,String> data) Adds all of the supplied data to the request data parametersConnectionConnectionConnectiondata​(Map<String,String> data)data​(Map<String,String> data)datadataMapStringStringAdds all of the supplied data to the request data parametersAdds all of the supplied data to the request data parametersConnection.Response execute​() Execute the request.Connection.ResponseConnection.ResponseConnection.Responseexecute​()execute​()executeexecuteExecute the request.Execute the request.Connection followRedirects​(boolean followRedirects) Configures the connection to (not) follow server redirects.ConnectionConnectionConnectionfollowRedirects​(boolean followRedirects)followRedirects​(boolean followRedirects)followRedirectsfollowRedirectsConfigures the connection to (not) follow server redirects.Configures the connection to (not) follow server redirects.Document get​() Execute the request as a GET, and parse the result.DocumentDocumentDocumentget​()get​()getgetExecute the request as a GET, and parse the result.Execute the request as a GET, and parse the result.Connection header​(String name, String value) Set a request header.ConnectionConnectionConnectionheader​(String name, String value)header​(String name, String value)headerheaderStringStringSet a request header.Set a request header.Connection headers​(Map<String,String> headers) Adds each of the supplied headers to the request.ConnectionConnectionConnectionheaders​(Map<String,String> headers)headers​(Map<String,String> headers)headersheadersMapStringStringAdds each of the supplied headers to the request.Adds each of the supplied headers to the request.Connection ignoreContentType​(boolean ignoreContentType) Ignore the document's Content-Type when parsing the response.ConnectionConnectionConnectionignoreContentType​(boolean ignoreContentType)ignoreContentType​(boolean ignoreContentType)ignoreContentTypeignoreContentTypeIgnore the document's Content-Type when parsing the response.Ignore the document's Content-Type when parsing the response.Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the connection to not throw exceptions when a HTTP error occurs.ConnectionConnectionConnectionignoreHttpErrors​(boolean ignoreHttpErrors)ignoreHttpErrors​(boolean ignoreHttpErrors)ignoreHttpErrorsignoreHttpErrorsConfigures the connection to not throw exceptions when a HTTP error occurs.Configures the connection to not throw exceptions when a HTTP error occurs.Connection maxBodySize​(int bytes) Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated.ConnectionConnectionConnectionmaxBodySize​(int bytes)maxBodySize​(int bytes)maxBodySizemaxBodySizeSet the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated.Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated.Connection method​(Connection.Method method) Set the request method to use, GET or POST.ConnectionConnectionConnectionmethod​(Connection.Method method)method​(Connection.Method method)methodmethodConnection.MethodSet the request method to use, GET or POST.Set the request method to use, GET or POST.Connection parser​(Parser parser) Provide an alternate parser to use when parsing the response to a Document.ConnectionConnectionConnectionparser​(Parser parser)parser​(Parser parser)parserparserParserProvide an alternate parser to use when parsing the response to a Document.Provide an alternate parser to use when parsing the response to a Document.Document post​() Execute the request as a POST, and parse the result.DocumentDocumentDocumentpost​()post​()postpostExecute the request as a POST, and parse the result.Execute the request as a POST, and parse the result.Connection postDataCharset​(String charset) Sets the default post data character set for x-www-form-urlencoded post dataConnectionConnectionConnectionpostDataCharset​(String charset)postDataCharset​(String charset)postDataCharsetpostDataCharsetStringSets the default post data character set for x-www-form-urlencoded post dataSets the default post data character set for x-www-form-urlencoded post dataConnection proxy​(String host, int port) Set the HTTP proxy to use for this request.ConnectionConnectionConnectionproxy​(String host, int port)proxy​(String host, int port)proxyproxyStringSet the HTTP proxy to use for this request.Set the HTTP proxy to use for this request.Connection proxy​(Proxy proxy) Set the proxy to use for this request.ConnectionConnectionConnectionproxy​(Proxy proxy)proxy​(Proxy proxy)proxyproxyProxySet the proxy to use for this request.Set the proxy to use for this request.Connection referrer​(String referrer) Set the request referrer (aka "referer") header.ConnectionConnectionConnectionreferrer​(String referrer)referrer​(String referrer)referrerreferrerStringSet the request referrer (aka "referer") header.Set the request referrer (aka "referer") header.Connection.Request request​() Get the request object associated with this connectionConnection.RequestConnection.RequestConnection.Requestrequest​()request​()requestrequestGet the request object associated with this connectionGet the request object associated with this connectionConnection request​(Connection.Request request) Set the connection's requestConnectionConnectionConnectionrequest​(Connection.Request request)request​(Connection.Request request)requestrequestConnection.RequestSet the connection's requestSet the connection's requestConnection requestBody​(String body) Set a POST (or PUT) request body.ConnectionConnectionConnectionrequestBody​(String body)requestBody​(String body)requestBodyrequestBodyStringSet a POST (or PUT) request body.Set a POST (or PUT) request body.Connection.Response response​() Get the response, once the request has been executedConnection.ResponseConnection.ResponseConnection.Responseresponse​()response​()responseresponseGet the response, once the request has been executedGet the response, once the request has been executedConnection response​(Connection.Response response) Set the connection's responseConnectionConnectionConnectionresponse​(Connection.Response response)response​(Connection.Response response)responseresponseConnection.ResponseSet the connection's responseSet the connection's responseConnection timeout​(int millis) Set the total request timeout duration.ConnectionConnectionConnectiontimeout​(int millis)timeout​(int millis)timeouttimeoutSet the total request timeout duration.Set the total request timeout duration.Connection url​(String url) Set the request URL to fetch.ConnectionConnectionConnectionurl​(String url)url​(String url)urlurlStringSet the request URL to fetch.Set the request URL to fetch.Connection url​(URL url) Set the request URL to fetch.ConnectionConnectionConnectionurl​(URL url)url​(URL url)urlurlURLSet the request URL to fetch.Set the request URL to fetch.Connection userAgent​(String userAgent) Set the request user-agent header.ConnectionConnectionConnectionuserAgent​(String userAgent)userAgent​(String userAgent)userAgentuserAgentStringSet the request user-agent header.Set the request user-agent header.Connection validateTLSCertificates​(boolean value) Disable/enable TLS certificates validation for HTTPS requests.ConnectionConnectionConnectionvalidateTLSCertificates​(boolean value)validateTLSCertificates​(boolean value)validateTLSCertificatesvalidateTLSCertificatesDisable/enable TLS certificates validation for HTTPS requests.Disable/enable TLS certificates validation for HTTPS requests.Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethods inherited from class java.lang.ObjectObjectclone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitcloneequalsfinalizegetClasshashCodenotifynotifyAlltoStringwaitwaitwaitField Detail CONTENT_ENCODING public static final String CONTENT_ENCODING See Also: Constant Field Values DEFAULT_UA public static final String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA. See Also: Constant Field Values Method Detail connect public static Connection connect​(String url) connect public static Connection connect​(URL url) url public Connection url​(URL url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining url public Connection url​(String url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining proxy public Connection proxy​(Proxy proxy) Description copied from interface: Connection Set the proxy to use for this request. Set to null to disable. Specified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chaining proxy public Connection proxy​(String host, int port) Description copied from interface: Connection Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining userAgent public Connection userAgent​(String userAgent) Description copied from interface: Connection Set the request user-agent header. Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UA timeout public Connection timeout​(int millis) Description copied from interface: Connection Set the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response. Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int) maxBodySize public Connection maxBodySize​(int bytes) Description copied from interface: Connection Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine). Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chaining followRedirects public Connection followRedirects​(boolean followRedirects) Description copied from interface: Connection Configures the connection to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chaining referrer public Connection referrer​(String referrer) Description copied from interface: Connection Set the request referrer (aka "referer") header. Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chaining method public Connection method​(Connection.Method method) Description copied from interface: Connection Set the request method to use, GET or POST. Default is GET. Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chaining ignoreHttpErrors public Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error. Specified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chaining ignoreContentType public Connection ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection Ignore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type. Specified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chaining validateTLSCertificates public Connection validateTLSCertificates​(boolean value) Description copied from interface: Connection Disable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations. Specified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chaining data public Connection data​(String key, String value) Description copied from interface: Connection Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name. Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chaining data public Connection data​(String key, String filename, InputStream inputStream) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype. data public Connection data​(String key, String filename, InputStream inputStream, String contentType) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chaining data public Connection data​(Map<String,String> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chaining data public Connection data​(String... keyvals) Description copied from interface: Connection Add a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English Specified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chaining data public Connection data​(Collection<Connection.KeyVal> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chaining data public Connection.KeyVal data​(String key) Description copied from interface: Connection Get the data KeyVal for this key, if any Specified by: data in interface Connection Parameters: key - the data key Returns: null if not set requestBody public Connection requestBody​(String body) Description copied from interface: Connection Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection Returns: this Request, for chaining header public Connection header​(String name, String value) Description copied from interface: Connection Set a request header. Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers() headers public Connection headers​(Map<String,String> headers) Description copied from interface: Connection Adds each of the supplied headers to the request. Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers() cookie public Connection cookie​(String name, String value) Description copied from interface: Connection Set a cookie to be sent in the request. Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chaining cookies public Connection cookies​(Map<String,String> cookies) Description copied from interface: Connection Adds each of the supplied cookies to the request. Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chaining parser public Connection parser​(Parser parser) Description copied from interface: Connection Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used. Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chaining get public Document get​() throws IOException Description copied from interface: Connection Execute the request as a GET, and parse the result. Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error post public Document post​() throws IOException Description copied from interface: Connection Execute the request as a POST, and parse the result. Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error execute public Connection.Response execute​() throws IOException Description copied from interface: Connection Execute the request. Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error request public Connection.Request request​() Description copied from interface: Connection Get the request object associated with this connection Specified by: request in interface Connection Returns: request request public Connection request​(Connection.Request request) Description copied from interface: Connection Set the connection's request Specified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chaining response public Connection.Response response​() Description copied from interface: Connection Get the response, once the request has been executed Specified by: response in interface Connection Returns: response response public Connection response​(Connection.Response response) Description copied from interface: Connection Set the connection's response Specified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chaining postDataCharset public Connection postDataCharset​(String charset) Description copied from interface: Connection Sets the default post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chainingField Detail CONTENT_ENCODING public static final String CONTENT_ENCODING See Also: Constant Field Values DEFAULT_UA public static final String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA. See Also: Constant Field Values Method Detail connect public static Connection connect​(String url) connect public static Connection connect​(URL url) url public Connection url​(URL url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining url public Connection url​(String url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining proxy public Connection proxy​(Proxy proxy) Description copied from interface: Connection Set the proxy to use for this request. Set to null to disable. Specified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chaining proxy public Connection proxy​(String host, int port) Description copied from interface: Connection Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining userAgent public Connection userAgent​(String userAgent) Description copied from interface: Connection Set the request user-agent header. Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UA timeout public Connection timeout​(int millis) Description copied from interface: Connection Set the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response. Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int) maxBodySize public Connection maxBodySize​(int bytes) Description copied from interface: Connection Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine). Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chaining followRedirects public Connection followRedirects​(boolean followRedirects) Description copied from interface: Connection Configures the connection to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chaining referrer public Connection referrer​(String referrer) Description copied from interface: Connection Set the request referrer (aka "referer") header. Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chaining method public Connection method​(Connection.Method method) Description copied from interface: Connection Set the request method to use, GET or POST. Default is GET. Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chaining ignoreHttpErrors public Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error. Specified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chaining ignoreContentType public Connection ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection Ignore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type. Specified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chaining validateTLSCertificates public Connection validateTLSCertificates​(boolean value) Description copied from interface: Connection Disable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations. Specified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chaining data public Connection data​(String key, String value) Description copied from interface: Connection Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name. Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chaining data public Connection data​(String key, String filename, InputStream inputStream) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype. data public Connection data​(String key, String filename, InputStream inputStream, String contentType) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chaining data public Connection data​(Map<String,String> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chaining data public Connection data​(String... keyvals) Description copied from interface: Connection Add a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English Specified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chaining data public Connection data​(Collection<Connection.KeyVal> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chaining data public Connection.KeyVal data​(String key) Description copied from interface: Connection Get the data KeyVal for this key, if any Specified by: data in interface Connection Parameters: key - the data key Returns: null if not set requestBody public Connection requestBody​(String body) Description copied from interface: Connection Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection Returns: this Request, for chaining header public Connection header​(String name, String value) Description copied from interface: Connection Set a request header. Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers() headers public Connection headers​(Map<String,String> headers) Description copied from interface: Connection Adds each of the supplied headers to the request. Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers() cookie public Connection cookie​(String name, String value) Description copied from interface: Connection Set a cookie to be sent in the request. Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chaining cookies public Connection cookies​(Map<String,String> cookies) Description copied from interface: Connection Adds each of the supplied cookies to the request. Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chaining parser public Connection parser​(Parser parser) Description copied from interface: Connection Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used. Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chaining get public Document get​() throws IOException Description copied from interface: Connection Execute the request as a GET, and parse the result. Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error post public Document post​() throws IOException Description copied from interface: Connection Execute the request as a POST, and parse the result. Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error execute public Connection.Response execute​() throws IOException Description copied from interface: Connection Execute the request. Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error request public Connection.Request request​() Description copied from interface: Connection Get the request object associated with this connection Specified by: request in interface Connection Returns: request request public Connection request​(Connection.Request request) Description copied from interface: Connection Set the connection's request Specified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chaining response public Connection.Response response​() Description copied from interface: Connection Get the response, once the request has been executed Specified by: response in interface Connection Returns: response response public Connection response​(Connection.Response response) Description copied from interface: Connection Set the connection's response Specified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chaining postDataCharset public Connection postDataCharset​(String charset) Description copied from interface: Connection Sets the default post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chainingField Detail CONTENT_ENCODING public static final String CONTENT_ENCODING See Also: Constant Field Values DEFAULT_UA public static final String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA. See Also: Constant Field Values Method Detail connect public static Connection connect​(String url) connect public static Connection connect​(URL url) url public Connection url​(URL url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining url public Connection url​(String url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining proxy public Connection proxy​(Proxy proxy) Description copied from interface: Connection Set the proxy to use for this request. Set to null to disable. Specified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chaining proxy public Connection proxy​(String host, int port) Description copied from interface: Connection Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining userAgent public Connection userAgent​(String userAgent) Description copied from interface: Connection Set the request user-agent header. Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UA timeout public Connection timeout​(int millis) Description copied from interface: Connection Set the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response. Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int) maxBodySize public Connection maxBodySize​(int bytes) Description copied from interface: Connection Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine). Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chaining followRedirects public Connection followRedirects​(boolean followRedirects) Description copied from interface: Connection Configures the connection to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chaining referrer public Connection referrer​(String referrer) Description copied from interface: Connection Set the request referrer (aka "referer") header. Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chaining method public Connection method​(Connection.Method method) Description copied from interface: Connection Set the request method to use, GET or POST. Default is GET. Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chaining ignoreHttpErrors public Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error. Specified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chaining ignoreContentType public Connection ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection Ignore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type. Specified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chaining validateTLSCertificates public Connection validateTLSCertificates​(boolean value) Description copied from interface: Connection Disable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations. Specified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chaining data public Connection data​(String key, String value) Description copied from interface: Connection Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name. Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chaining data public Connection data​(String key, String filename, InputStream inputStream) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype. data public Connection data​(String key, String filename, InputStream inputStream, String contentType) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chaining data public Connection data​(Map<String,String> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chaining data public Connection data​(String... keyvals) Description copied from interface: Connection Add a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English Specified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chaining data public Connection data​(Collection<Connection.KeyVal> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chaining data public Connection.KeyVal data​(String key) Description copied from interface: Connection Get the data KeyVal for this key, if any Specified by: data in interface Connection Parameters: key - the data key Returns: null if not set requestBody public Connection requestBody​(String body) Description copied from interface: Connection Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection Returns: this Request, for chaining header public Connection header​(String name, String value) Description copied from interface: Connection Set a request header. Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers() headers public Connection headers​(Map<String,String> headers) Description copied from interface: Connection Adds each of the supplied headers to the request. Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers() cookie public Connection cookie​(String name, String value) Description copied from interface: Connection Set a cookie to be sent in the request. Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chaining cookies public Connection cookies​(Map<String,String> cookies) Description copied from interface: Connection Adds each of the supplied cookies to the request. Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chaining parser public Connection parser​(Parser parser) Description copied from interface: Connection Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used. Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chaining get public Document get​() throws IOException Description copied from interface: Connection Execute the request as a GET, and parse the result. Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error post public Document post​() throws IOException Description copied from interface: Connection Execute the request as a POST, and parse the result. Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error execute public Connection.Response execute​() throws IOException Description copied from interface: Connection Execute the request. Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error request public Connection.Request request​() Description copied from interface: Connection Get the request object associated with this connection Specified by: request in interface Connection Returns: request request public Connection request​(Connection.Request request) Description copied from interface: Connection Set the connection's request Specified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chaining response public Connection.Response response​() Description copied from interface: Connection Get the response, once the request has been executed Specified by: response in interface Connection Returns: response response public Connection response​(Connection.Response response) Description copied from interface: Connection Set the connection's response Specified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chaining postDataCharset public Connection postDataCharset​(String charset) Description copied from interface: Connection Sets the default post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chainingField Detail CONTENT_ENCODING public static final String CONTENT_ENCODING See Also: Constant Field Values DEFAULT_UA public static final String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA. See Also: Constant Field ValuesField Detail CONTENT_ENCODING public static final String CONTENT_ENCODING See Also: Constant Field Values DEFAULT_UA public static final String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA. See Also: Constant Field ValuesField DetailCONTENT_ENCODING public static final String CONTENT_ENCODING See Also: Constant Field ValuesCONTENT_ENCODING public static final String CONTENT_ENCODING See Also: Constant Field ValuesCONTENT_ENCODINGpublic static final String CONTENT_ENCODINGStringSee Also: Constant Field ValuesSee Also:See Also:Constant Field ValuesConstant Field ValuesDEFAULT_UA public static final String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA. See Also: Constant Field ValuesDEFAULT_UA public static final String DEFAULT_UA Many users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA. See Also: Constant Field ValuesDEFAULT_UApublic static final String DEFAULT_UAStringMany users would get caught by not setting a user-agent and therefore getting different responses on their desktop vs in jsoup, which would otherwise default to Java. So by default, use a desktop UA.JavaSee Also: Constant Field ValuesSee Also:See Also:Constant Field ValuesConstant Field ValuesMethod Detail connect public static Connection connect​(String url) connect public static Connection connect​(URL url) url public Connection url​(URL url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining url public Connection url​(String url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining proxy public Connection proxy​(Proxy proxy) Description copied from interface: Connection Set the proxy to use for this request. Set to null to disable. Specified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chaining proxy public Connection proxy​(String host, int port) Description copied from interface: Connection Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining userAgent public Connection userAgent​(String userAgent) Description copied from interface: Connection Set the request user-agent header. Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UA timeout public Connection timeout​(int millis) Description copied from interface: Connection Set the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response. Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int) maxBodySize public Connection maxBodySize​(int bytes) Description copied from interface: Connection Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine). Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chaining followRedirects public Connection followRedirects​(boolean followRedirects) Description copied from interface: Connection Configures the connection to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chaining referrer public Connection referrer​(String referrer) Description copied from interface: Connection Set the request referrer (aka "referer") header. Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chaining method public Connection method​(Connection.Method method) Description copied from interface: Connection Set the request method to use, GET or POST. Default is GET. Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chaining ignoreHttpErrors public Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error. Specified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chaining ignoreContentType public Connection ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection Ignore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type. Specified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chaining validateTLSCertificates public Connection validateTLSCertificates​(boolean value) Description copied from interface: Connection Disable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations. Specified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chaining data public Connection data​(String key, String value) Description copied from interface: Connection Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name. Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chaining data public Connection data​(String key, String filename, InputStream inputStream) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype. data public Connection data​(String key, String filename, InputStream inputStream, String contentType) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chaining data public Connection data​(Map<String,String> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chaining data public Connection data​(String... keyvals) Description copied from interface: Connection Add a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English Specified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chaining data public Connection data​(Collection<Connection.KeyVal> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chaining data public Connection.KeyVal data​(String key) Description copied from interface: Connection Get the data KeyVal for this key, if any Specified by: data in interface Connection Parameters: key - the data key Returns: null if not set requestBody public Connection requestBody​(String body) Description copied from interface: Connection Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection Returns: this Request, for chaining header public Connection header​(String name, String value) Description copied from interface: Connection Set a request header. Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers() headers public Connection headers​(Map<String,String> headers) Description copied from interface: Connection Adds each of the supplied headers to the request. Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers() cookie public Connection cookie​(String name, String value) Description copied from interface: Connection Set a cookie to be sent in the request. Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chaining cookies public Connection cookies​(Map<String,String> cookies) Description copied from interface: Connection Adds each of the supplied cookies to the request. Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chaining parser public Connection parser​(Parser parser) Description copied from interface: Connection Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used. Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chaining get public Document get​() throws IOException Description copied from interface: Connection Execute the request as a GET, and parse the result. Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error post public Document post​() throws IOException Description copied from interface: Connection Execute the request as a POST, and parse the result. Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error execute public Connection.Response execute​() throws IOException Description copied from interface: Connection Execute the request. Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error request public Connection.Request request​() Description copied from interface: Connection Get the request object associated with this connection Specified by: request in interface Connection Returns: request request public Connection request​(Connection.Request request) Description copied from interface: Connection Set the connection's request Specified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chaining response public Connection.Response response​() Description copied from interface: Connection Get the response, once the request has been executed Specified by: response in interface Connection Returns: response response public Connection response​(Connection.Response response) Description copied from interface: Connection Set the connection's response Specified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chaining postDataCharset public Connection postDataCharset​(String charset) Description copied from interface: Connection Sets the default post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chainingMethod Detail connect public static Connection connect​(String url) connect public static Connection connect​(URL url) url public Connection url​(URL url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining url public Connection url​(String url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chaining proxy public Connection proxy​(Proxy proxy) Description copied from interface: Connection Set the proxy to use for this request. Set to null to disable. Specified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chaining proxy public Connection proxy​(String host, int port) Description copied from interface: Connection Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining userAgent public Connection userAgent​(String userAgent) Description copied from interface: Connection Set the request user-agent header. Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UA timeout public Connection timeout​(int millis) Description copied from interface: Connection Set the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response. Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int) maxBodySize public Connection maxBodySize​(int bytes) Description copied from interface: Connection Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine). Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chaining followRedirects public Connection followRedirects​(boolean followRedirects) Description copied from interface: Connection Configures the connection to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chaining referrer public Connection referrer​(String referrer) Description copied from interface: Connection Set the request referrer (aka "referer") header. Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chaining method public Connection method​(Connection.Method method) Description copied from interface: Connection Set the request method to use, GET or POST. Default is GET. Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chaining ignoreHttpErrors public Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error. Specified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chaining ignoreContentType public Connection ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection Ignore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type. Specified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chaining validateTLSCertificates public Connection validateTLSCertificates​(boolean value) Description copied from interface: Connection Disable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations. Specified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chaining data public Connection data​(String key, String value) Description copied from interface: Connection Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name. Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chaining data public Connection data​(String key, String filename, InputStream inputStream) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype. data public Connection data​(String key, String filename, InputStream inputStream, String contentType) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chaining data public Connection data​(Map<String,String> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chaining data public Connection data​(String... keyvals) Description copied from interface: Connection Add a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English Specified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chaining data public Connection data​(Collection<Connection.KeyVal> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chaining data public Connection.KeyVal data​(String key) Description copied from interface: Connection Get the data KeyVal for this key, if any Specified by: data in interface Connection Parameters: key - the data key Returns: null if not set requestBody public Connection requestBody​(String body) Description copied from interface: Connection Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection Returns: this Request, for chaining header public Connection header​(String name, String value) Description copied from interface: Connection Set a request header. Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers() headers public Connection headers​(Map<String,String> headers) Description copied from interface: Connection Adds each of the supplied headers to the request. Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers() cookie public Connection cookie​(String name, String value) Description copied from interface: Connection Set a cookie to be sent in the request. Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chaining cookies public Connection cookies​(Map<String,String> cookies) Description copied from interface: Connection Adds each of the supplied cookies to the request. Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chaining parser public Connection parser​(Parser parser) Description copied from interface: Connection Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used. Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chaining get public Document get​() throws IOException Description copied from interface: Connection Execute the request as a GET, and parse the result. Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error post public Document post​() throws IOException Description copied from interface: Connection Execute the request as a POST, and parse the result. Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error execute public Connection.Response execute​() throws IOException Description copied from interface: Connection Execute the request. Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on error request public Connection.Request request​() Description copied from interface: Connection Get the request object associated with this connection Specified by: request in interface Connection Returns: request request public Connection request​(Connection.Request request) Description copied from interface: Connection Set the connection's request Specified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chaining response public Connection.Response response​() Description copied from interface: Connection Get the response, once the request has been executed Specified by: response in interface Connection Returns: response response public Connection response​(Connection.Response response) Description copied from interface: Connection Set the connection's response Specified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chaining postDataCharset public Connection postDataCharset​(String charset) Description copied from interface: Connection Sets the default post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chainingMethod Detailconnect public static Connection connect​(String url)connect public static Connection connect​(String url)connectpublic static Connection connect​(String url)ConnectionStringconnect public static Connection connect​(URL url)connect public static Connection connect​(URL url)connectpublic static Connection connect​(URL url)ConnectionURLurl public Connection url​(URL url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chainingurl public Connection url​(URL url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chainingurlpublic Connection url​(URL url)ConnectionURLDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the request URL to fetch. The protocol must be HTTP or HTTPS.Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chainingSpecified by:Specified by:url in interface ConnectionurlurlConnectionConnectionParameters:Parameters:url - URL to connect tourlReturns:Returns:this Connection, for chainingurl public Connection url​(String url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chainingurl public Connection url​(String url) Description copied from interface: Connection Set the request URL to fetch. The protocol must be HTTP or HTTPS. Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chainingurlpublic Connection url​(String url)ConnectionStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the request URL to fetch. The protocol must be HTTP or HTTPS.Specified by: url in interface Connection Parameters: url - URL to connect to Returns: this Connection, for chainingSpecified by:Specified by:url in interface ConnectionurlurlConnectionConnectionParameters:Parameters:url - URL to connect tourlReturns:Returns:this Connection, for chainingproxy public Connection proxy​(Proxy proxy) Description copied from interface: Connection Set the proxy to use for this request. Set to null to disable. Specified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chainingproxy public Connection proxy​(Proxy proxy) Description copied from interface: Connection Set the proxy to use for this request. Set to null to disable. Specified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chainingproxypublic Connection proxy​(Proxy proxy)ConnectionProxyDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the proxy to use for this request. Set to null to disable.nullSpecified by: proxy in interface Connection Parameters: proxy - proxy to use Returns: this Connection, for chainingSpecified by:Specified by:proxy in interface ConnectionproxyproxyConnectionConnectionParameters:Parameters:proxy - proxy to useproxyReturns:Returns:this Connection, for chainingproxy public Connection proxy​(String host, int port) Description copied from interface: Connection Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chainingproxy public Connection proxy​(String host, int port) Description copied from interface: Connection Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chainingproxypublic Connection proxy​(String host, int port)ConnectionStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the HTTP proxy to use for this request.Specified by: proxy in interface Connection Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chainingSpecified by:Specified by:proxy in interface ConnectionproxyproxyConnectionConnectionParameters:Parameters:host - the proxy hostnamehostport - the proxy portportReturns:Returns:this Connection, for chaininguserAgent public Connection userAgent​(String userAgent) Description copied from interface: Connection Set the request user-agent header. Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UAuserAgent public Connection userAgent​(String userAgent) Description copied from interface: Connection Set the request user-agent header. Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UAuserAgentpublic Connection userAgent​(String userAgent)ConnectionStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the request user-agent header.Specified by: userAgent in interface Connection Parameters: userAgent - user-agent to use Returns: this Connection, for chaining See Also: DEFAULT_UASpecified by:Specified by:userAgent in interface ConnectionuserAgentuserAgentConnectionConnectionParameters:Parameters:userAgent - user-agent to useuserAgentReturns:Returns:this Connection, for chainingSee Also:See Also:DEFAULT_UADEFAULT_UADEFAULT_UAtimeout public Connection timeout​(int millis) Description copied from interface: Connection Set the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response. Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int)timeout public Connection timeout​(int millis) Description copied from interface: Connection Set the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response. Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int)timeoutpublic Connection timeout​(int millis)ConnectionDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the total request timeout duration. If a timeout occurs, an SocketTimeoutException will be thrown. The default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout. Note that this timeout specifies the combined maximum duration of the connection time and the time to read the full response.SocketTimeoutExceptionSocketTimeoutExceptionThe default timeout is 30 seconds (30,000 millis). A timeout of zero is treated as an infinite timeout.30 secondsNote that this timeout specifies the combined maximum duration of the connection time and the time to read the full response.Specified by: timeout in interface Connection Parameters: millis - number of milliseconds (thousandths of a second) before timing out connects or reads. Returns: this Connection, for chaining See Also: Connection.maxBodySize(int)Specified by:Specified by:timeout in interface ConnectiontimeouttimeoutConnectionConnectionParameters:Parameters:millis - number of milliseconds (thousandths of a second) before timing out connects or reads.millisReturns:Returns:this Connection, for chainingSee Also:See Also:Connection.maxBodySize(int)Connection.maxBodySize(int)Connection.maxBodySize(int)maxBodySize public Connection maxBodySize​(int bytes) Description copied from interface: Connection Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine). Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chainingmaxBodySize public Connection maxBodySize​(int bytes) Description copied from interface: Connection Set the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine). Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chainingmaxBodySizepublic Connection maxBodySize​(int bytes)ConnectionDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the maximum bytes to read from the (uncompressed) connection into the body, before the connection is closed, and the input truncated. The default maximum is 1MB. A max size of zero is treated as an infinite amount (bounded only by your patience and the memory available on your machine).Specified by: maxBodySize in interface Connection Parameters: bytes - number of bytes to read from the input before truncating Returns: this Connection, for chainingSpecified by:Specified by:maxBodySize in interface ConnectionmaxBodySizemaxBodySizeConnectionConnectionParameters:Parameters:bytes - number of bytes to read from the input before truncatingbytesReturns:Returns:this Connection, for chainingfollowRedirects public Connection followRedirects​(boolean followRedirects) Description copied from interface: Connection Configures the connection to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chainingfollowRedirects public Connection followRedirects​(boolean followRedirects) Description copied from interface: Connection Configures the connection to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chainingfollowRedirectspublic Connection followRedirects​(boolean followRedirects)ConnectionDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionConfigures the connection to (not) follow server redirects. By default this is true.trueSpecified by: followRedirects in interface Connection Parameters: followRedirects - true if server redirects should be followed. Returns: this Connection, for chainingSpecified by:Specified by:followRedirects in interface ConnectionfollowRedirectsfollowRedirectsConnectionConnectionParameters:Parameters:followRedirects - true if server redirects should be followed.followRedirectsReturns:Returns:this Connection, for chainingreferrer public Connection referrer​(String referrer) Description copied from interface: Connection Set the request referrer (aka "referer") header. Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chainingreferrer public Connection referrer​(String referrer) Description copied from interface: Connection Set the request referrer (aka "referer") header. Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chainingreferrerpublic Connection referrer​(String referrer)ConnectionStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the request referrer (aka "referer") header.Specified by: referrer in interface Connection Parameters: referrer - referrer to use Returns: this Connection, for chainingSpecified by:Specified by:referrer in interface ConnectionreferrerreferrerConnectionConnectionParameters:Parameters:referrer - referrer to usereferrerReturns:Returns:this Connection, for chainingmethod public Connection method​(Connection.Method method) Description copied from interface: Connection Set the request method to use, GET or POST. Default is GET. Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chainingmethod public Connection method​(Connection.Method method) Description copied from interface: Connection Set the request method to use, GET or POST. Default is GET. Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chainingmethodpublic Connection method​(Connection.Method method)ConnectionConnection.MethodDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the request method to use, GET or POST. Default is GET.Specified by: method in interface Connection Parameters: method - HTTP request method Returns: this Connection, for chainingSpecified by:Specified by:method in interface ConnectionmethodmethodConnectionConnectionParameters:Parameters:method - HTTP request methodmethodReturns:Returns:this Connection, for chainingignoreHttpErrors public Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error. Specified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chainingignoreHttpErrors public Connection ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection Configures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error. Specified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chainingignoreHttpErrorspublic Connection ignoreHttpErrors​(boolean ignoreHttpErrors)ConnectionDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionConfigures the connection to not throw exceptions when a HTTP error occurs. (4xx - 5xx, e.g. 404 or 500). By default this is false; an IOException is thrown if an error is encountered. If set to true, the response is populated with the error body, and the status message will reflect the error.falsetrueSpecified by: ignoreHttpErrors in interface Connection Parameters: ignoreHttpErrors - - false (default) if HTTP errors should be ignored. Returns: this Connection, for chainingSpecified by:Specified by:ignoreHttpErrors in interface ConnectionignoreHttpErrorsignoreHttpErrorsConnectionConnectionParameters:Parameters:ignoreHttpErrors - - false (default) if HTTP errors should be ignored.ignoreHttpErrorsReturns:Returns:this Connection, for chainingignoreContentType public Connection ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection Ignore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type. Specified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chainingignoreContentType public Connection ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection Ignore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type. Specified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chainingignoreContentTypepublic Connection ignoreContentType​(boolean ignoreContentType)ConnectionDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionIgnore the document's Content-Type when parsing the response. By default this is false, an unrecognised content-type will cause an IOException to be thrown. (This is to prevent producing garbage by attempting to parse a JPEG binary image, for example.) Set to true to force a parse attempt regardless of content type.falseSpecified by: ignoreContentType in interface Connection Parameters: ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document. Returns: this Connection, for chainingSpecified by:Specified by:ignoreContentType in interface ConnectionignoreContentTypeignoreContentTypeConnectionConnectionParameters:Parameters:ignoreContentType - set to true if you would like the content type ignored on parsing the response into a Document.ignoreContentTypeReturns:Returns:this Connection, for chainingvalidateTLSCertificates public Connection validateTLSCertificates​(boolean value) Description copied from interface: Connection Disable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations. Specified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chainingvalidateTLSCertificates public Connection validateTLSCertificates​(boolean value) Description copied from interface: Connection Disable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations. Specified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chainingvalidateTLSCertificatespublic Connection validateTLSCertificates​(boolean value)ConnectionDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionDisable/enable TLS certificates validation for HTTPS requests. By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate. Some servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting. Be careful and understand why you need to disable these validations.By default this is true; all connections over HTTPS perform normal validation of certificates, and will abort requests if the provided certificate does not validate.trueSome servers use expired, self-generated certificates; or your JDK may not support SNI hosts. In which case, you may want to enable this setting.Be careful and understand why you need to disable these validations.Be carefulSpecified by: validateTLSCertificates in interface Connection Parameters: value - if should validate TLS (SSL) certificates. true by default. Returns: this Connection, for chainingSpecified by:Specified by:validateTLSCertificates in interface ConnectionvalidateTLSCertificatesvalidateTLSCertificatesConnectionConnectionParameters:Parameters:value - if should validate TLS (SSL) certificates. true by default.valuetrueReturns:Returns:this Connection, for chainingdata public Connection data​(String key, String value) Description copied from interface: Connection Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name. Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chainingdata public Connection data​(String key, String value) Description copied from interface: Connection Add a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name. Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chainingdatapublic Connection data​(String key, String value)ConnectionStringStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionAdd a request data parameter. Request parameters are sent in the request query string for GETs, and in the request body for POSTs. A request may have multiple values of the same name.Specified by: data in interface Connection Parameters: key - data key value - data value Returns: this Connection, for chainingSpecified by:Specified by:data in interface ConnectiondatadataConnectionConnectionParameters:Parameters:key - data keykeyvalue - data valuevalueReturns:Returns:this Connection, for chainingdata public Connection data​(String key, String filename, InputStream inputStream) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype.data public Connection data​(String key, String filename, InputStream inputStream) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype.datapublic Connection data​(String key, String filename, InputStream inputStream)ConnectionStringStringInputStreamDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionAdd an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream.Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block. Returns: this Connections, for chaining See Also: if you want to set the uploaded file's mimetype.Specified by:Specified by:data in interface ConnectiondatadataConnectionConnectionParameters:Parameters:key - data key (form item name)keyfilename - the name of the file to present to the remove server. Typically just the name, not path, component.filenameinputStream - the input stream to upload, that you probably obtained from a FileInputStream. You must close the InputStream in a finally block.inputStreamFileInputStreamFileInputStreamfinallyReturns:Returns:this Connections, for chainingSee Also:See Also:if you want to set the uploaded file's mimetype.if you want to set the uploaded file's mimetype.if you want to set the uploaded file's mimetype.data public Connection data​(String key, String filename, InputStream inputStream, String contentType) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chainingdata public Connection data​(String key, String filename, InputStream inputStream, String contentType) Description copied from interface: Connection Add an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream. Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chainingdatapublic Connection data​(String key, String filename, InputStream inputStream, String contentType)ConnectionStringStringInputStreamStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionAdd an input stream as a request data parameter. For GETs, has no effect, but for POSTS this will upload the input stream.Specified by: data in interface Connection Parameters: key - data key (form item name) filename - the name of the file to present to the remove server. Typically just the name, not path, component. inputStream - the input stream to upload, that you probably obtained from a FileInputStream. contentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block. Returns: this Connections, for chainingSpecified by:Specified by:data in interface ConnectiondatadataConnectionConnectionParameters:Parameters:key - data key (form item name)keyfilename - the name of the file to present to the remove server. Typically just the name, not path, component.filenameinputStream - the input stream to upload, that you probably obtained from a FileInputStream.inputStreamFileInputStreamFileInputStreamcontentType - the Content Type (aka mimetype) to specify for this file. You must close the InputStream in a finally block.contentTypefinallyReturns:Returns:this Connections, for chainingdata public Connection data​(Map<String,String> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chainingdata public Connection data​(Map<String,String> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chainingdatapublic Connection data​(Map<String,String> data)ConnectionMapStringStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionAdds all of the supplied data to the request data parametersSpecified by: data in interface Connection Parameters: data - map of data parameters Returns: this Connection, for chainingSpecified by:Specified by:data in interface ConnectiondatadataConnectionConnectionParameters:Parameters:data - map of data parametersdataReturns:Returns:this Connection, for chainingdata public Connection data​(String... keyvals) Description copied from interface: Connection Add a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English Specified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chainingdata public Connection data​(String... keyvals) Description copied from interface: Connection Add a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English Specified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chainingdatapublic Connection data​(String... keyvals)ConnectionStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionAdd a number of request data parameters. Multiple parameters may be set at once, e.g.: .data("name", "jsoup", "language", "Java", "language", "English"); creates a query string like: ?name=jsoup&language=Java&language=English.data("name", "jsoup", "language", "Java", "language", "English");?name=jsoup&language=Java&language=EnglishSpecified by: data in interface Connection Parameters: keyvals - a set of key value pairs. Returns: this Connection, for chainingSpecified by:Specified by:data in interface ConnectiondatadataConnectionConnectionParameters:Parameters:keyvals - a set of key value pairs.keyvalsReturns:Returns:this Connection, for chainingdata public Connection data​(Collection<Connection.KeyVal> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chainingdata public Connection data​(Collection<Connection.KeyVal> data) Description copied from interface: Connection Adds all of the supplied data to the request data parameters Specified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chainingdatapublic Connection data​(Collection<Connection.KeyVal> data)ConnectionCollectionConnection.KeyValDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionAdds all of the supplied data to the request data parametersSpecified by: data in interface Connection Parameters: data - collection of data parameters Returns: this Connection, for chainingSpecified by:Specified by:data in interface ConnectiondatadataConnectionConnectionParameters:Parameters:data - collection of data parametersdataReturns:Returns:this Connection, for chainingdata public Connection.KeyVal data​(String key) Description copied from interface: Connection Get the data KeyVal for this key, if any Specified by: data in interface Connection Parameters: key - the data key Returns: null if not setdata public Connection.KeyVal data​(String key) Description copied from interface: Connection Get the data KeyVal for this key, if any Specified by: data in interface Connection Parameters: key - the data key Returns: null if not setdatapublic Connection.KeyVal data​(String key)Connection.KeyValStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionGet the data KeyVal for this key, if anySpecified by: data in interface Connection Parameters: key - the data key Returns: null if not setSpecified by:Specified by:data in interface ConnectiondatadataConnectionConnectionParameters:Parameters:key - the data keykeyReturns:Returns:null if not setrequestBody public Connection requestBody​(String body) Description copied from interface: Connection Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection Returns: this Request, for chainingrequestBody public Connection requestBody​(String body) Description copied from interface: Connection Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection Returns: this Request, for chainingrequestBodypublic Connection requestBody​(String body)ConnectionStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params.Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post();Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post();Specified by: requestBody in interface Connection Returns: this Request, for chainingSpecified by:Specified by:requestBody in interface ConnectionrequestBodyrequestBodyConnectionConnectionReturns:Returns:this Request, for chainingheader public Connection header​(String name, String value) Description copied from interface: Connection Set a request header. Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers()header public Connection header​(String name, String value) Description copied from interface: Connection Set a request header. Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers()headerpublic Connection header​(String name, String value)ConnectionStringStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet a request header.Specified by: header in interface Connection Parameters: name - header name value - header value Returns: this Connection, for chaining See Also: Connection.Base.headers()Specified by:Specified by:header in interface ConnectionheaderheaderConnectionConnectionParameters:Parameters:name - header namenamevalue - header valuevalueReturns:Returns:this Connection, for chainingSee Also:See Also:Connection.Base.headers()Connection.Base.headers()Connection.Base.headers()headers public Connection headers​(Map<String,String> headers) Description copied from interface: Connection Adds each of the supplied headers to the request. Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers()headers public Connection headers​(Map<String,String> headers) Description copied from interface: Connection Adds each of the supplied headers to the request. Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers()headerspublic Connection headers​(Map<String,String> headers)ConnectionMapStringStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionAdds each of the supplied headers to the request.Specified by: headers in interface Connection Parameters: headers - map of headers name -> value pairs Returns: this Connection, for chaining See Also: Connection.Base.headers()Specified by:Specified by:headers in interface ConnectionheadersheadersConnectionConnectionParameters:Parameters:headers - map of headers name -> value pairsheadersReturns:Returns:this Connection, for chainingSee Also:See Also:Connection.Base.headers()Connection.Base.headers()Connection.Base.headers()cookie public Connection cookie​(String name, String value) Description copied from interface: Connection Set a cookie to be sent in the request. Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chainingcookie public Connection cookie​(String name, String value) Description copied from interface: Connection Set a cookie to be sent in the request. Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chainingcookiepublic Connection cookie​(String name, String value)ConnectionStringStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet a cookie to be sent in the request.Specified by: cookie in interface Connection Parameters: name - name of cookie value - value of cookie Returns: this Connection, for chainingSpecified by:Specified by:cookie in interface ConnectioncookiecookieConnectionConnectionParameters:Parameters:name - name of cookienamevalue - value of cookievalueReturns:Returns:this Connection, for chainingcookies public Connection cookies​(Map<String,String> cookies) Description copied from interface: Connection Adds each of the supplied cookies to the request. Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chainingcookies public Connection cookies​(Map<String,String> cookies) Description copied from interface: Connection Adds each of the supplied cookies to the request. Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chainingcookiespublic Connection cookies​(Map<String,String> cookies)ConnectionMapStringStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionAdds each of the supplied cookies to the request.Specified by: cookies in interface Connection Parameters: cookies - map of cookie name -> value pairs Returns: this Connection, for chainingSpecified by:Specified by:cookies in interface ConnectioncookiescookiesConnectionConnectionParameters:Parameters:cookies - map of cookie name -> value pairscookiesReturns:Returns:this Connection, for chainingparser public Connection parser​(Parser parser) Description copied from interface: Connection Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used. Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chainingparser public Connection parser​(Parser parser) Description copied from interface: Connection Provide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used. Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chainingparserpublic Connection parser​(Parser parser)ConnectionParserDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionProvide an alternate parser to use when parsing the response to a Document. If not set, defaults to the HTML parser, unless the response content-type is XML, in which case the XML parser is used.Specified by: parser in interface Connection Parameters: parser - alternate parser Returns: this Connection, for chainingSpecified by:Specified by:parser in interface ConnectionparserparserConnectionConnectionParameters:Parameters:parser - alternate parserparserReturns:Returns:this Connection, for chainingget public Document get​() throws IOException Description copied from interface: Connection Execute the request as a GET, and parse the result. Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on errorget public Document get​() throws IOException Description copied from interface: Connection Execute the request as a GET, and parse the result. Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on errorgetpublic Document get​() throws IOExceptionDocumentIOExceptionDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionExecute the request as a GET, and parse the result.Specified by: get in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on errorSpecified by:Specified by:get in interface ConnectiongetgetConnectionConnectionReturns:Returns:parsed DocumentThrows:Throws:MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformedMalformedURLExceptionMalformedURLExceptionHttpStatusException - if the response is not OK and HTTP response errors are not ignoredHttpStatusExceptionHttpStatusExceptionUnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignoredUnsupportedMimeTypeExceptionUnsupportedMimeTypeExceptionSocketTimeoutException - if the connection times outSocketTimeoutExceptionSocketTimeoutExceptionIOException - on errorIOExceptionIOExceptionpost public Document post​() throws IOException Description copied from interface: Connection Execute the request as a POST, and parse the result. Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on errorpost public Document post​() throws IOException Description copied from interface: Connection Execute the request as a POST, and parse the result. Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on errorpostpublic Document post​() throws IOExceptionDocumentIOExceptionDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionExecute the request as a POST, and parse the result.Specified by: post in interface Connection Returns: parsed Document Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on errorSpecified by:Specified by:post in interface ConnectionpostpostConnectionConnectionReturns:Returns:parsed DocumentThrows:Throws:MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformedMalformedURLExceptionMalformedURLExceptionHttpStatusException - if the response is not OK and HTTP response errors are not ignoredHttpStatusExceptionHttpStatusExceptionUnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignoredUnsupportedMimeTypeExceptionUnsupportedMimeTypeExceptionSocketTimeoutException - if the connection times outSocketTimeoutExceptionSocketTimeoutExceptionIOException - on errorIOExceptionIOExceptionexecute public Connection.Response execute​() throws IOException Description copied from interface: Connection Execute the request. Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on errorexecute public Connection.Response execute​() throws IOException Description copied from interface: Connection Execute the request. Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on errorexecutepublic Connection.Response execute​() throws IOExceptionConnection.ResponseIOExceptionDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionExecute the request.Specified by: execute in interface Connection Returns: a response object Throws: MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformed HttpStatusException - if the response is not OK and HTTP response errors are not ignored UnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignored SocketTimeoutException - if the connection times out IOException - on errorSpecified by:Specified by:execute in interface ConnectionexecuteexecuteConnectionConnectionReturns:Returns:a response objectThrows:Throws:MalformedURLException - if the request URL is not a HTTP or HTTPS URL, or is otherwise malformedMalformedURLExceptionMalformedURLExceptionHttpStatusException - if the response is not OK and HTTP response errors are not ignoredHttpStatusExceptionHttpStatusExceptionUnsupportedMimeTypeException - if the response mime type is not supported and those errors are not ignoredUnsupportedMimeTypeExceptionUnsupportedMimeTypeExceptionSocketTimeoutException - if the connection times outSocketTimeoutExceptionSocketTimeoutExceptionIOException - on errorIOExceptionIOExceptionrequest public Connection.Request request​() Description copied from interface: Connection Get the request object associated with this connection Specified by: request in interface Connection Returns: requestrequest public Connection.Request request​() Description copied from interface: Connection Get the request object associated with this connection Specified by: request in interface Connection Returns: requestrequestpublic Connection.Request request​()Connection.RequestDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionGet the request object associated with this connectionSpecified by: request in interface Connection Returns: requestSpecified by:Specified by:request in interface ConnectionrequestrequestConnectionConnectionReturns:Returns:requestrequest public Connection request​(Connection.Request request) Description copied from interface: Connection Set the connection's request Specified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chainingrequest public Connection request​(Connection.Request request) Description copied from interface: Connection Set the connection's request Specified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chainingrequestpublic Connection request​(Connection.Request request)ConnectionConnection.RequestDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the connection's requestSpecified by: request in interface Connection Parameters: request - new request object Returns: this Connection, for chainingSpecified by:Specified by:request in interface ConnectionrequestrequestConnectionConnectionParameters:Parameters:request - new request objectrequestReturns:Returns:this Connection, for chainingresponse public Connection.Response response​() Description copied from interface: Connection Get the response, once the request has been executed Specified by: response in interface Connection Returns: responseresponse public Connection.Response response​() Description copied from interface: Connection Get the response, once the request has been executed Specified by: response in interface Connection Returns: responseresponsepublic Connection.Response response​()Connection.ResponseDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionGet the response, once the request has been executedSpecified by: response in interface Connection Returns: responseSpecified by:Specified by:response in interface ConnectionresponseresponseConnectionConnectionReturns:Returns:responseresponse public Connection response​(Connection.Response response) Description copied from interface: Connection Set the connection's response Specified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chainingresponse public Connection response​(Connection.Response response) Description copied from interface: Connection Set the connection's response Specified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chainingresponsepublic Connection response​(Connection.Response response)ConnectionConnection.ResponseDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSet the connection's responseSpecified by: response in interface Connection Parameters: response - new response Returns: this Connection, for chainingSpecified by:Specified by:response in interface ConnectionresponseresponseConnectionConnectionParameters:Parameters:response - new responseresponseReturns:Returns:this Connection, for chainingpostDataCharset public Connection postDataCharset​(String charset) Description copied from interface: Connection Sets the default post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chainingpostDataCharset public Connection postDataCharset​(String charset) Description copied from interface: Connection Sets the default post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chainingpostDataCharsetpublic Connection postDataCharset​(String charset)ConnectionStringDescription copied from interface: ConnectionDescription copied from interface: ConnectionConnectionConnectionSets the default post data character set for x-www-form-urlencoded post dataSpecified by: postDataCharset in interface Connection Parameters: charset - character set to encode post data Returns: this Connection, for chainingSpecified by:Specified by:postDataCharset in interface ConnectionpostDataCharsetpostDataCharsetConnectionConnectionParameters:Parameters:charset - character set to encode post datacharsetReturns:Returns:this Connection, for chainingSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll Classes<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |NestedField |FieldConstr |MethodMethodDetail: Field | Constr | MethodDetail:Field |FieldConstr |MethodMethodCopyright © 2009–2017 Jonathan Hedley. All rights reserved.Copyright © 2009–2017 Jonathan Hedley. All rights reserved.Jonathan Hedley