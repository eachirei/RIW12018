<div> JavaScript is disabled on your browser. </div> Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Package org.jsoup.helper Class HttpConnection.Request java.lang.Object org.jsoup.helper.HttpConnection.Request All Implemented Interfaces: Connection.Base<Connection.Request>, Connection.Request Enclosing class: HttpConnection public static class HttpConnection.Request extends Object implements Connection.Request Method Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description Collection<Connection.KeyVal> data​() Get all of the request's data parameters HttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the request boolean followRedirects​() Get the current followRedirects configuration. Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects. boolean ignoreContentType​() Get the current ignoreContentType configuration. Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response. boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration. Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response. int maxBodySize​() Get the maximum body size, in bytes. Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes. Parser parser​() Get the current parser to use when parsing the document. HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document. String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post data Connection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post data Proxy proxy​() Get the proxy used for this request. HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request. HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request. String requestBody​() Get the current request body. Connection.Request requestBody​(String body) Set a POST (or PUT) request body. int timeout​() Get the request timeout, in milliseconds. HttpConnection.Request timeout​(int millis) Update the request timeout. boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation. void validateTLSCertificates​(boolean value) Set TLS certificate validation. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Method Detail proxy public Proxy proxy​() Description copied from interface: Connection.Request Get the proxy used for this request. Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled. proxy public HttpConnection.Request proxy​(Proxy proxy) Description copied from interface: Connection.Request Update the proxy for this request. Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chaining proxy public HttpConnection.Request proxy​(String host, int port) Description copied from interface: Connection.Request Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining timeout public int timeout​() Description copied from interface: Connection.Request Get the request timeout, in milliseconds. Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds. timeout public HttpConnection.Request timeout​(int millis) Description copied from interface: Connection.Request Update the request timeout. Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chaining maxBodySize public int maxBodySize​() Description copied from interface: Connection.Request Get the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes. maxBodySize public Connection.Request maxBodySize​(int bytes) Description copied from interface: Connection.Request Update the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chaining followRedirects public boolean followRedirects​() Description copied from interface: Connection.Request Get the current followRedirects configuration. Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled. followRedirects public Connection.Request followRedirects​(boolean followRedirects) Description copied from interface: Connection.Request Configures the request to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chaining ignoreHttpErrors public boolean ignoreHttpErrors​() Description copied from interface: Connection.Request Get the current ignoreHttpErrors configuration. Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown. validateTLSCertificates public boolean validateTLSCertificates​() Description copied from interface: Connection.Request Get the current state of TLS (SSL) certificate validation. Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabled validateTLSCertificates public void validateTLSCertificates​(boolean value) Description copied from interface: Connection.Request Set TLS certificate validation. True by default. Specified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificates ignoreHttpErrors public Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection.Request Configures the request to ignore HTTP errors in the response. Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chaining ignoreContentType public boolean ignoreContentType​() Description copied from interface: Connection.Request Get the current ignoreContentType configuration. Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown. ignoreContentType public Connection.Request ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection.Request Configures the request to ignore the Content-Type of the response. Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chaining data public HttpConnection.Request data​(Connection.KeyVal keyval) Description copied from interface: Connection.Request Add a data parameter to the request Specified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chaining data public Collection<Connection.KeyVal> data​() Description copied from interface: Connection.Request Get all of the request's data parameters Specified by: data in interface Connection.Request Returns: collection of keyvals requestBody public Connection.Request requestBody​(String body) Description copied from interface: Connection.Request Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection.Request Returns: this Request, for chaining requestBody public String requestBody​() Description copied from interface: Connection.Request Get the current request body. Specified by: requestBody in interface Connection.Request Returns: null if not set. parser public HttpConnection.Request parser​(Parser parser) Description copied from interface: Connection.Request Specify the parser to use when parsing the document. Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chaining parser public Parser parser​() Description copied from interface: Connection.Request Get the current parser to use when parsing the document. Specified by: parser in interface Connection.Request Returns: current Parser postDataCharset public Connection.Request postDataCharset​(String charset) Description copied from interface: Connection.Request Sets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chaining postDataCharset public String postDataCharset​() Description copied from interface: Connection.Request Gets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Returns: character set to encode post data Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Copyright © 2009–2017 Jonathan Hedley. All rights reserved.<div> JavaScript is disabled on your browser. </div>Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll ClassesSEARCH:SEARCH:SEARCH:<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |Field |Constr |MethodMethodDetail: Field | Constr | MethodDetail:Field |Constr |MethodMethodPackage org.jsoup.helper Class HttpConnection.RequestPackage org.jsoup.helperPackageorg.jsoup.helperClass HttpConnection.Requestjava.lang.Object org.jsoup.helper.HttpConnection.Request All Implemented Interfaces: Connection.Base<Connection.Request>, Connection.Request Enclosing class: HttpConnection public static class HttpConnection.Request extends Object implements Connection.Request Method Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description Collection<Connection.KeyVal> data​() Get all of the request's data parameters HttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the request boolean followRedirects​() Get the current followRedirects configuration. Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects. boolean ignoreContentType​() Get the current ignoreContentType configuration. Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response. boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration. Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response. int maxBodySize​() Get the maximum body size, in bytes. Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes. Parser parser​() Get the current parser to use when parsing the document. HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document. String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post data Connection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post data Proxy proxy​() Get the proxy used for this request. HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request. HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request. String requestBody​() Get the current request body. Connection.Request requestBody​(String body) Set a POST (or PUT) request body. int timeout​() Get the request timeout, in milliseconds. HttpConnection.Request timeout​(int millis) Update the request timeout. boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation. void validateTLSCertificates​(boolean value) Set TLS certificate validation. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Method Detail proxy public Proxy proxy​() Description copied from interface: Connection.Request Get the proxy used for this request. Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled. proxy public HttpConnection.Request proxy​(Proxy proxy) Description copied from interface: Connection.Request Update the proxy for this request. Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chaining proxy public HttpConnection.Request proxy​(String host, int port) Description copied from interface: Connection.Request Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining timeout public int timeout​() Description copied from interface: Connection.Request Get the request timeout, in milliseconds. Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds. timeout public HttpConnection.Request timeout​(int millis) Description copied from interface: Connection.Request Update the request timeout. Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chaining maxBodySize public int maxBodySize​() Description copied from interface: Connection.Request Get the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes. maxBodySize public Connection.Request maxBodySize​(int bytes) Description copied from interface: Connection.Request Update the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chaining followRedirects public boolean followRedirects​() Description copied from interface: Connection.Request Get the current followRedirects configuration. Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled. followRedirects public Connection.Request followRedirects​(boolean followRedirects) Description copied from interface: Connection.Request Configures the request to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chaining ignoreHttpErrors public boolean ignoreHttpErrors​() Description copied from interface: Connection.Request Get the current ignoreHttpErrors configuration. Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown. validateTLSCertificates public boolean validateTLSCertificates​() Description copied from interface: Connection.Request Get the current state of TLS (SSL) certificate validation. Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabled validateTLSCertificates public void validateTLSCertificates​(boolean value) Description copied from interface: Connection.Request Set TLS certificate validation. True by default. Specified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificates ignoreHttpErrors public Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection.Request Configures the request to ignore HTTP errors in the response. Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chaining ignoreContentType public boolean ignoreContentType​() Description copied from interface: Connection.Request Get the current ignoreContentType configuration. Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown. ignoreContentType public Connection.Request ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection.Request Configures the request to ignore the Content-Type of the response. Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chaining data public HttpConnection.Request data​(Connection.KeyVal keyval) Description copied from interface: Connection.Request Add a data parameter to the request Specified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chaining data public Collection<Connection.KeyVal> data​() Description copied from interface: Connection.Request Get all of the request's data parameters Specified by: data in interface Connection.Request Returns: collection of keyvals requestBody public Connection.Request requestBody​(String body) Description copied from interface: Connection.Request Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection.Request Returns: this Request, for chaining requestBody public String requestBody​() Description copied from interface: Connection.Request Get the current request body. Specified by: requestBody in interface Connection.Request Returns: null if not set. parser public HttpConnection.Request parser​(Parser parser) Description copied from interface: Connection.Request Specify the parser to use when parsing the document. Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chaining parser public Parser parser​() Description copied from interface: Connection.Request Get the current parser to use when parsing the document. Specified by: parser in interface Connection.Request Returns: current Parser postDataCharset public Connection.Request postDataCharset​(String charset) Description copied from interface: Connection.Request Sets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chaining postDataCharset public String postDataCharset​() Description copied from interface: Connection.Request Gets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Returns: character set to encode post datajava.lang.Object org.jsoup.helper.HttpConnection.Requestjava.lang.Objectjava.lang.Objectorg.jsoup.helper.HttpConnection.Requestorg.jsoup.helper.HttpConnection.Requestorg.jsoup.helper.HttpConnection.RequestAll Implemented Interfaces: Connection.Base<Connection.Request>, Connection.Request Enclosing class: HttpConnection public static class HttpConnection.Request extends Object implements Connection.RequestAll Implemented Interfaces: Connection.Base<Connection.Request>, Connection.Request Enclosing class: HttpConnection public static class HttpConnection.Request extends Object implements Connection.RequestAll Implemented Interfaces: Connection.Base<Connection.Request>, Connection.Request Enclosing class: HttpConnection public static class HttpConnection.Request extends Object implements Connection.RequestAll Implemented Interfaces: Connection.Base<Connection.Request>, Connection.RequestAll Implemented Interfaces:Connection.Base<Connection.Request>, Connection.RequestConnection.Base<Connection.Request>Connection.BaseConnection.RequestConnection.RequestConnection.RequestEnclosing class: HttpConnectionEnclosing class:HttpConnectionHttpConnectionpublic static class HttpConnection.Request extends Object implements Connection.RequestHttpConnection.RequestObjectConnection.RequestMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description Collection<Connection.KeyVal> data​() Get all of the request's data parameters HttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the request boolean followRedirects​() Get the current followRedirects configuration. Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects. boolean ignoreContentType​() Get the current ignoreContentType configuration. Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response. boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration. Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response. int maxBodySize​() Get the maximum body size, in bytes. Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes. Parser parser​() Get the current parser to use when parsing the document. HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document. String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post data Connection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post data Proxy proxy​() Get the proxy used for this request. HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request. HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request. String requestBody​() Get the current request body. Connection.Request requestBody​(String body) Set a POST (or PUT) request body. int timeout​() Get the request timeout, in milliseconds. HttpConnection.Request timeout​(int millis) Update the request timeout. boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation. void validateTLSCertificates​(boolean value) Set TLS certificate validation. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description Collection<Connection.KeyVal> data​() Get all of the request's data parameters HttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the request boolean followRedirects​() Get the current followRedirects configuration. Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects. boolean ignoreContentType​() Get the current ignoreContentType configuration. Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response. boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration. Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response. int maxBodySize​() Get the maximum body size, in bytes. Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes. Parser parser​() Get the current parser to use when parsing the document. HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document. String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post data Connection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post data Proxy proxy​() Get the proxy used for this request. HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request. HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request. String requestBody​() Get the current request body. Connection.Request requestBody​(String body) Set a POST (or PUT) request body. int timeout​() Get the request timeout, in milliseconds. HttpConnection.Request timeout​(int millis) Update the request timeout. boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation. void validateTLSCertificates​(boolean value) Set TLS certificate validation. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description Collection<Connection.KeyVal> data​() Get all of the request's data parameters HttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the request boolean followRedirects​() Get the current followRedirects configuration. Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects. boolean ignoreContentType​() Get the current ignoreContentType configuration. Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response. boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration. Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response. int maxBodySize​() Get the maximum body size, in bytes. Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes. Parser parser​() Get the current parser to use when parsing the document. HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document. String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post data Connection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post data Proxy proxy​() Get the proxy used for this request. HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request. HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request. String requestBody​() Get the current request body. Connection.Request requestBody​(String body) Set a POST (or PUT) request body. int timeout​() Get the request timeout, in milliseconds. HttpConnection.Request timeout​(int millis) Update the request timeout. boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation. void validateTLSCertificates​(boolean value) Set TLS certificate validation. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description Collection<Connection.KeyVal> data​() Get all of the request's data parameters HttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the request boolean followRedirects​() Get the current followRedirects configuration. Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects. boolean ignoreContentType​() Get the current ignoreContentType configuration. Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response. boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration. Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response. int maxBodySize​() Get the maximum body size, in bytes. Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes. Parser parser​() Get the current parser to use when parsing the document. HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document. String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post data Connection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post data Proxy proxy​() Get the proxy used for this request. HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request. HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request. String requestBody​() Get the current request body. Connection.Request requestBody​(String body) Set a POST (or PUT) request body. int timeout​() Get the request timeout, in milliseconds. HttpConnection.Request timeout​(int millis) Update the request timeout. boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation. void validateTLSCertificates​(boolean value) Set TLS certificate validation. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description Collection<Connection.KeyVal> data​() Get all of the request's data parameters HttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the request boolean followRedirects​() Get the current followRedirects configuration. Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects. boolean ignoreContentType​() Get the current ignoreContentType configuration. Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response. boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration. Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response. int maxBodySize​() Get the maximum body size, in bytes. Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes. Parser parser​() Get the current parser to use when parsing the document. HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document. String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post data Connection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post data Proxy proxy​() Get the proxy used for this request. HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request. HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request. String requestBody​() Get the current request body. Connection.Request requestBody​(String body) Set a POST (or PUT) request body. int timeout​() Get the request timeout, in milliseconds. HttpConnection.Request timeout​(int millis) Update the request timeout. boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation. void validateTLSCertificates​(boolean value) Set TLS certificate validation. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod SummaryAll Methods Instance Methods Concrete Methods Modifier and Type Method Description Collection<Connection.KeyVal> data​() Get all of the request's data parameters HttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the request boolean followRedirects​() Get the current followRedirects configuration. Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects. boolean ignoreContentType​() Get the current ignoreContentType configuration. Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response. boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration. Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response. int maxBodySize​() Get the maximum body size, in bytes. Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes. Parser parser​() Get the current parser to use when parsing the document. HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document. String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post data Connection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post data Proxy proxy​() Get the proxy used for this request. HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request. HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request. String requestBody​() Get the current request body. Connection.Request requestBody​(String body) Set a POST (or PUT) request body. int timeout​() Get the request timeout, in milliseconds. HttpConnection.Request timeout​(int millis) Update the request timeout. boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation. void validateTLSCertificates​(boolean value) Set TLS certificate validation.All Methods Instance Methods Concrete MethodsAll MethodsAll MethodsInstance MethodsInstance MethodsInstance MethodsConcrete MethodsConcrete MethodsConcrete MethodsModifier and Type Method Description Collection<Connection.KeyVal> data​() Get all of the request's data parameters HttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the request boolean followRedirects​() Get the current followRedirects configuration. Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects. boolean ignoreContentType​() Get the current ignoreContentType configuration. Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response. boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration. Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response. int maxBodySize​() Get the maximum body size, in bytes. Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes. Parser parser​() Get the current parser to use when parsing the document. HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document. String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post data Connection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post data Proxy proxy​() Get the proxy used for this request. HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request. HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request. String requestBody​() Get the current request body. Connection.Request requestBody​(String body) Set a POST (or PUT) request body. int timeout​() Get the request timeout, in milliseconds. HttpConnection.Request timeout​(int millis) Update the request timeout. boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation. void validateTLSCertificates​(boolean value) Set TLS certificate validation.Modifier and Type Method DescriptionModifier and TypeMethodDescriptionCollection<Connection.KeyVal> data​() Get all of the request's data parametersCollection<Connection.KeyVal>Collection<Connection.KeyVal>CollectionConnection.KeyValdata​()data​()datadataGet all of the request's data parametersGet all of the request's data parametersHttpConnection.Request data​(Connection.KeyVal keyval) Add a data parameter to the requestHttpConnection.RequestHttpConnection.RequestHttpConnection.Requestdata​(Connection.KeyVal keyval)data​(Connection.KeyVal keyval)datadataConnection.KeyValAdd a data parameter to the requestAdd a data parameter to the requestboolean followRedirects​() Get the current followRedirects configuration.booleanbooleanfollowRedirects​()followRedirects​()followRedirectsfollowRedirectsGet the current followRedirects configuration.Get the current followRedirects configuration.Connection.Request followRedirects​(boolean followRedirects) Configures the request to (not) follow server redirects.Connection.RequestConnection.RequestConnection.RequestfollowRedirects​(boolean followRedirects)followRedirects​(boolean followRedirects)followRedirectsfollowRedirectsConfigures the request to (not) follow server redirects.Configures the request to (not) follow server redirects.boolean ignoreContentType​() Get the current ignoreContentType configuration.booleanbooleanignoreContentType​()ignoreContentType​()ignoreContentTypeignoreContentTypeGet the current ignoreContentType configuration.Get the current ignoreContentType configuration.Connection.Request ignoreContentType​(boolean ignoreContentType) Configures the request to ignore the Content-Type of the response.Connection.RequestConnection.RequestConnection.RequestignoreContentType​(boolean ignoreContentType)ignoreContentType​(boolean ignoreContentType)ignoreContentTypeignoreContentTypeConfigures the request to ignore the Content-Type of the response.Configures the request to ignore the Content-Type of the response.boolean ignoreHttpErrors​() Get the current ignoreHttpErrors configuration.booleanbooleanignoreHttpErrors​()ignoreHttpErrors​()ignoreHttpErrorsignoreHttpErrorsGet the current ignoreHttpErrors configuration.Get the current ignoreHttpErrors configuration.Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Configures the request to ignore HTTP errors in the response.Connection.RequestConnection.RequestConnection.RequestignoreHttpErrors​(boolean ignoreHttpErrors)ignoreHttpErrors​(boolean ignoreHttpErrors)ignoreHttpErrorsignoreHttpErrorsConfigures the request to ignore HTTP errors in the response.Configures the request to ignore HTTP errors in the response.int maxBodySize​() Get the maximum body size, in bytes.intintmaxBodySize​()maxBodySize​()maxBodySizemaxBodySizeGet the maximum body size, in bytes.Get the maximum body size, in bytes.Connection.Request maxBodySize​(int bytes) Update the maximum body size, in bytes.Connection.RequestConnection.RequestConnection.RequestmaxBodySize​(int bytes)maxBodySize​(int bytes)maxBodySizemaxBodySizeUpdate the maximum body size, in bytes.Update the maximum body size, in bytes.Parser parser​() Get the current parser to use when parsing the document.ParserParserParserparser​()parser​()parserparserGet the current parser to use when parsing the document.Get the current parser to use when parsing the document.HttpConnection.Request parser​(Parser parser) Specify the parser to use when parsing the document.HttpConnection.RequestHttpConnection.RequestHttpConnection.Requestparser​(Parser parser)parser​(Parser parser)parserparserParserSpecify the parser to use when parsing the document.Specify the parser to use when parsing the document.String postDataCharset​() Gets the post data character set for x-www-form-urlencoded post dataStringStringStringpostDataCharset​()postDataCharset​()postDataCharsetpostDataCharsetGets the post data character set for x-www-form-urlencoded post dataGets the post data character set for x-www-form-urlencoded post dataConnection.Request postDataCharset​(String charset) Sets the post data character set for x-www-form-urlencoded post dataConnection.RequestConnection.RequestConnection.RequestpostDataCharset​(String charset)postDataCharset​(String charset)postDataCharsetpostDataCharsetStringSets the post data character set for x-www-form-urlencoded post dataSets the post data character set for x-www-form-urlencoded post dataProxy proxy​() Get the proxy used for this request.ProxyProxyProxyproxy​()proxy​()proxyproxyGet the proxy used for this request.Get the proxy used for this request.HttpConnection.Request proxy​(String host, int port) Set the HTTP proxy to use for this request.HttpConnection.RequestHttpConnection.RequestHttpConnection.Requestproxy​(String host, int port)proxy​(String host, int port)proxyproxyStringSet the HTTP proxy to use for this request.Set the HTTP proxy to use for this request.HttpConnection.Request proxy​(Proxy proxy) Update the proxy for this request.HttpConnection.RequestHttpConnection.RequestHttpConnection.Requestproxy​(Proxy proxy)proxy​(Proxy proxy)proxyproxyProxyUpdate the proxy for this request.Update the proxy for this request.String requestBody​() Get the current request body.StringStringStringrequestBody​()requestBody​()requestBodyrequestBodyGet the current request body.Get the current request body.Connection.Request requestBody​(String body) Set a POST (or PUT) request body.Connection.RequestConnection.RequestConnection.RequestrequestBody​(String body)requestBody​(String body)requestBodyrequestBodyStringSet a POST (or PUT) request body.Set a POST (or PUT) request body.int timeout​() Get the request timeout, in milliseconds.intinttimeout​()timeout​()timeouttimeoutGet the request timeout, in milliseconds.Get the request timeout, in milliseconds.HttpConnection.Request timeout​(int millis) Update the request timeout.HttpConnection.RequestHttpConnection.RequestHttpConnection.Requesttimeout​(int millis)timeout​(int millis)timeouttimeoutUpdate the request timeout.Update the request timeout.boolean validateTLSCertificates​() Get the current state of TLS (SSL) certificate validation.booleanbooleanvalidateTLSCertificates​()validateTLSCertificates​()validateTLSCertificatesvalidateTLSCertificatesGet the current state of TLS (SSL) certificate validation.Get the current state of TLS (SSL) certificate validation.void validateTLSCertificates​(boolean value) Set TLS certificate validation.voidvoidvalidateTLSCertificates​(boolean value)validateTLSCertificates​(boolean value)validateTLSCertificatesvalidateTLSCertificatesSet TLS certificate validation.Set TLS certificate validation.Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, urlMethods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, urlMethods inherited from interface org.jsoup.Connection.BaseConnection.BaseaddHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, urladdHeadercookiecookiecookieshasCookiehasHeaderhasHeaderWithValueheaderheaderheadersheadersmethodmethodmultiHeadersremoveCookieremoveHeaderurlurlMethods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethods inherited from class java.lang.ObjectObjectclone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitcloneequalsfinalizegetClasshashCodenotifynotifyAlltoStringwaitwaitwaitMethod Detail proxy public Proxy proxy​() Description copied from interface: Connection.Request Get the proxy used for this request. Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled. proxy public HttpConnection.Request proxy​(Proxy proxy) Description copied from interface: Connection.Request Update the proxy for this request. Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chaining proxy public HttpConnection.Request proxy​(String host, int port) Description copied from interface: Connection.Request Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining timeout public int timeout​() Description copied from interface: Connection.Request Get the request timeout, in milliseconds. Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds. timeout public HttpConnection.Request timeout​(int millis) Description copied from interface: Connection.Request Update the request timeout. Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chaining maxBodySize public int maxBodySize​() Description copied from interface: Connection.Request Get the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes. maxBodySize public Connection.Request maxBodySize​(int bytes) Description copied from interface: Connection.Request Update the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chaining followRedirects public boolean followRedirects​() Description copied from interface: Connection.Request Get the current followRedirects configuration. Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled. followRedirects public Connection.Request followRedirects​(boolean followRedirects) Description copied from interface: Connection.Request Configures the request to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chaining ignoreHttpErrors public boolean ignoreHttpErrors​() Description copied from interface: Connection.Request Get the current ignoreHttpErrors configuration. Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown. validateTLSCertificates public boolean validateTLSCertificates​() Description copied from interface: Connection.Request Get the current state of TLS (SSL) certificate validation. Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabled validateTLSCertificates public void validateTLSCertificates​(boolean value) Description copied from interface: Connection.Request Set TLS certificate validation. True by default. Specified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificates ignoreHttpErrors public Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection.Request Configures the request to ignore HTTP errors in the response. Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chaining ignoreContentType public boolean ignoreContentType​() Description copied from interface: Connection.Request Get the current ignoreContentType configuration. Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown. ignoreContentType public Connection.Request ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection.Request Configures the request to ignore the Content-Type of the response. Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chaining data public HttpConnection.Request data​(Connection.KeyVal keyval) Description copied from interface: Connection.Request Add a data parameter to the request Specified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chaining data public Collection<Connection.KeyVal> data​() Description copied from interface: Connection.Request Get all of the request's data parameters Specified by: data in interface Connection.Request Returns: collection of keyvals requestBody public Connection.Request requestBody​(String body) Description copied from interface: Connection.Request Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection.Request Returns: this Request, for chaining requestBody public String requestBody​() Description copied from interface: Connection.Request Get the current request body. Specified by: requestBody in interface Connection.Request Returns: null if not set. parser public HttpConnection.Request parser​(Parser parser) Description copied from interface: Connection.Request Specify the parser to use when parsing the document. Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chaining parser public Parser parser​() Description copied from interface: Connection.Request Get the current parser to use when parsing the document. Specified by: parser in interface Connection.Request Returns: current Parser postDataCharset public Connection.Request postDataCharset​(String charset) Description copied from interface: Connection.Request Sets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chaining postDataCharset public String postDataCharset​() Description copied from interface: Connection.Request Gets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Returns: character set to encode post dataMethod Detail proxy public Proxy proxy​() Description copied from interface: Connection.Request Get the proxy used for this request. Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled. proxy public HttpConnection.Request proxy​(Proxy proxy) Description copied from interface: Connection.Request Update the proxy for this request. Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chaining proxy public HttpConnection.Request proxy​(String host, int port) Description copied from interface: Connection.Request Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining timeout public int timeout​() Description copied from interface: Connection.Request Get the request timeout, in milliseconds. Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds. timeout public HttpConnection.Request timeout​(int millis) Description copied from interface: Connection.Request Update the request timeout. Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chaining maxBodySize public int maxBodySize​() Description copied from interface: Connection.Request Get the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes. maxBodySize public Connection.Request maxBodySize​(int bytes) Description copied from interface: Connection.Request Update the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chaining followRedirects public boolean followRedirects​() Description copied from interface: Connection.Request Get the current followRedirects configuration. Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled. followRedirects public Connection.Request followRedirects​(boolean followRedirects) Description copied from interface: Connection.Request Configures the request to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chaining ignoreHttpErrors public boolean ignoreHttpErrors​() Description copied from interface: Connection.Request Get the current ignoreHttpErrors configuration. Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown. validateTLSCertificates public boolean validateTLSCertificates​() Description copied from interface: Connection.Request Get the current state of TLS (SSL) certificate validation. Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabled validateTLSCertificates public void validateTLSCertificates​(boolean value) Description copied from interface: Connection.Request Set TLS certificate validation. True by default. Specified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificates ignoreHttpErrors public Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection.Request Configures the request to ignore HTTP errors in the response. Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chaining ignoreContentType public boolean ignoreContentType​() Description copied from interface: Connection.Request Get the current ignoreContentType configuration. Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown. ignoreContentType public Connection.Request ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection.Request Configures the request to ignore the Content-Type of the response. Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chaining data public HttpConnection.Request data​(Connection.KeyVal keyval) Description copied from interface: Connection.Request Add a data parameter to the request Specified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chaining data public Collection<Connection.KeyVal> data​() Description copied from interface: Connection.Request Get all of the request's data parameters Specified by: data in interface Connection.Request Returns: collection of keyvals requestBody public Connection.Request requestBody​(String body) Description copied from interface: Connection.Request Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection.Request Returns: this Request, for chaining requestBody public String requestBody​() Description copied from interface: Connection.Request Get the current request body. Specified by: requestBody in interface Connection.Request Returns: null if not set. parser public HttpConnection.Request parser​(Parser parser) Description copied from interface: Connection.Request Specify the parser to use when parsing the document. Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chaining parser public Parser parser​() Description copied from interface: Connection.Request Get the current parser to use when parsing the document. Specified by: parser in interface Connection.Request Returns: current Parser postDataCharset public Connection.Request postDataCharset​(String charset) Description copied from interface: Connection.Request Sets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chaining postDataCharset public String postDataCharset​() Description copied from interface: Connection.Request Gets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Returns: character set to encode post dataMethod Detail proxy public Proxy proxy​() Description copied from interface: Connection.Request Get the proxy used for this request. Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled. proxy public HttpConnection.Request proxy​(Proxy proxy) Description copied from interface: Connection.Request Update the proxy for this request. Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chaining proxy public HttpConnection.Request proxy​(String host, int port) Description copied from interface: Connection.Request Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining timeout public int timeout​() Description copied from interface: Connection.Request Get the request timeout, in milliseconds. Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds. timeout public HttpConnection.Request timeout​(int millis) Description copied from interface: Connection.Request Update the request timeout. Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chaining maxBodySize public int maxBodySize​() Description copied from interface: Connection.Request Get the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes. maxBodySize public Connection.Request maxBodySize​(int bytes) Description copied from interface: Connection.Request Update the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chaining followRedirects public boolean followRedirects​() Description copied from interface: Connection.Request Get the current followRedirects configuration. Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled. followRedirects public Connection.Request followRedirects​(boolean followRedirects) Description copied from interface: Connection.Request Configures the request to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chaining ignoreHttpErrors public boolean ignoreHttpErrors​() Description copied from interface: Connection.Request Get the current ignoreHttpErrors configuration. Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown. validateTLSCertificates public boolean validateTLSCertificates​() Description copied from interface: Connection.Request Get the current state of TLS (SSL) certificate validation. Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabled validateTLSCertificates public void validateTLSCertificates​(boolean value) Description copied from interface: Connection.Request Set TLS certificate validation. True by default. Specified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificates ignoreHttpErrors public Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection.Request Configures the request to ignore HTTP errors in the response. Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chaining ignoreContentType public boolean ignoreContentType​() Description copied from interface: Connection.Request Get the current ignoreContentType configuration. Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown. ignoreContentType public Connection.Request ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection.Request Configures the request to ignore the Content-Type of the response. Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chaining data public HttpConnection.Request data​(Connection.KeyVal keyval) Description copied from interface: Connection.Request Add a data parameter to the request Specified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chaining data public Collection<Connection.KeyVal> data​() Description copied from interface: Connection.Request Get all of the request's data parameters Specified by: data in interface Connection.Request Returns: collection of keyvals requestBody public Connection.Request requestBody​(String body) Description copied from interface: Connection.Request Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection.Request Returns: this Request, for chaining requestBody public String requestBody​() Description copied from interface: Connection.Request Get the current request body. Specified by: requestBody in interface Connection.Request Returns: null if not set. parser public HttpConnection.Request parser​(Parser parser) Description copied from interface: Connection.Request Specify the parser to use when parsing the document. Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chaining parser public Parser parser​() Description copied from interface: Connection.Request Get the current parser to use when parsing the document. Specified by: parser in interface Connection.Request Returns: current Parser postDataCharset public Connection.Request postDataCharset​(String charset) Description copied from interface: Connection.Request Sets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chaining postDataCharset public String postDataCharset​() Description copied from interface: Connection.Request Gets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Returns: character set to encode post dataMethod Detail proxy public Proxy proxy​() Description copied from interface: Connection.Request Get the proxy used for this request. Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled. proxy public HttpConnection.Request proxy​(Proxy proxy) Description copied from interface: Connection.Request Update the proxy for this request. Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chaining proxy public HttpConnection.Request proxy​(String host, int port) Description copied from interface: Connection.Request Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining timeout public int timeout​() Description copied from interface: Connection.Request Get the request timeout, in milliseconds. Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds. timeout public HttpConnection.Request timeout​(int millis) Description copied from interface: Connection.Request Update the request timeout. Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chaining maxBodySize public int maxBodySize​() Description copied from interface: Connection.Request Get the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes. maxBodySize public Connection.Request maxBodySize​(int bytes) Description copied from interface: Connection.Request Update the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chaining followRedirects public boolean followRedirects​() Description copied from interface: Connection.Request Get the current followRedirects configuration. Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled. followRedirects public Connection.Request followRedirects​(boolean followRedirects) Description copied from interface: Connection.Request Configures the request to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chaining ignoreHttpErrors public boolean ignoreHttpErrors​() Description copied from interface: Connection.Request Get the current ignoreHttpErrors configuration. Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown. validateTLSCertificates public boolean validateTLSCertificates​() Description copied from interface: Connection.Request Get the current state of TLS (SSL) certificate validation. Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabled validateTLSCertificates public void validateTLSCertificates​(boolean value) Description copied from interface: Connection.Request Set TLS certificate validation. True by default. Specified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificates ignoreHttpErrors public Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection.Request Configures the request to ignore HTTP errors in the response. Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chaining ignoreContentType public boolean ignoreContentType​() Description copied from interface: Connection.Request Get the current ignoreContentType configuration. Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown. ignoreContentType public Connection.Request ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection.Request Configures the request to ignore the Content-Type of the response. Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chaining data public HttpConnection.Request data​(Connection.KeyVal keyval) Description copied from interface: Connection.Request Add a data parameter to the request Specified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chaining data public Collection<Connection.KeyVal> data​() Description copied from interface: Connection.Request Get all of the request's data parameters Specified by: data in interface Connection.Request Returns: collection of keyvals requestBody public Connection.Request requestBody​(String body) Description copied from interface: Connection.Request Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection.Request Returns: this Request, for chaining requestBody public String requestBody​() Description copied from interface: Connection.Request Get the current request body. Specified by: requestBody in interface Connection.Request Returns: null if not set. parser public HttpConnection.Request parser​(Parser parser) Description copied from interface: Connection.Request Specify the parser to use when parsing the document. Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chaining parser public Parser parser​() Description copied from interface: Connection.Request Get the current parser to use when parsing the document. Specified by: parser in interface Connection.Request Returns: current Parser postDataCharset public Connection.Request postDataCharset​(String charset) Description copied from interface: Connection.Request Sets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chaining postDataCharset public String postDataCharset​() Description copied from interface: Connection.Request Gets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Returns: character set to encode post dataMethod Detail proxy public Proxy proxy​() Description copied from interface: Connection.Request Get the proxy used for this request. Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled. proxy public HttpConnection.Request proxy​(Proxy proxy) Description copied from interface: Connection.Request Update the proxy for this request. Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chaining proxy public HttpConnection.Request proxy​(String host, int port) Description copied from interface: Connection.Request Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chaining timeout public int timeout​() Description copied from interface: Connection.Request Get the request timeout, in milliseconds. Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds. timeout public HttpConnection.Request timeout​(int millis) Description copied from interface: Connection.Request Update the request timeout. Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chaining maxBodySize public int maxBodySize​() Description copied from interface: Connection.Request Get the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes. maxBodySize public Connection.Request maxBodySize​(int bytes) Description copied from interface: Connection.Request Update the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chaining followRedirects public boolean followRedirects​() Description copied from interface: Connection.Request Get the current followRedirects configuration. Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled. followRedirects public Connection.Request followRedirects​(boolean followRedirects) Description copied from interface: Connection.Request Configures the request to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chaining ignoreHttpErrors public boolean ignoreHttpErrors​() Description copied from interface: Connection.Request Get the current ignoreHttpErrors configuration. Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown. validateTLSCertificates public boolean validateTLSCertificates​() Description copied from interface: Connection.Request Get the current state of TLS (SSL) certificate validation. Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabled validateTLSCertificates public void validateTLSCertificates​(boolean value) Description copied from interface: Connection.Request Set TLS certificate validation. True by default. Specified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificates ignoreHttpErrors public Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection.Request Configures the request to ignore HTTP errors in the response. Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chaining ignoreContentType public boolean ignoreContentType​() Description copied from interface: Connection.Request Get the current ignoreContentType configuration. Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown. ignoreContentType public Connection.Request ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection.Request Configures the request to ignore the Content-Type of the response. Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chaining data public HttpConnection.Request data​(Connection.KeyVal keyval) Description copied from interface: Connection.Request Add a data parameter to the request Specified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chaining data public Collection<Connection.KeyVal> data​() Description copied from interface: Connection.Request Get all of the request's data parameters Specified by: data in interface Connection.Request Returns: collection of keyvals requestBody public Connection.Request requestBody​(String body) Description copied from interface: Connection.Request Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection.Request Returns: this Request, for chaining requestBody public String requestBody​() Description copied from interface: Connection.Request Get the current request body. Specified by: requestBody in interface Connection.Request Returns: null if not set. parser public HttpConnection.Request parser​(Parser parser) Description copied from interface: Connection.Request Specify the parser to use when parsing the document. Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chaining parser public Parser parser​() Description copied from interface: Connection.Request Get the current parser to use when parsing the document. Specified by: parser in interface Connection.Request Returns: current Parser postDataCharset public Connection.Request postDataCharset​(String charset) Description copied from interface: Connection.Request Sets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chaining postDataCharset public String postDataCharset​() Description copied from interface: Connection.Request Gets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Returns: character set to encode post dataMethod Detailproxy public Proxy proxy​() Description copied from interface: Connection.Request Get the proxy used for this request. Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled.proxy public Proxy proxy​() Description copied from interface: Connection.Request Get the proxy used for this request. Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled.proxypublic Proxy proxy​()ProxyDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet the proxy used for this request.Specified by: proxy in interface Connection.Request Returns: the proxy; null if not enabled.Specified by:Specified by:proxy in interface Connection.RequestproxyproxyConnection.RequestConnection.RequestReturns:Returns:the proxy; null if not enabled.nullproxy public HttpConnection.Request proxy​(Proxy proxy) Description copied from interface: Connection.Request Update the proxy for this request. Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chainingproxy public HttpConnection.Request proxy​(Proxy proxy) Description copied from interface: Connection.Request Update the proxy for this request. Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chainingproxypublic HttpConnection.Request proxy​(Proxy proxy)HttpConnection.RequestProxyDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestUpdate the proxy for this request.Specified by: proxy in interface Connection.Request Parameters: proxy - the proxy ot use; null to disable. Returns: this Request, for chainingSpecified by:Specified by:proxy in interface Connection.RequestproxyproxyConnection.RequestConnection.RequestParameters:Parameters:proxy - the proxy ot use; null to disable.proxynullReturns:Returns:this Request, for chainingproxy public HttpConnection.Request proxy​(String host, int port) Description copied from interface: Connection.Request Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chainingproxy public HttpConnection.Request proxy​(String host, int port) Description copied from interface: Connection.Request Set the HTTP proxy to use for this request. Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chainingproxypublic HttpConnection.Request proxy​(String host, int port)HttpConnection.RequestStringDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestSet the HTTP proxy to use for this request.Specified by: proxy in interface Connection.Request Parameters: host - the proxy hostname port - the proxy port Returns: this Connection, for chainingSpecified by:Specified by:proxy in interface Connection.RequestproxyproxyConnection.RequestConnection.RequestParameters:Parameters:host - the proxy hostnamehostport - the proxy portportReturns:Returns:this Connection, for chainingtimeout public int timeout​() Description copied from interface: Connection.Request Get the request timeout, in milliseconds. Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds.timeout public int timeout​() Description copied from interface: Connection.Request Get the request timeout, in milliseconds. Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds.timeoutpublic int timeout​()Description copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet the request timeout, in milliseconds.Specified by: timeout in interface Connection.Request Returns: the timeout in milliseconds.Specified by:Specified by:timeout in interface Connection.RequesttimeouttimeoutConnection.RequestConnection.RequestReturns:Returns:the timeout in milliseconds.timeout public HttpConnection.Request timeout​(int millis) Description copied from interface: Connection.Request Update the request timeout. Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chainingtimeout public HttpConnection.Request timeout​(int millis) Description copied from interface: Connection.Request Update the request timeout. Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chainingtimeoutpublic HttpConnection.Request timeout​(int millis)HttpConnection.RequestDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestUpdate the request timeout.Specified by: timeout in interface Connection.Request Parameters: millis - timeout, in milliseconds Returns: this Request, for chainingSpecified by:Specified by:timeout in interface Connection.RequesttimeouttimeoutConnection.RequestConnection.RequestParameters:Parameters:millis - timeout, in millisecondsmillisReturns:Returns:this Request, for chainingmaxBodySize public int maxBodySize​() Description copied from interface: Connection.Request Get the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes.maxBodySize public int maxBodySize​() Description copied from interface: Connection.Request Get the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes.maxBodySizepublic int maxBodySize​()Description copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet the maximum body size, in bytes.Specified by: maxBodySize in interface Connection.Request Returns: the maximum body size, in bytes.Specified by:Specified by:maxBodySize in interface Connection.RequestmaxBodySizemaxBodySizeConnection.RequestConnection.RequestReturns:Returns:the maximum body size, in bytes.maxBodySize public Connection.Request maxBodySize​(int bytes) Description copied from interface: Connection.Request Update the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chainingmaxBodySize public Connection.Request maxBodySize​(int bytes) Description copied from interface: Connection.Request Update the maximum body size, in bytes. Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chainingmaxBodySizepublic Connection.Request maxBodySize​(int bytes)Connection.RequestDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestUpdate the maximum body size, in bytes.Specified by: maxBodySize in interface Connection.Request Parameters: bytes - maximum body size, in bytes. Returns: this Request, for chainingSpecified by:Specified by:maxBodySize in interface Connection.RequestmaxBodySizemaxBodySizeConnection.RequestConnection.RequestParameters:Parameters:bytes - maximum body size, in bytes.bytesReturns:Returns:this Request, for chainingfollowRedirects public boolean followRedirects​() Description copied from interface: Connection.Request Get the current followRedirects configuration. Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled.followRedirects public boolean followRedirects​() Description copied from interface: Connection.Request Get the current followRedirects configuration. Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled.followRedirectspublic boolean followRedirects​()Description copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet the current followRedirects configuration.Specified by: followRedirects in interface Connection.Request Returns: true if followRedirects is enabled.Specified by:Specified by:followRedirects in interface Connection.RequestfollowRedirectsfollowRedirectsConnection.RequestConnection.RequestReturns:Returns:true if followRedirects is enabled.followRedirects public Connection.Request followRedirects​(boolean followRedirects) Description copied from interface: Connection.Request Configures the request to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chainingfollowRedirects public Connection.Request followRedirects​(boolean followRedirects) Description copied from interface: Connection.Request Configures the request to (not) follow server redirects. By default this is true. Specified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chainingfollowRedirectspublic Connection.Request followRedirects​(boolean followRedirects)Connection.RequestDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestConfigures the request to (not) follow server redirects. By default this is true.trueSpecified by: followRedirects in interface Connection.Request Parameters: followRedirects - true if server redirects should be followed. Returns: this Request, for chainingSpecified by:Specified by:followRedirects in interface Connection.RequestfollowRedirectsfollowRedirectsConnection.RequestConnection.RequestParameters:Parameters:followRedirects - true if server redirects should be followed.followRedirectsReturns:Returns:this Request, for chainingignoreHttpErrors public boolean ignoreHttpErrors​() Description copied from interface: Connection.Request Get the current ignoreHttpErrors configuration. Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown.ignoreHttpErrors public boolean ignoreHttpErrors​() Description copied from interface: Connection.Request Get the current ignoreHttpErrors configuration. Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown.ignoreHttpErrorspublic boolean ignoreHttpErrors​()Description copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet the current ignoreHttpErrors configuration.Specified by: ignoreHttpErrors in interface Connection.Request Returns: true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown.Specified by:Specified by:ignoreHttpErrors in interface Connection.RequestignoreHttpErrorsignoreHttpErrorsConnection.RequestConnection.RequestReturns:Returns:true if errors will be ignored; false (default) if HTTP errors will cause an IOException to be thrown.validateTLSCertificates public boolean validateTLSCertificates​() Description copied from interface: Connection.Request Get the current state of TLS (SSL) certificate validation. Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabledvalidateTLSCertificates public boolean validateTLSCertificates​() Description copied from interface: Connection.Request Get the current state of TLS (SSL) certificate validation. Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabledvalidateTLSCertificatespublic boolean validateTLSCertificates​()Description copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet the current state of TLS (SSL) certificate validation.Specified by: validateTLSCertificates in interface Connection.Request Returns: true if TLS cert validation enabledSpecified by:Specified by:validateTLSCertificates in interface Connection.RequestvalidateTLSCertificatesvalidateTLSCertificatesConnection.RequestConnection.RequestReturns:Returns:true if TLS cert validation enabledvalidateTLSCertificates public void validateTLSCertificates​(boolean value) Description copied from interface: Connection.Request Set TLS certificate validation. True by default. Specified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificatesvalidateTLSCertificates public void validateTLSCertificates​(boolean value) Description copied from interface: Connection.Request Set TLS certificate validation. True by default. Specified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificatesvalidateTLSCertificatespublic void validateTLSCertificates​(boolean value)Description copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestSet TLS certificate validation. True by default.TrueSpecified by: validateTLSCertificates in interface Connection.Request Parameters: value - set false to ignore TLS (SSL) certificatesSpecified by:Specified by:validateTLSCertificates in interface Connection.RequestvalidateTLSCertificatesvalidateTLSCertificatesConnection.RequestConnection.RequestParameters:Parameters:value - set false to ignore TLS (SSL) certificatesvalueignoreHttpErrors public Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection.Request Configures the request to ignore HTTP errors in the response. Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chainingignoreHttpErrors public Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors) Description copied from interface: Connection.Request Configures the request to ignore HTTP errors in the response. Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chainingignoreHttpErrorspublic Connection.Request ignoreHttpErrors​(boolean ignoreHttpErrors)Connection.RequestDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestConfigures the request to ignore HTTP errors in the response.Specified by: ignoreHttpErrors in interface Connection.Request Parameters: ignoreHttpErrors - set to true to ignore HTTP errors. Returns: this Request, for chainingSpecified by:Specified by:ignoreHttpErrors in interface Connection.RequestignoreHttpErrorsignoreHttpErrorsConnection.RequestConnection.RequestParameters:Parameters:ignoreHttpErrors - set to true to ignore HTTP errors.ignoreHttpErrorsReturns:Returns:this Request, for chainingignoreContentType public boolean ignoreContentType​() Description copied from interface: Connection.Request Get the current ignoreContentType configuration. Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown.ignoreContentType public boolean ignoreContentType​() Description copied from interface: Connection.Request Get the current ignoreContentType configuration. Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown.ignoreContentTypepublic boolean ignoreContentType​()Description copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet the current ignoreContentType configuration.Specified by: ignoreContentType in interface Connection.Request Returns: true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown.Specified by:Specified by:ignoreContentType in interface Connection.RequestignoreContentTypeignoreContentTypeConnection.RequestConnection.RequestReturns:Returns:true if invalid content-types will be ignored; false (default) if they will cause an IOException to be thrown.ignoreContentType public Connection.Request ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection.Request Configures the request to ignore the Content-Type of the response. Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chainingignoreContentType public Connection.Request ignoreContentType​(boolean ignoreContentType) Description copied from interface: Connection.Request Configures the request to ignore the Content-Type of the response. Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chainingignoreContentTypepublic Connection.Request ignoreContentType​(boolean ignoreContentType)Connection.RequestDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestConfigures the request to ignore the Content-Type of the response.Specified by: ignoreContentType in interface Connection.Request Parameters: ignoreContentType - set to true to ignore the content type. Returns: this Request, for chainingSpecified by:Specified by:ignoreContentType in interface Connection.RequestignoreContentTypeignoreContentTypeConnection.RequestConnection.RequestParameters:Parameters:ignoreContentType - set to true to ignore the content type.ignoreContentTypeReturns:Returns:this Request, for chainingdata public HttpConnection.Request data​(Connection.KeyVal keyval) Description copied from interface: Connection.Request Add a data parameter to the request Specified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chainingdata public HttpConnection.Request data​(Connection.KeyVal keyval) Description copied from interface: Connection.Request Add a data parameter to the request Specified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chainingdatapublic HttpConnection.Request data​(Connection.KeyVal keyval)HttpConnection.RequestConnection.KeyValDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestAdd a data parameter to the requestSpecified by: data in interface Connection.Request Parameters: keyval - data to add. Returns: this Request, for chainingSpecified by:Specified by:data in interface Connection.RequestdatadataConnection.RequestConnection.RequestParameters:Parameters:keyval - data to add.keyvalReturns:Returns:this Request, for chainingdata public Collection<Connection.KeyVal> data​() Description copied from interface: Connection.Request Get all of the request's data parameters Specified by: data in interface Connection.Request Returns: collection of keyvalsdata public Collection<Connection.KeyVal> data​() Description copied from interface: Connection.Request Get all of the request's data parameters Specified by: data in interface Connection.Request Returns: collection of keyvalsdatapublic Collection<Connection.KeyVal> data​()CollectionConnection.KeyValDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet all of the request's data parametersSpecified by: data in interface Connection.Request Returns: collection of keyvalsSpecified by:Specified by:data in interface Connection.RequestdatadataConnection.RequestConnection.RequestReturns:Returns:collection of keyvalsrequestBody public Connection.Request requestBody​(String body) Description copied from interface: Connection.Request Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection.Request Returns: this Request, for chainingrequestBody public Connection.Request requestBody​(String body) Description copied from interface: Connection.Request Set a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params. Specified by: requestBody in interface Connection.Request Returns: this Request, for chainingrequestBodypublic Connection.Request requestBody​(String body)Connection.RequestStringDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestSet a POST (or PUT) request body. Useful when a server expects a plain request body, not a set for URL encoded form key/value pairs. E.g.: Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post(); If any data key/vals are supplied, they will be sent as URL query params.Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post();Jsoup.connect(url) .requestBody(json) .header("Content-Type", "application/json") .post();Specified by: requestBody in interface Connection.Request Returns: this Request, for chainingSpecified by:Specified by:requestBody in interface Connection.RequestrequestBodyrequestBodyConnection.RequestConnection.RequestReturns:Returns:this Request, for chainingrequestBody public String requestBody​() Description copied from interface: Connection.Request Get the current request body. Specified by: requestBody in interface Connection.Request Returns: null if not set.requestBody public String requestBody​() Description copied from interface: Connection.Request Get the current request body. Specified by: requestBody in interface Connection.Request Returns: null if not set.requestBodypublic String requestBody​()StringDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet the current request body.Specified by: requestBody in interface Connection.Request Returns: null if not set.Specified by:Specified by:requestBody in interface Connection.RequestrequestBodyrequestBodyConnection.RequestConnection.RequestReturns:Returns:null if not set.parser public HttpConnection.Request parser​(Parser parser) Description copied from interface: Connection.Request Specify the parser to use when parsing the document. Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chainingparser public HttpConnection.Request parser​(Parser parser) Description copied from interface: Connection.Request Specify the parser to use when parsing the document. Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chainingparserpublic HttpConnection.Request parser​(Parser parser)HttpConnection.RequestParserDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestSpecify the parser to use when parsing the document.Specified by: parser in interface Connection.Request Parameters: parser - parser to use. Returns: this Request, for chainingSpecified by:Specified by:parser in interface Connection.RequestparserparserConnection.RequestConnection.RequestParameters:Parameters:parser - parser to use.parserReturns:Returns:this Request, for chainingparser public Parser parser​() Description copied from interface: Connection.Request Get the current parser to use when parsing the document. Specified by: parser in interface Connection.Request Returns: current Parserparser public Parser parser​() Description copied from interface: Connection.Request Get the current parser to use when parsing the document. Specified by: parser in interface Connection.Request Returns: current Parserparserpublic Parser parser​()ParserDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGet the current parser to use when parsing the document.Specified by: parser in interface Connection.Request Returns: current ParserSpecified by:Specified by:parser in interface Connection.RequestparserparserConnection.RequestConnection.RequestReturns:Returns:current ParserpostDataCharset public Connection.Request postDataCharset​(String charset) Description copied from interface: Connection.Request Sets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chainingpostDataCharset public Connection.Request postDataCharset​(String charset) Description copied from interface: Connection.Request Sets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chainingpostDataCharsetpublic Connection.Request postDataCharset​(String charset)Connection.RequestStringDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestSets the post data character set for x-www-form-urlencoded post dataSpecified by: postDataCharset in interface Connection.Request Parameters: charset - character set to encode post data Returns: this Request, for chainingSpecified by:Specified by:postDataCharset in interface Connection.RequestpostDataCharsetpostDataCharsetConnection.RequestConnection.RequestParameters:Parameters:charset - character set to encode post datacharsetReturns:Returns:this Request, for chainingpostDataCharset public String postDataCharset​() Description copied from interface: Connection.Request Gets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Returns: character set to encode post datapostDataCharset public String postDataCharset​() Description copied from interface: Connection.Request Gets the post data character set for x-www-form-urlencoded post data Specified by: postDataCharset in interface Connection.Request Returns: character set to encode post datapostDataCharsetpublic String postDataCharset​()StringDescription copied from interface: Connection.RequestDescription copied from interface: Connection.RequestConnection.RequestConnection.RequestGets the post data character set for x-www-form-urlencoded post dataSpecified by: postDataCharset in interface Connection.Request Returns: character set to encode post dataSpecified by:Specified by:postDataCharset in interface Connection.RequestpostDataCharsetpostDataCharsetConnection.RequestConnection.RequestReturns:Returns:character set to encode post dataSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll Classes<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |Field |Constr |MethodMethodDetail: Field | Constr | MethodDetail:Field |Constr |MethodMethodCopyright © 2009–2017 Jonathan Hedley. All rights reserved.Copyright © 2009–2017 Jonathan Hedley. All rights reserved.Jonathan Hedley