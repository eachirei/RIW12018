<div> JavaScript is disabled on your browser. </div> Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Package org.jsoup.helper Class HttpConnection.Response java.lang.Object org.jsoup.helper.HttpConnection.Response All Implemented Interfaces: Connection.Base<Connection.Response>, Connection.Response Enclosing class: HttpConnection public static class HttpConnection.Response extends Object implements Connection.Response Method Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description String body​() Get the body of the response as a plain string. byte[] bodyAsBytes​() Get the body of the response as an array of bytes. BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream. Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). String charset​() Get the character set name of the response, derived from the content-type header. HttpConnection.Response charset​(String charset) Set / override the response character set. String contentType​() Get the response content type (e.g. Document parse​() Read and parse the body of the response as a Document. int statusCode​() Get the status code of the response. String statusMessage​() Get the status message of the response. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Method Detail statusCode public int statusCode​() Description copied from interface: Connection.Response Get the status code of the response. Specified by: statusCode in interface Connection.Response Returns: status code statusMessage public String statusMessage​() Description copied from interface: Connection.Response Get the status message of the response. Specified by: statusMessage in interface Connection.Response Returns: status message charset public String charset​() Description copied from interface: Connection.Response Get the character set name of the response, derived from the content-type header. Specified by: charset in interface Connection.Response Returns: character set name charset public HttpConnection.Response charset​(String charset) Description copied from interface: Connection.Response Set / override the response character set. When the document body is parsed it will be with this charset. Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chaining contentType public String contentType​() Description copied from interface: Connection.Response Get the response content type (e.g. "text/html"); Specified by: contentType in interface Connection.Response Returns: the response content type parse public Document parse​() throws IOException Description copied from interface: Connection.Response Read and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first. Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on error body public String body​() Description copied from interface: Connection.Response Get the body of the response as a plain string. Specified by: body in interface Connection.Response Returns: body bodyAsBytes public byte[] bodyAsBytes​() Description copied from interface: Connection.Response Get the body of the response as an array of bytes. Specified by: bodyAsBytes in interface Connection.Response Returns: body bytes bufferUp public Connection.Response bufferUp​() Description copied from interface: Connection.Response Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect. Specified by: bufferUp in interface Connection.Response Returns: this response, for chaining bodyStream public BufferedInputStream bodyStream​() Description copied from interface: Connection.Response Get the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first. Specified by: bodyStream in interface Connection.Response Returns: the response body input stream Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Copyright © 2009–2017 Jonathan Hedley. All rights reserved.<div> JavaScript is disabled on your browser. </div>Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll ClassesSEARCH:SEARCH:SEARCH:<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |Field |Constr |MethodMethodDetail: Field | Constr | MethodDetail:Field |Constr |MethodMethodPackage org.jsoup.helper Class HttpConnection.ResponsePackage org.jsoup.helperPackageorg.jsoup.helperClass HttpConnection.Responsejava.lang.Object org.jsoup.helper.HttpConnection.Response All Implemented Interfaces: Connection.Base<Connection.Response>, Connection.Response Enclosing class: HttpConnection public static class HttpConnection.Response extends Object implements Connection.Response Method Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description String body​() Get the body of the response as a plain string. byte[] bodyAsBytes​() Get the body of the response as an array of bytes. BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream. Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). String charset​() Get the character set name of the response, derived from the content-type header. HttpConnection.Response charset​(String charset) Set / override the response character set. String contentType​() Get the response content type (e.g. Document parse​() Read and parse the body of the response as a Document. int statusCode​() Get the status code of the response. String statusMessage​() Get the status message of the response. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Method Detail statusCode public int statusCode​() Description copied from interface: Connection.Response Get the status code of the response. Specified by: statusCode in interface Connection.Response Returns: status code statusMessage public String statusMessage​() Description copied from interface: Connection.Response Get the status message of the response. Specified by: statusMessage in interface Connection.Response Returns: status message charset public String charset​() Description copied from interface: Connection.Response Get the character set name of the response, derived from the content-type header. Specified by: charset in interface Connection.Response Returns: character set name charset public HttpConnection.Response charset​(String charset) Description copied from interface: Connection.Response Set / override the response character set. When the document body is parsed it will be with this charset. Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chaining contentType public String contentType​() Description copied from interface: Connection.Response Get the response content type (e.g. "text/html"); Specified by: contentType in interface Connection.Response Returns: the response content type parse public Document parse​() throws IOException Description copied from interface: Connection.Response Read and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first. Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on error body public String body​() Description copied from interface: Connection.Response Get the body of the response as a plain string. Specified by: body in interface Connection.Response Returns: body bodyAsBytes public byte[] bodyAsBytes​() Description copied from interface: Connection.Response Get the body of the response as an array of bytes. Specified by: bodyAsBytes in interface Connection.Response Returns: body bytes bufferUp public Connection.Response bufferUp​() Description copied from interface: Connection.Response Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect. Specified by: bufferUp in interface Connection.Response Returns: this response, for chaining bodyStream public BufferedInputStream bodyStream​() Description copied from interface: Connection.Response Get the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first. Specified by: bodyStream in interface Connection.Response Returns: the response body input streamjava.lang.Object org.jsoup.helper.HttpConnection.Responsejava.lang.Objectjava.lang.Objectorg.jsoup.helper.HttpConnection.Responseorg.jsoup.helper.HttpConnection.Responseorg.jsoup.helper.HttpConnection.ResponseAll Implemented Interfaces: Connection.Base<Connection.Response>, Connection.Response Enclosing class: HttpConnection public static class HttpConnection.Response extends Object implements Connection.ResponseAll Implemented Interfaces: Connection.Base<Connection.Response>, Connection.Response Enclosing class: HttpConnection public static class HttpConnection.Response extends Object implements Connection.ResponseAll Implemented Interfaces: Connection.Base<Connection.Response>, Connection.Response Enclosing class: HttpConnection public static class HttpConnection.Response extends Object implements Connection.ResponseAll Implemented Interfaces: Connection.Base<Connection.Response>, Connection.ResponseAll Implemented Interfaces:Connection.Base<Connection.Response>, Connection.ResponseConnection.Base<Connection.Response>Connection.BaseConnection.ResponseConnection.ResponseConnection.ResponseEnclosing class: HttpConnectionEnclosing class:HttpConnectionHttpConnectionpublic static class HttpConnection.Response extends Object implements Connection.ResponseHttpConnection.ResponseObjectConnection.ResponseMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description String body​() Get the body of the response as a plain string. byte[] bodyAsBytes​() Get the body of the response as an array of bytes. BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream. Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). String charset​() Get the character set name of the response, derived from the content-type header. HttpConnection.Response charset​(String charset) Set / override the response character set. String contentType​() Get the response content type (e.g. Document parse​() Read and parse the body of the response as a Document. int statusCode​() Get the status code of the response. String statusMessage​() Get the status message of the response. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description String body​() Get the body of the response as a plain string. byte[] bodyAsBytes​() Get the body of the response as an array of bytes. BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream. Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). String charset​() Get the character set name of the response, derived from the content-type header. HttpConnection.Response charset​(String charset) Set / override the response character set. String contentType​() Get the response content type (e.g. Document parse​() Read and parse the body of the response as a Document. int statusCode​() Get the status code of the response. String statusMessage​() Get the status message of the response. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description String body​() Get the body of the response as a plain string. byte[] bodyAsBytes​() Get the body of the response as an array of bytes. BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream. Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). String charset​() Get the character set name of the response, derived from the content-type header. HttpConnection.Response charset​(String charset) Set / override the response character set. String contentType​() Get the response content type (e.g. Document parse​() Read and parse the body of the response as a Document. int statusCode​() Get the status code of the response. String statusMessage​() Get the status message of the response. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description String body​() Get the body of the response as a plain string. byte[] bodyAsBytes​() Get the body of the response as an array of bytes. BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream. Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). String charset​() Get the character set name of the response, derived from the content-type header. HttpConnection.Response charset​(String charset) Set / override the response character set. String contentType​() Get the response content type (e.g. Document parse​() Read and parse the body of the response as a Document. int statusCode​() Get the status code of the response. String statusMessage​() Get the status message of the response. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Instance Methods Concrete Methods Modifier and Type Method Description String body​() Get the body of the response as a plain string. byte[] bodyAsBytes​() Get the body of the response as an array of bytes. BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream. Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). String charset​() Get the character set name of the response, derived from the content-type header. HttpConnection.Response charset​(String charset) Set / override the response character set. String contentType​() Get the response content type (e.g. Document parse​() Read and parse the body of the response as a Document. int statusCode​() Get the status code of the response. String statusMessage​() Get the status message of the response. Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, url Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod SummaryAll Methods Instance Methods Concrete Methods Modifier and Type Method Description String body​() Get the body of the response as a plain string. byte[] bodyAsBytes​() Get the body of the response as an array of bytes. BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream. Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). String charset​() Get the character set name of the response, derived from the content-type header. HttpConnection.Response charset​(String charset) Set / override the response character set. String contentType​() Get the response content type (e.g. Document parse​() Read and parse the body of the response as a Document. int statusCode​() Get the status code of the response. String statusMessage​() Get the status message of the response.All Methods Instance Methods Concrete MethodsAll MethodsAll MethodsInstance MethodsInstance MethodsInstance MethodsConcrete MethodsConcrete MethodsConcrete MethodsModifier and Type Method Description String body​() Get the body of the response as a plain string. byte[] bodyAsBytes​() Get the body of the response as an array of bytes. BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream. Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). String charset​() Get the character set name of the response, derived from the content-type header. HttpConnection.Response charset​(String charset) Set / override the response character set. String contentType​() Get the response content type (e.g. Document parse​() Read and parse the body of the response as a Document. int statusCode​() Get the status code of the response. String statusMessage​() Get the status message of the response.Modifier and Type Method DescriptionModifier and TypeMethodDescriptionString body​() Get the body of the response as a plain string.StringStringStringbody​()body​()bodybodyGet the body of the response as a plain string.Get the body of the response as a plain string.byte[] bodyAsBytes​() Get the body of the response as an array of bytes.byte[]byte[]bodyAsBytes​()bodyAsBytes​()bodyAsBytesbodyAsBytesGet the body of the response as an array of bytes.Get the body of the response as an array of bytes.BufferedInputStream bodyStream​() Get the body of the response as a (buffered) InputStream.BufferedInputStreamBufferedInputStreamBufferedInputStreambodyStream​()bodyStream​()bodyStreambodyStreamGet the body of the response as a (buffered) InputStream.Get the body of the response as a (buffered) InputStream.Connection.Response bufferUp​() Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read).Connection.ResponseConnection.ResponseConnection.ResponsebufferUp​()bufferUp​()bufferUpbufferUpRead the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read).Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read).Connection.Response.parse()Connection.Response.parse()String charset​() Get the character set name of the response, derived from the content-type header.StringStringStringcharset​()charset​()charsetcharsetGet the character set name of the response, derived from the content-type header.Get the character set name of the response, derived from the content-type header.HttpConnection.Response charset​(String charset) Set / override the response character set.HttpConnection.ResponseHttpConnection.ResponseHttpConnection.Responsecharset​(String charset)charset​(String charset)charsetcharsetStringSet / override the response character set.Set / override the response character set.String contentType​() Get the response content type (e.g.StringStringStringcontentType​()contentType​()contentTypecontentTypeGet the response content type (e.g.Get the response content type (e.g.Document parse​() Read and parse the body of the response as a Document.DocumentDocumentDocumentparse​()parse​()parseparseRead and parse the body of the response as a Document.Read and parse the body of the response as a Document.int statusCode​() Get the status code of the response.intintstatusCode​()statusCode​()statusCodestatusCodeGet the status code of the response.Get the status code of the response.String statusMessage​() Get the status message of the response.StringStringStringstatusMessage​()statusMessage​()statusMessagestatusMessageGet the status message of the response.Get the status message of the response.Methods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, urlMethods inherited from interface org.jsoup.Connection.Base addHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, urlMethods inherited from interface org.jsoup.Connection.BaseConnection.BaseaddHeader, cookie, cookie, cookies, hasCookie, hasHeader, hasHeaderWithValue, header, header, headers, headers, method, method, multiHeaders, removeCookie, removeHeader, url, urladdHeadercookiecookiecookieshasCookiehasHeaderhasHeaderWithValueheaderheaderheadersheadersmethodmethodmultiHeadersremoveCookieremoveHeaderurlurlMethods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethods inherited from class java.lang.ObjectObjectclone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitcloneequalsfinalizegetClasshashCodenotifynotifyAlltoStringwaitwaitwaitMethod Detail statusCode public int statusCode​() Description copied from interface: Connection.Response Get the status code of the response. Specified by: statusCode in interface Connection.Response Returns: status code statusMessage public String statusMessage​() Description copied from interface: Connection.Response Get the status message of the response. Specified by: statusMessage in interface Connection.Response Returns: status message charset public String charset​() Description copied from interface: Connection.Response Get the character set name of the response, derived from the content-type header. Specified by: charset in interface Connection.Response Returns: character set name charset public HttpConnection.Response charset​(String charset) Description copied from interface: Connection.Response Set / override the response character set. When the document body is parsed it will be with this charset. Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chaining contentType public String contentType​() Description copied from interface: Connection.Response Get the response content type (e.g. "text/html"); Specified by: contentType in interface Connection.Response Returns: the response content type parse public Document parse​() throws IOException Description copied from interface: Connection.Response Read and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first. Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on error body public String body​() Description copied from interface: Connection.Response Get the body of the response as a plain string. Specified by: body in interface Connection.Response Returns: body bodyAsBytes public byte[] bodyAsBytes​() Description copied from interface: Connection.Response Get the body of the response as an array of bytes. Specified by: bodyAsBytes in interface Connection.Response Returns: body bytes bufferUp public Connection.Response bufferUp​() Description copied from interface: Connection.Response Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect. Specified by: bufferUp in interface Connection.Response Returns: this response, for chaining bodyStream public BufferedInputStream bodyStream​() Description copied from interface: Connection.Response Get the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first. Specified by: bodyStream in interface Connection.Response Returns: the response body input streamMethod Detail statusCode public int statusCode​() Description copied from interface: Connection.Response Get the status code of the response. Specified by: statusCode in interface Connection.Response Returns: status code statusMessage public String statusMessage​() Description copied from interface: Connection.Response Get the status message of the response. Specified by: statusMessage in interface Connection.Response Returns: status message charset public String charset​() Description copied from interface: Connection.Response Get the character set name of the response, derived from the content-type header. Specified by: charset in interface Connection.Response Returns: character set name charset public HttpConnection.Response charset​(String charset) Description copied from interface: Connection.Response Set / override the response character set. When the document body is parsed it will be with this charset. Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chaining contentType public String contentType​() Description copied from interface: Connection.Response Get the response content type (e.g. "text/html"); Specified by: contentType in interface Connection.Response Returns: the response content type parse public Document parse​() throws IOException Description copied from interface: Connection.Response Read and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first. Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on error body public String body​() Description copied from interface: Connection.Response Get the body of the response as a plain string. Specified by: body in interface Connection.Response Returns: body bodyAsBytes public byte[] bodyAsBytes​() Description copied from interface: Connection.Response Get the body of the response as an array of bytes. Specified by: bodyAsBytes in interface Connection.Response Returns: body bytes bufferUp public Connection.Response bufferUp​() Description copied from interface: Connection.Response Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect. Specified by: bufferUp in interface Connection.Response Returns: this response, for chaining bodyStream public BufferedInputStream bodyStream​() Description copied from interface: Connection.Response Get the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first. Specified by: bodyStream in interface Connection.Response Returns: the response body input streamMethod Detail statusCode public int statusCode​() Description copied from interface: Connection.Response Get the status code of the response. Specified by: statusCode in interface Connection.Response Returns: status code statusMessage public String statusMessage​() Description copied from interface: Connection.Response Get the status message of the response. Specified by: statusMessage in interface Connection.Response Returns: status message charset public String charset​() Description copied from interface: Connection.Response Get the character set name of the response, derived from the content-type header. Specified by: charset in interface Connection.Response Returns: character set name charset public HttpConnection.Response charset​(String charset) Description copied from interface: Connection.Response Set / override the response character set. When the document body is parsed it will be with this charset. Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chaining contentType public String contentType​() Description copied from interface: Connection.Response Get the response content type (e.g. "text/html"); Specified by: contentType in interface Connection.Response Returns: the response content type parse public Document parse​() throws IOException Description copied from interface: Connection.Response Read and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first. Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on error body public String body​() Description copied from interface: Connection.Response Get the body of the response as a plain string. Specified by: body in interface Connection.Response Returns: body bodyAsBytes public byte[] bodyAsBytes​() Description copied from interface: Connection.Response Get the body of the response as an array of bytes. Specified by: bodyAsBytes in interface Connection.Response Returns: body bytes bufferUp public Connection.Response bufferUp​() Description copied from interface: Connection.Response Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect. Specified by: bufferUp in interface Connection.Response Returns: this response, for chaining bodyStream public BufferedInputStream bodyStream​() Description copied from interface: Connection.Response Get the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first. Specified by: bodyStream in interface Connection.Response Returns: the response body input streamMethod Detail statusCode public int statusCode​() Description copied from interface: Connection.Response Get the status code of the response. Specified by: statusCode in interface Connection.Response Returns: status code statusMessage public String statusMessage​() Description copied from interface: Connection.Response Get the status message of the response. Specified by: statusMessage in interface Connection.Response Returns: status message charset public String charset​() Description copied from interface: Connection.Response Get the character set name of the response, derived from the content-type header. Specified by: charset in interface Connection.Response Returns: character set name charset public HttpConnection.Response charset​(String charset) Description copied from interface: Connection.Response Set / override the response character set. When the document body is parsed it will be with this charset. Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chaining contentType public String contentType​() Description copied from interface: Connection.Response Get the response content type (e.g. "text/html"); Specified by: contentType in interface Connection.Response Returns: the response content type parse public Document parse​() throws IOException Description copied from interface: Connection.Response Read and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first. Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on error body public String body​() Description copied from interface: Connection.Response Get the body of the response as a plain string. Specified by: body in interface Connection.Response Returns: body bodyAsBytes public byte[] bodyAsBytes​() Description copied from interface: Connection.Response Get the body of the response as an array of bytes. Specified by: bodyAsBytes in interface Connection.Response Returns: body bytes bufferUp public Connection.Response bufferUp​() Description copied from interface: Connection.Response Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect. Specified by: bufferUp in interface Connection.Response Returns: this response, for chaining bodyStream public BufferedInputStream bodyStream​() Description copied from interface: Connection.Response Get the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first. Specified by: bodyStream in interface Connection.Response Returns: the response body input streamMethod Detail statusCode public int statusCode​() Description copied from interface: Connection.Response Get the status code of the response. Specified by: statusCode in interface Connection.Response Returns: status code statusMessage public String statusMessage​() Description copied from interface: Connection.Response Get the status message of the response. Specified by: statusMessage in interface Connection.Response Returns: status message charset public String charset​() Description copied from interface: Connection.Response Get the character set name of the response, derived from the content-type header. Specified by: charset in interface Connection.Response Returns: character set name charset public HttpConnection.Response charset​(String charset) Description copied from interface: Connection.Response Set / override the response character set. When the document body is parsed it will be with this charset. Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chaining contentType public String contentType​() Description copied from interface: Connection.Response Get the response content type (e.g. "text/html"); Specified by: contentType in interface Connection.Response Returns: the response content type parse public Document parse​() throws IOException Description copied from interface: Connection.Response Read and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first. Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on error body public String body​() Description copied from interface: Connection.Response Get the body of the response as a plain string. Specified by: body in interface Connection.Response Returns: body bodyAsBytes public byte[] bodyAsBytes​() Description copied from interface: Connection.Response Get the body of the response as an array of bytes. Specified by: bodyAsBytes in interface Connection.Response Returns: body bytes bufferUp public Connection.Response bufferUp​() Description copied from interface: Connection.Response Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect. Specified by: bufferUp in interface Connection.Response Returns: this response, for chaining bodyStream public BufferedInputStream bodyStream​() Description copied from interface: Connection.Response Get the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first. Specified by: bodyStream in interface Connection.Response Returns: the response body input streamMethod DetailstatusCode public int statusCode​() Description copied from interface: Connection.Response Get the status code of the response. Specified by: statusCode in interface Connection.Response Returns: status codestatusCode public int statusCode​() Description copied from interface: Connection.Response Get the status code of the response. Specified by: statusCode in interface Connection.Response Returns: status codestatusCodepublic int statusCode​()Description copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseGet the status code of the response.Specified by: statusCode in interface Connection.Response Returns: status codeSpecified by:Specified by:statusCode in interface Connection.ResponsestatusCodestatusCodeConnection.ResponseConnection.ResponseReturns:Returns:status codestatusMessage public String statusMessage​() Description copied from interface: Connection.Response Get the status message of the response. Specified by: statusMessage in interface Connection.Response Returns: status messagestatusMessage public String statusMessage​() Description copied from interface: Connection.Response Get the status message of the response. Specified by: statusMessage in interface Connection.Response Returns: status messagestatusMessagepublic String statusMessage​()StringDescription copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseGet the status message of the response.Specified by: statusMessage in interface Connection.Response Returns: status messageSpecified by:Specified by:statusMessage in interface Connection.ResponsestatusMessagestatusMessageConnection.ResponseConnection.ResponseReturns:Returns:status messagecharset public String charset​() Description copied from interface: Connection.Response Get the character set name of the response, derived from the content-type header. Specified by: charset in interface Connection.Response Returns: character set namecharset public String charset​() Description copied from interface: Connection.Response Get the character set name of the response, derived from the content-type header. Specified by: charset in interface Connection.Response Returns: character set namecharsetpublic String charset​()StringDescription copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseGet the character set name of the response, derived from the content-type header.Specified by: charset in interface Connection.Response Returns: character set nameSpecified by:Specified by:charset in interface Connection.ResponsecharsetcharsetConnection.ResponseConnection.ResponseReturns:Returns:character set namecharset public HttpConnection.Response charset​(String charset) Description copied from interface: Connection.Response Set / override the response character set. When the document body is parsed it will be with this charset. Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chainingcharset public HttpConnection.Response charset​(String charset) Description copied from interface: Connection.Response Set / override the response character set. When the document body is parsed it will be with this charset. Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chainingcharsetpublic HttpConnection.Response charset​(String charset)HttpConnection.ResponseStringDescription copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseSet / override the response character set. When the document body is parsed it will be with this charset.Specified by: charset in interface Connection.Response Parameters: charset - to decode body as Returns: this Response, for chainingSpecified by:Specified by:charset in interface Connection.ResponsecharsetcharsetConnection.ResponseConnection.ResponseParameters:Parameters:charset - to decode body ascharsetReturns:Returns:this Response, for chainingcontentType public String contentType​() Description copied from interface: Connection.Response Get the response content type (e.g. "text/html"); Specified by: contentType in interface Connection.Response Returns: the response content typecontentType public String contentType​() Description copied from interface: Connection.Response Get the response content type (e.g. "text/html"); Specified by: contentType in interface Connection.Response Returns: the response content typecontentTypepublic String contentType​()StringDescription copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseGet the response content type (e.g. "text/html");Specified by: contentType in interface Connection.Response Returns: the response content typeSpecified by:Specified by:contentType in interface Connection.ResponsecontentTypecontentTypeConnection.ResponseConnection.ResponseReturns:Returns:the response content typeparse public Document parse​() throws IOException Description copied from interface: Connection.Response Read and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first. Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on errorparse public Document parse​() throws IOException Description copied from interface: Connection.Response Read and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first. Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on errorparsepublic Document parse​() throws IOExceptionDocumentIOExceptionDescription copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseRead and parse the body of the response as a Document. If you intend to parse the same response multiple times, you should Connection.Response.bufferUp() first.Connection.Response.bufferUp()Connection.Response.bufferUp()Specified by: parse in interface Connection.Response Returns: a parsed Document Throws: IOException - on errorSpecified by:Specified by:parse in interface Connection.ResponseparseparseConnection.ResponseConnection.ResponseReturns:Returns:a parsed DocumentThrows:Throws:IOException - on errorIOExceptionIOExceptionbody public String body​() Description copied from interface: Connection.Response Get the body of the response as a plain string. Specified by: body in interface Connection.Response Returns: bodybody public String body​() Description copied from interface: Connection.Response Get the body of the response as a plain string. Specified by: body in interface Connection.Response Returns: bodybodypublic String body​()StringDescription copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseGet the body of the response as a plain string.Specified by: body in interface Connection.Response Returns: bodySpecified by:Specified by:body in interface Connection.ResponsebodybodyConnection.ResponseConnection.ResponseReturns:Returns:bodybodyAsBytes public byte[] bodyAsBytes​() Description copied from interface: Connection.Response Get the body of the response as an array of bytes. Specified by: bodyAsBytes in interface Connection.Response Returns: body bytesbodyAsBytes public byte[] bodyAsBytes​() Description copied from interface: Connection.Response Get the body of the response as an array of bytes. Specified by: bodyAsBytes in interface Connection.Response Returns: body bytesbodyAsBytespublic byte[] bodyAsBytes​()Description copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseGet the body of the response as an array of bytes.Specified by: bodyAsBytes in interface Connection.Response Returns: body bytesSpecified by:Specified by:bodyAsBytes in interface Connection.ResponsebodyAsBytesbodyAsBytesConnection.ResponseConnection.ResponseReturns:Returns:body bytesbufferUp public Connection.Response bufferUp​() Description copied from interface: Connection.Response Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect. Specified by: bufferUp in interface Connection.Response Returns: this response, for chainingbufferUp public Connection.Response bufferUp​() Description copied from interface: Connection.Response Read the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect. Specified by: bufferUp in interface Connection.Response Returns: this response, for chainingbufferUppublic Connection.Response bufferUp​()Connection.ResponseDescription copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseRead the body of the response into a local buffer, so that Connection.Response.parse() may be called repeatedly on the same connection response (otherwise, once the response is read, its InputStream will have been drained and may not be re-read). Calling Connection.Response.body() or Connection.Response.bodyAsBytes() has the same effect.Connection.Response.parse()Connection.Response.parse()Connection.Response.body()Connection.Response.body()Connection.Response.bodyAsBytes()Connection.Response.bodyAsBytes()Specified by: bufferUp in interface Connection.Response Returns: this response, for chainingSpecified by:Specified by:bufferUp in interface Connection.ResponsebufferUpbufferUpConnection.ResponseConnection.ResponseReturns:Returns:this response, for chainingbodyStream public BufferedInputStream bodyStream​() Description copied from interface: Connection.Response Get the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first. Specified by: bodyStream in interface Connection.Response Returns: the response body input streambodyStream public BufferedInputStream bodyStream​() Description copied from interface: Connection.Response Get the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first. Specified by: bodyStream in interface Connection.Response Returns: the response body input streambodyStreampublic BufferedInputStream bodyStream​()BufferedInputStreamDescription copied from interface: Connection.ResponseDescription copied from interface: Connection.ResponseConnection.ResponseConnection.ResponseGet the body of the response as a (buffered) InputStream. You should close the input stream when you're done with it. Other body methods (like bufferUp, body, parse, etc) will not work in conjunction with this method. This method is useful for writing large responses to disk, without buffering them completely into memory first.This method is useful for writing large responses to disk, without buffering them completely into memory first.Specified by: bodyStream in interface Connection.Response Returns: the response body input streamSpecified by:Specified by:bodyStream in interface Connection.ResponsebodyStreambodyStreamConnection.ResponseConnection.ResponseReturns:Returns:the response body input streamSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll Classes<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |Field |Constr |MethodMethodDetail: Field | Constr | MethodDetail:Field |Constr |MethodMethodCopyright © 2009–2017 Jonathan Hedley. All rights reserved.Copyright © 2009–2017 Jonathan Hedley. All rights reserved.Jonathan Hedley