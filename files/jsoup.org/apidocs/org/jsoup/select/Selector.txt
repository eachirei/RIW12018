<div> JavaScript is disabled on your browser. </div> Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Package org.jsoup.select Class Selector java.lang.Object org.jsoup.select.Selector public class Selector extends Object CSS-like element selector, that finds elements matching a query. Selector syntax A selector is a chain of simple selectors, separated by combinators. Selectors are case insensitive (including against elements, attributes, and attribute values). The universal selector (*) is implicit when no element selector is supplied (i.e. *.header and .header is equivalent). Pattern Matches Example * any element * tag elements with the given tag name div *|E elements of type E in any namespace ns *|name finds <fb:name> elements ns|E elements of type E in the namespace ns fb|name finds <fb:name> elements #id elements with attribute ID of "id" div#wrap, #logo .class elements with a class name of "class" div.left, .result [attr] elements with an attribute named "attr" (with any value) a[href], [title] [^attrPrefix] elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets [^data-], div[^data-] [attr=val] elements with an attribute named "attr", and value equal to "val" img[width=500], a[rel=nofollow] [attr="val"] elements with an attribute named "attr", and value equal to "val" span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"] [attr^=valPrefix] elements with an attribute named "attr", and value starting with "valPrefix" a[href^=http:] [attr$=valSuffix] elements with an attribute named "attr", and value ending with "valSuffix" img[src$=.png] [attr*=valContaining] elements with an attribute named "attr", and value containing "valContaining" a[href*=/search/] [attr~=regex] elements with an attribute named "attr", and value matching the regular expression img[src~=(?i)\\.(png|jpe?g)] The above may be combined in any order div.header[title] Combinators E F an F element descended from an E element div a, .logo h1 E > F an F direct child of E ol > li E + F an F element immediately preceded by sibling E li + li, div.head + div E ~ F an F element preceded by sibling E h1 ~ p E, F, G all matching elements E, F, or G a[href], div, h3 Pseudo selectors :lt(n) elements whose sibling index is less than n td:lt(3) finds the first 3 cells of each row :gt(n) elements whose sibling index is greater than n td:gt(1) finds cells after skipping the first two :eq(n) elements whose sibling index is equal to n td:eq(0) finds the first cell of each row :has(selector) elements that contains at least one element matching the selector div:has(p) finds divs that contain p elements :not(selector) elements that do not match the selector. See also Elements.not(String) div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs. :contains(text) elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants. p:contains(jsoup) finds p elements containing the text "jsoup". :matches(regex) elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants. td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively. :containsOwn(text) elements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants. p:containsOwn(jsoup) finds p elements with own text "jsoup". :matchesOwn(regex) elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants. td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively. :containsData(data) elements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants. script:contains(jsoup) finds script elements containing the data "jsoup". The above may be combined in any order and with other selectors .light:contains(name):eq(0) :matchText treats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using. p:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One". Structural pseudo selectors :root The element that is the root of the document. In HTML, this is the html element :root :nth-child(an+b) elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n. tr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h li :nth-last-child(an+b) elements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child() tr:nth-last-child(-n+2) the last two rows of a table :nth-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-of-type(2n+1) :nth-last-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-last-of-type(2n+1) :first-child elements that are the first child of some other element. div > p:first-child :last-child elements that are the last child of some other element. ol > li:last-child :first-of-type elements that are the first sibling of its type in the list of children of its parent element dl dt:first-of-type :last-of-type elements that are the last sibling of its type in the list of children of its parent element tr > td:last-of-type :only-child elements that have a parent element and whose parent element hasve no other element children :only-of-type an element that has a parent element and whose parent element has no other element children with the same expanded element name :empty elements that have no children at all Author: Jonathan Hedley, jonathan@hedley.net See Also: Element.select(String) Nested Class Summary Nested Classes Modifier and Type Class Description static class Selector.SelectorParseException Method Summary All Methods Static Methods Concrete Methods Modifier and Type Method Description static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. static Elements select​(String query, Element root) Find elements matching selector. static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Method Detail select public static Elements select​(String query, Element root) Find elements matching selector. Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query. select public static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if none select public static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if none selectFirst public static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none. Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Copyright © 2009–2017 Jonathan Hedley. All rights reserved.<div> JavaScript is disabled on your browser. </div>Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll ClassesSEARCH:SEARCH:SEARCH:<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |NestedField |Constr |MethodMethodDetail: Field | Constr | MethodDetail:Field |Constr |MethodMethodPackage org.jsoup.select Class SelectorPackage org.jsoup.selectPackageorg.jsoup.selectClass Selectorjava.lang.Object org.jsoup.select.Selector public class Selector extends Object CSS-like element selector, that finds elements matching a query. Selector syntax A selector is a chain of simple selectors, separated by combinators. Selectors are case insensitive (including against elements, attributes, and attribute values). The universal selector (*) is implicit when no element selector is supplied (i.e. *.header and .header is equivalent). Pattern Matches Example * any element * tag elements with the given tag name div *|E elements of type E in any namespace ns *|name finds <fb:name> elements ns|E elements of type E in the namespace ns fb|name finds <fb:name> elements #id elements with attribute ID of "id" div#wrap, #logo .class elements with a class name of "class" div.left, .result [attr] elements with an attribute named "attr" (with any value) a[href], [title] [^attrPrefix] elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets [^data-], div[^data-] [attr=val] elements with an attribute named "attr", and value equal to "val" img[width=500], a[rel=nofollow] [attr="val"] elements with an attribute named "attr", and value equal to "val" span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"] [attr^=valPrefix] elements with an attribute named "attr", and value starting with "valPrefix" a[href^=http:] [attr$=valSuffix] elements with an attribute named "attr", and value ending with "valSuffix" img[src$=.png] [attr*=valContaining] elements with an attribute named "attr", and value containing "valContaining" a[href*=/search/] [attr~=regex] elements with an attribute named "attr", and value matching the regular expression img[src~=(?i)\\.(png|jpe?g)] The above may be combined in any order div.header[title] Combinators E F an F element descended from an E element div a, .logo h1 E > F an F direct child of E ol > li E + F an F element immediately preceded by sibling E li + li, div.head + div E ~ F an F element preceded by sibling E h1 ~ p E, F, G all matching elements E, F, or G a[href], div, h3 Pseudo selectors :lt(n) elements whose sibling index is less than n td:lt(3) finds the first 3 cells of each row :gt(n) elements whose sibling index is greater than n td:gt(1) finds cells after skipping the first two :eq(n) elements whose sibling index is equal to n td:eq(0) finds the first cell of each row :has(selector) elements that contains at least one element matching the selector div:has(p) finds divs that contain p elements :not(selector) elements that do not match the selector. See also Elements.not(String) div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs. :contains(text) elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants. p:contains(jsoup) finds p elements containing the text "jsoup". :matches(regex) elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants. td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively. :containsOwn(text) elements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants. p:containsOwn(jsoup) finds p elements with own text "jsoup". :matchesOwn(regex) elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants. td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively. :containsData(data) elements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants. script:contains(jsoup) finds script elements containing the data "jsoup". The above may be combined in any order and with other selectors .light:contains(name):eq(0) :matchText treats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using. p:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One". Structural pseudo selectors :root The element that is the root of the document. In HTML, this is the html element :root :nth-child(an+b) elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n. tr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h li :nth-last-child(an+b) elements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child() tr:nth-last-child(-n+2) the last two rows of a table :nth-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-of-type(2n+1) :nth-last-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-last-of-type(2n+1) :first-child elements that are the first child of some other element. div > p:first-child :last-child elements that are the last child of some other element. ol > li:last-child :first-of-type elements that are the first sibling of its type in the list of children of its parent element dl dt:first-of-type :last-of-type elements that are the last sibling of its type in the list of children of its parent element tr > td:last-of-type :only-child elements that have a parent element and whose parent element hasve no other element children :only-of-type an element that has a parent element and whose parent element has no other element children with the same expanded element name :empty elements that have no children at all Author: Jonathan Hedley, jonathan@hedley.net See Also: Element.select(String) Nested Class Summary Nested Classes Modifier and Type Class Description static class Selector.SelectorParseException Method Summary All Methods Static Methods Concrete Methods Modifier and Type Method Description static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. static Elements select​(String query, Element root) Find elements matching selector. static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait Method Detail select public static Elements select​(String query, Element root) Find elements matching selector. Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query. select public static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if none select public static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if none selectFirst public static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none.java.lang.Object org.jsoup.select.Selectorjava.lang.Objectjava.lang.Objectorg.jsoup.select.Selectororg.jsoup.select.Selectororg.jsoup.select.Selectorpublic class Selector extends Object CSS-like element selector, that finds elements matching a query. Selector syntax A selector is a chain of simple selectors, separated by combinators. Selectors are case insensitive (including against elements, attributes, and attribute values). The universal selector (*) is implicit when no element selector is supplied (i.e. *.header and .header is equivalent). Pattern Matches Example * any element * tag elements with the given tag name div *|E elements of type E in any namespace ns *|name finds <fb:name> elements ns|E elements of type E in the namespace ns fb|name finds <fb:name> elements #id elements with attribute ID of "id" div#wrap, #logo .class elements with a class name of "class" div.left, .result [attr] elements with an attribute named "attr" (with any value) a[href], [title] [^attrPrefix] elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets [^data-], div[^data-] [attr=val] elements with an attribute named "attr", and value equal to "val" img[width=500], a[rel=nofollow] [attr="val"] elements with an attribute named "attr", and value equal to "val" span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"] [attr^=valPrefix] elements with an attribute named "attr", and value starting with "valPrefix" a[href^=http:] [attr$=valSuffix] elements with an attribute named "attr", and value ending with "valSuffix" img[src$=.png] [attr*=valContaining] elements with an attribute named "attr", and value containing "valContaining" a[href*=/search/] [attr~=regex] elements with an attribute named "attr", and value matching the regular expression img[src~=(?i)\\.(png|jpe?g)] The above may be combined in any order div.header[title] Combinators E F an F element descended from an E element div a, .logo h1 E > F an F direct child of E ol > li E + F an F element immediately preceded by sibling E li + li, div.head + div E ~ F an F element preceded by sibling E h1 ~ p E, F, G all matching elements E, F, or G a[href], div, h3 Pseudo selectors :lt(n) elements whose sibling index is less than n td:lt(3) finds the first 3 cells of each row :gt(n) elements whose sibling index is greater than n td:gt(1) finds cells after skipping the first two :eq(n) elements whose sibling index is equal to n td:eq(0) finds the first cell of each row :has(selector) elements that contains at least one element matching the selector div:has(p) finds divs that contain p elements :not(selector) elements that do not match the selector. See also Elements.not(String) div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs. :contains(text) elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants. p:contains(jsoup) finds p elements containing the text "jsoup". :matches(regex) elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants. td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively. :containsOwn(text) elements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants. p:containsOwn(jsoup) finds p elements with own text "jsoup". :matchesOwn(regex) elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants. td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively. :containsData(data) elements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants. script:contains(jsoup) finds script elements containing the data "jsoup". The above may be combined in any order and with other selectors .light:contains(name):eq(0) :matchText treats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using. p:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One". Structural pseudo selectors :root The element that is the root of the document. In HTML, this is the html element :root :nth-child(an+b) elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n. tr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h li :nth-last-child(an+b) elements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child() tr:nth-last-child(-n+2) the last two rows of a table :nth-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-of-type(2n+1) :nth-last-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-last-of-type(2n+1) :first-child elements that are the first child of some other element. div > p:first-child :last-child elements that are the last child of some other element. ol > li:last-child :first-of-type elements that are the first sibling of its type in the list of children of its parent element dl dt:first-of-type :last-of-type elements that are the last sibling of its type in the list of children of its parent element tr > td:last-of-type :only-child elements that have a parent element and whose parent element hasve no other element children :only-of-type an element that has a parent element and whose parent element has no other element children with the same expanded element name :empty elements that have no children at all Author: Jonathan Hedley, jonathan@hedley.net See Also: Element.select(String)public class Selector extends Object CSS-like element selector, that finds elements matching a query. Selector syntax A selector is a chain of simple selectors, separated by combinators. Selectors are case insensitive (including against elements, attributes, and attribute values). The universal selector (*) is implicit when no element selector is supplied (i.e. *.header and .header is equivalent). Pattern Matches Example * any element * tag elements with the given tag name div *|E elements of type E in any namespace ns *|name finds <fb:name> elements ns|E elements of type E in the namespace ns fb|name finds <fb:name> elements #id elements with attribute ID of "id" div#wrap, #logo .class elements with a class name of "class" div.left, .result [attr] elements with an attribute named "attr" (with any value) a[href], [title] [^attrPrefix] elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets [^data-], div[^data-] [attr=val] elements with an attribute named "attr", and value equal to "val" img[width=500], a[rel=nofollow] [attr="val"] elements with an attribute named "attr", and value equal to "val" span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"] [attr^=valPrefix] elements with an attribute named "attr", and value starting with "valPrefix" a[href^=http:] [attr$=valSuffix] elements with an attribute named "attr", and value ending with "valSuffix" img[src$=.png] [attr*=valContaining] elements with an attribute named "attr", and value containing "valContaining" a[href*=/search/] [attr~=regex] elements with an attribute named "attr", and value matching the regular expression img[src~=(?i)\\.(png|jpe?g)] The above may be combined in any order div.header[title] Combinators E F an F element descended from an E element div a, .logo h1 E > F an F direct child of E ol > li E + F an F element immediately preceded by sibling E li + li, div.head + div E ~ F an F element preceded by sibling E h1 ~ p E, F, G all matching elements E, F, or G a[href], div, h3 Pseudo selectors :lt(n) elements whose sibling index is less than n td:lt(3) finds the first 3 cells of each row :gt(n) elements whose sibling index is greater than n td:gt(1) finds cells after skipping the first two :eq(n) elements whose sibling index is equal to n td:eq(0) finds the first cell of each row :has(selector) elements that contains at least one element matching the selector div:has(p) finds divs that contain p elements :not(selector) elements that do not match the selector. See also Elements.not(String) div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs. :contains(text) elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants. p:contains(jsoup) finds p elements containing the text "jsoup". :matches(regex) elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants. td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively. :containsOwn(text) elements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants. p:containsOwn(jsoup) finds p elements with own text "jsoup". :matchesOwn(regex) elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants. td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively. :containsData(data) elements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants. script:contains(jsoup) finds script elements containing the data "jsoup". The above may be combined in any order and with other selectors .light:contains(name):eq(0) :matchText treats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using. p:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One". Structural pseudo selectors :root The element that is the root of the document. In HTML, this is the html element :root :nth-child(an+b) elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n. tr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h li :nth-last-child(an+b) elements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child() tr:nth-last-child(-n+2) the last two rows of a table :nth-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-of-type(2n+1) :nth-last-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-last-of-type(2n+1) :first-child elements that are the first child of some other element. div > p:first-child :last-child elements that are the last child of some other element. ol > li:last-child :first-of-type elements that are the first sibling of its type in the list of children of its parent element dl dt:first-of-type :last-of-type elements that are the last sibling of its type in the list of children of its parent element tr > td:last-of-type :only-child elements that have a parent element and whose parent element hasve no other element children :only-of-type an element that has a parent element and whose parent element has no other element children with the same expanded element name :empty elements that have no children at all Author: Jonathan Hedley, jonathan@hedley.net See Also: Element.select(String)public class Selector extends Object CSS-like element selector, that finds elements matching a query. Selector syntax A selector is a chain of simple selectors, separated by combinators. Selectors are case insensitive (including against elements, attributes, and attribute values). The universal selector (*) is implicit when no element selector is supplied (i.e. *.header and .header is equivalent). Pattern Matches Example * any element * tag elements with the given tag name div *|E elements of type E in any namespace ns *|name finds <fb:name> elements ns|E elements of type E in the namespace ns fb|name finds <fb:name> elements #id elements with attribute ID of "id" div#wrap, #logo .class elements with a class name of "class" div.left, .result [attr] elements with an attribute named "attr" (with any value) a[href], [title] [^attrPrefix] elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets [^data-], div[^data-] [attr=val] elements with an attribute named "attr", and value equal to "val" img[width=500], a[rel=nofollow] [attr="val"] elements with an attribute named "attr", and value equal to "val" span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"] [attr^=valPrefix] elements with an attribute named "attr", and value starting with "valPrefix" a[href^=http:] [attr$=valSuffix] elements with an attribute named "attr", and value ending with "valSuffix" img[src$=.png] [attr*=valContaining] elements with an attribute named "attr", and value containing "valContaining" a[href*=/search/] [attr~=regex] elements with an attribute named "attr", and value matching the regular expression img[src~=(?i)\\.(png|jpe?g)] The above may be combined in any order div.header[title] Combinators E F an F element descended from an E element div a, .logo h1 E > F an F direct child of E ol > li E + F an F element immediately preceded by sibling E li + li, div.head + div E ~ F an F element preceded by sibling E h1 ~ p E, F, G all matching elements E, F, or G a[href], div, h3 Pseudo selectors :lt(n) elements whose sibling index is less than n td:lt(3) finds the first 3 cells of each row :gt(n) elements whose sibling index is greater than n td:gt(1) finds cells after skipping the first two :eq(n) elements whose sibling index is equal to n td:eq(0) finds the first cell of each row :has(selector) elements that contains at least one element matching the selector div:has(p) finds divs that contain p elements :not(selector) elements that do not match the selector. See also Elements.not(String) div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs. :contains(text) elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants. p:contains(jsoup) finds p elements containing the text "jsoup". :matches(regex) elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants. td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively. :containsOwn(text) elements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants. p:containsOwn(jsoup) finds p elements with own text "jsoup". :matchesOwn(regex) elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants. td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively. :containsData(data) elements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants. script:contains(jsoup) finds script elements containing the data "jsoup". The above may be combined in any order and with other selectors .light:contains(name):eq(0) :matchText treats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using. p:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One". Structural pseudo selectors :root The element that is the root of the document. In HTML, this is the html element :root :nth-child(an+b) elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n. tr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h li :nth-last-child(an+b) elements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child() tr:nth-last-child(-n+2) the last two rows of a table :nth-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-of-type(2n+1) :nth-last-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-last-of-type(2n+1) :first-child elements that are the first child of some other element. div > p:first-child :last-child elements that are the last child of some other element. ol > li:last-child :first-of-type elements that are the first sibling of its type in the list of children of its parent element dl dt:first-of-type :last-of-type elements that are the last sibling of its type in the list of children of its parent element tr > td:last-of-type :only-child elements that have a parent element and whose parent element hasve no other element children :only-of-type an element that has a parent element and whose parent element has no other element children with the same expanded element name :empty elements that have no children at all Author: Jonathan Hedley, jonathan@hedley.net See Also: Element.select(String)public class Selector extends ObjectSelectorObjectCSS-like element selector, that finds elements matching a query. Selector syntax A selector is a chain of simple selectors, separated by combinators. Selectors are case insensitive (including against elements, attributes, and attribute values). The universal selector (*) is implicit when no element selector is supplied (i.e. *.header and .header is equivalent). Pattern Matches Example * any element * tag elements with the given tag name div *|E elements of type E in any namespace ns *|name finds <fb:name> elements ns|E elements of type E in the namespace ns fb|name finds <fb:name> elements #id elements with attribute ID of "id" div#wrap, #logo .class elements with a class name of "class" div.left, .result [attr] elements with an attribute named "attr" (with any value) a[href], [title] [^attrPrefix] elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets [^data-], div[^data-] [attr=val] elements with an attribute named "attr", and value equal to "val" img[width=500], a[rel=nofollow] [attr="val"] elements with an attribute named "attr", and value equal to "val" span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"] [attr^=valPrefix] elements with an attribute named "attr", and value starting with "valPrefix" a[href^=http:] [attr$=valSuffix] elements with an attribute named "attr", and value ending with "valSuffix" img[src$=.png] [attr*=valContaining] elements with an attribute named "attr", and value containing "valContaining" a[href*=/search/] [attr~=regex] elements with an attribute named "attr", and value matching the regular expression img[src~=(?i)\\.(png|jpe?g)] The above may be combined in any order div.header[title] Combinators E F an F element descended from an E element div a, .logo h1 E > F an F direct child of E ol > li E + F an F element immediately preceded by sibling E li + li, div.head + div E ~ F an F element preceded by sibling E h1 ~ p E, F, G all matching elements E, F, or G a[href], div, h3 Pseudo selectors :lt(n) elements whose sibling index is less than n td:lt(3) finds the first 3 cells of each row :gt(n) elements whose sibling index is greater than n td:gt(1) finds cells after skipping the first two :eq(n) elements whose sibling index is equal to n td:eq(0) finds the first cell of each row :has(selector) elements that contains at least one element matching the selector div:has(p) finds divs that contain p elements :not(selector) elements that do not match the selector. See also Elements.not(String) div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs. :contains(text) elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants. p:contains(jsoup) finds p elements containing the text "jsoup". :matches(regex) elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants. td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively. :containsOwn(text) elements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants. p:containsOwn(jsoup) finds p elements with own text "jsoup". :matchesOwn(regex) elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants. td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively. :containsData(data) elements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants. script:contains(jsoup) finds script elements containing the data "jsoup". The above may be combined in any order and with other selectors .light:contains(name):eq(0) :matchText treats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using. p:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One". Structural pseudo selectors :root The element that is the root of the document. In HTML, this is the html element :root :nth-child(an+b) elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n. tr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h li :nth-last-child(an+b) elements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child() tr:nth-last-child(-n+2) the last two rows of a table :nth-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-of-type(2n+1) :nth-last-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-last-of-type(2n+1) :first-child elements that are the first child of some other element. div > p:first-child :last-child elements that are the last child of some other element. ol > li:last-child :first-of-type elements that are the first sibling of its type in the list of children of its parent element dl dt:first-of-type :last-of-type elements that are the last sibling of its type in the list of children of its parent element tr > td:last-of-type :only-child elements that have a parent element and whose parent element hasve no other element children :only-of-type an element that has a parent element and whose parent element has no other element children with the same expanded element name :empty elements that have no children at allSelector syntaxA selector is a chain of simple selectors, separated by combinators. Selectors are case insensitive (including against elements, attributes, and attribute values).case insensitiveThe universal selector (*) is implicit when no element selector is supplied (i.e. *.header and .header is equivalent).*.header.headerPattern Matches Example * any element * tag elements with the given tag name div *|E elements of type E in any namespace ns *|name finds <fb:name> elements ns|E elements of type E in the namespace ns fb|name finds <fb:name> elements #id elements with attribute ID of "id" div#wrap, #logo .class elements with a class name of "class" div.left, .result [attr] elements with an attribute named "attr" (with any value) a[href], [title] [^attrPrefix] elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets [^data-], div[^data-] [attr=val] elements with an attribute named "attr", and value equal to "val" img[width=500], a[rel=nofollow] [attr="val"] elements with an attribute named "attr", and value equal to "val" span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"] [attr^=valPrefix] elements with an attribute named "attr", and value starting with "valPrefix" a[href^=http:] [attr$=valSuffix] elements with an attribute named "attr", and value ending with "valSuffix" img[src$=.png] [attr*=valContaining] elements with an attribute named "attr", and value containing "valContaining" a[href*=/search/] [attr~=regex] elements with an attribute named "attr", and value matching the regular expression img[src~=(?i)\\.(png|jpe?g)] The above may be combined in any order div.header[title] Combinators E F an F element descended from an E element div a, .logo h1 E > F an F direct child of E ol > li E + F an F element immediately preceded by sibling E li + li, div.head + div E ~ F an F element preceded by sibling E h1 ~ p E, F, G all matching elements E, F, or G a[href], div, h3 Pseudo selectors :lt(n) elements whose sibling index is less than n td:lt(3) finds the first 3 cells of each row :gt(n) elements whose sibling index is greater than n td:gt(1) finds cells after skipping the first two :eq(n) elements whose sibling index is equal to n td:eq(0) finds the first cell of each row :has(selector) elements that contains at least one element matching the selector div:has(p) finds divs that contain p elements :not(selector) elements that do not match the selector. See also Elements.not(String) div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs. :contains(text) elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants. p:contains(jsoup) finds p elements containing the text "jsoup". :matches(regex) elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants. td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively. :containsOwn(text) elements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants. p:containsOwn(jsoup) finds p elements with own text "jsoup". :matchesOwn(regex) elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants. td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively. :containsData(data) elements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants. script:contains(jsoup) finds script elements containing the data "jsoup". The above may be combined in any order and with other selectors .light:contains(name):eq(0) :matchText treats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using. p:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One". Structural pseudo selectors :root The element that is the root of the document. In HTML, this is the html element :root :nth-child(an+b) elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n. tr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h li :nth-last-child(an+b) elements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child() tr:nth-last-child(-n+2) the last two rows of a table :nth-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-of-type(2n+1) :nth-last-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-last-of-type(2n+1) :first-child elements that are the first child of some other element. div > p:first-child :last-child elements that are the last child of some other element. ol > li:last-child :first-of-type elements that are the first sibling of its type in the list of children of its parent element dl dt:first-of-type :last-of-type elements that are the last sibling of its type in the list of children of its parent element tr > td:last-of-type :only-child elements that have a parent element and whose parent element hasve no other element children :only-of-type an element that has a parent element and whose parent element has no other element children with the same expanded element name :empty elements that have no children at allPattern Matches Example * any element * tag elements with the given tag name div *|E elements of type E in any namespace ns *|name finds <fb:name> elements ns|E elements of type E in the namespace ns fb|name finds <fb:name> elements #id elements with attribute ID of "id" div#wrap, #logo .class elements with a class name of "class" div.left, .result [attr] elements with an attribute named "attr" (with any value) a[href], [title] [^attrPrefix] elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets [^data-], div[^data-] [attr=val] elements with an attribute named "attr", and value equal to "val" img[width=500], a[rel=nofollow] [attr="val"] elements with an attribute named "attr", and value equal to "val" span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"] [attr^=valPrefix] elements with an attribute named "attr", and value starting with "valPrefix" a[href^=http:] [attr$=valSuffix] elements with an attribute named "attr", and value ending with "valSuffix" img[src$=.png] [attr*=valContaining] elements with an attribute named "attr", and value containing "valContaining" a[href*=/search/] [attr~=regex] elements with an attribute named "attr", and value matching the regular expression img[src~=(?i)\\.(png|jpe?g)] The above may be combined in any order div.header[title] Combinators E F an F element descended from an E element div a, .logo h1 E > F an F direct child of E ol > li E + F an F element immediately preceded by sibling E li + li, div.head + div E ~ F an F element preceded by sibling E h1 ~ p E, F, G all matching elements E, F, or G a[href], div, h3 Pseudo selectors :lt(n) elements whose sibling index is less than n td:lt(3) finds the first 3 cells of each row :gt(n) elements whose sibling index is greater than n td:gt(1) finds cells after skipping the first two :eq(n) elements whose sibling index is equal to n td:eq(0) finds the first cell of each row :has(selector) elements that contains at least one element matching the selector div:has(p) finds divs that contain p elements :not(selector) elements that do not match the selector. See also Elements.not(String) div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs. :contains(text) elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants. p:contains(jsoup) finds p elements containing the text "jsoup". :matches(regex) elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants. td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively. :containsOwn(text) elements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants. p:containsOwn(jsoup) finds p elements with own text "jsoup". :matchesOwn(regex) elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants. td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively. :containsData(data) elements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants. script:contains(jsoup) finds script elements containing the data "jsoup". The above may be combined in any order and with other selectors .light:contains(name):eq(0) :matchText treats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using. p:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One". Structural pseudo selectors :root The element that is the root of the document. In HTML, this is the html element :root :nth-child(an+b) elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n. tr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h li :nth-last-child(an+b) elements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child() tr:nth-last-child(-n+2) the last two rows of a table :nth-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-of-type(2n+1) :nth-last-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-last-of-type(2n+1) :first-child elements that are the first child of some other element. div > p:first-child :last-child elements that are the last child of some other element. ol > li:last-child :first-of-type elements that are the first sibling of its type in the list of children of its parent element dl dt:first-of-type :last-of-type elements that are the last sibling of its type in the list of children of its parent element tr > td:last-of-type :only-child elements that have a parent element and whose parent element hasve no other element children :only-of-type an element that has a parent element and whose parent element has no other element children with the same expanded element name :empty elements that have no children at allPattern Matches ExamplePatternMatchesExample* any element ***any element**tag elements with the given tag name divtagtagelements with the given tag namedivdiv*|E elements of type E in any namespace ns *|name finds <fb:name> elements*|E*|Eelements of type E in any namespace nsns*|name finds <fb:name> elements*|name<fb:name>ns|E elements of type E in the namespace ns fb|name finds <fb:name> elementsns|Ens|Eelements of type E in the namespace nsnsfb|name finds <fb:name> elementsfb|name<fb:name>#id elements with attribute ID of "id" div#wrap, #logo#id#idelements with attribute ID of "id"div#wrap, #logodiv#wrap#logo.class elements with a class name of "class" div.left, .result.class.classelements with a class name of "class"div.left, .resultdiv.left.result[attr] elements with an attribute named "attr" (with any value) a[href], [title][attr][attr]elements with an attribute named "attr" (with any value)a[href], [title]a[href][title][^attrPrefix] elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets [^data-], div[^data-][^attrPrefix][^attrPrefix]elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets[^data-], div[^data-][^data-]div[^data-][attr=val] elements with an attribute named "attr", and value equal to "val" img[width=500], a[rel=nofollow][attr=val][attr=val]elements with an attribute named "attr", and value equal to "val"img[width=500], a[rel=nofollow]img[width=500]a[rel=nofollow][attr="val"] elements with an attribute named "attr", and value equal to "val" span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"][attr="val"][attr="val"]elements with an attribute named "attr", and value equal to "val"span[hello="Cleveland"][goodbye="Columbus"], a[rel="nofollow"]span[hello="Cleveland"][goodbye="Columbus"]a[rel="nofollow"][attr^=valPrefix] elements with an attribute named "attr", and value starting with "valPrefix" a[href^=http:][attr^=valPrefix][attr^=valPrefix]elements with an attribute named "attr", and value starting with "valPrefix"a[href^=http:]a[href^=http:][attr$=valSuffix] elements with an attribute named "attr", and value ending with "valSuffix" img[src$=.png][attr$=valSuffix][attr$=valSuffix]elements with an attribute named "attr", and value ending with "valSuffix"img[src$=.png]img[src$=.png][attr*=valContaining] elements with an attribute named "attr", and value containing "valContaining" a[href*=/search/][attr*=valContaining][attr*=valContaining]elements with an attribute named "attr", and value containing "valContaining"a[href*=/search/]a[href*=/search/][attr~=regex] elements with an attribute named "attr", and value matching the regular expression img[src~=(?i)\\.(png|jpe?g)][attr~=regex][attr~=regex]regexelements with an attribute named "attr", and value matching the regular expressionimg[src~=(?i)\\.(png|jpe?g)]img[src~=(?i)\\.(png|jpe?g)]The above may be combined in any order div.header[title]The above may be combined in any orderdiv.header[title]div.header[title]CombinatorsCombinatorsCombinatorsE F an F element descended from an E element div a, .logo h1E FE Fan F element descended from an E elementdiv a, .logo h1div a.logo h1E > F an F direct child of E ol > liE > FE > Fan F direct child of Eol > liol > liE + F an F element immediately preceded by sibling E li + li, div.head + divE + FE + Fan F element immediately preceded by sibling Eli + li, div.head + divli + lidiv.head + divE ~ F an F element preceded by sibling E h1 ~ pE ~ FE ~ Fan F element preceded by sibling Eh1 ~ ph1 ~ pE, F, G all matching elements E, F, or G a[href], div, h3E, F, GE, F, Gall matching elements E, F, or Ga[href], div, h3a[href], div, h3Pseudo selectorsPseudo selectorsPseudo selectors:lt(n) elements whose sibling index is less than n td:lt(3) finds the first 3 cells of each row:lt(n):lt(n)nelements whose sibling index is less than nntd:lt(3) finds the first 3 cells of each rowtd:lt(3):gt(n) elements whose sibling index is greater than n td:gt(1) finds cells after skipping the first two:gt(n):gt(n)nelements whose sibling index is greater than nntd:gt(1) finds cells after skipping the first twotd:gt(1):eq(n) elements whose sibling index is equal to n td:eq(0) finds the first cell of each row:eq(n):eq(n)nelements whose sibling index is equal to nntd:eq(0) finds the first cell of each rowtd:eq(0):has(selector) elements that contains at least one element matching the selector div:has(p) finds divs that contain p elements:has(selector):has(selector)selectorelements that contains at least one element matching the selectorselectordiv:has(p) finds divs that contain p elementsdiv:has(p):not(selector) elements that do not match the selector. See also Elements.not(String) div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs.:not(selector):not(selector)selectorelements that do not match the selector. See also Elements.not(String)selectorElements.not(String)Elements.not(String)div:not(.logo) finds all divs that do not have the "logo" class.div:not(:has(div)) finds divs that do not contain divs.div:not(.logo)div:not(:has(div)) finds divs that do not contain divs.div:not(:has(div)):contains(text) elements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants. p:contains(jsoup) finds p elements containing the text "jsoup".:contains(text):contains(text)textelements that contains the specified text. The search is case insensitive. The text may appear in the found element, or any of its descendants.p:contains(jsoup) finds p elements containing the text "jsoup".p:contains(jsoup):matches(regex) elements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants. td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively.:matches(regex):matches(regex)regexelements whose text matches the specified regular expression. The text may appear in the found element, or any of its descendants.td:matches(\\d+) finds table cells containing digits. div:matches((?i)login) finds divs containing the text, case insensitively.td:matches(\\d+)div:matches((?i)login):containsOwn(text) elements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants. p:containsOwn(jsoup) finds p elements with own text "jsoup".:containsOwn(text):containsOwn(text)textelements that directly contain the specified text. The search is case insensitive. The text must appear in the found element, not any of its descendants.p:containsOwn(jsoup) finds p elements with own text "jsoup".p:containsOwn(jsoup):matchesOwn(regex) elements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants. td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively.:matchesOwn(regex):matchesOwn(regex)regexelements whose own text matches the specified regular expression. The text must appear in the found element, not any of its descendants.td:matchesOwn(\\d+) finds table cells directly containing digits. div:matchesOwn((?i)login) finds divs containing the text, case insensitively.td:matchesOwn(\\d+)div:matchesOwn((?i)login):containsData(data) elements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants. script:contains(jsoup) finds script elements containing the data "jsoup".:containsData(data):containsData(data)dataelements that contains the specified data. The contents of script and style elements, and comment nodes (etc) are considered data nodes, not text nodes. The search is case insensitive. The data may appear in the found element, or any of its descendants.datascriptstylecommentscript:contains(jsoup) finds script elements containing the data "jsoup".script:contains(jsoup)The above may be combined in any order and with other selectors .light:contains(name):eq(0)The above may be combined in any order and with other selectors.light:contains(name):eq(0).light:contains(name):eq(0):matchText treats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using. p:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One".:matchText:matchTexttreats text nodes as elements, and so allows you to match against and select text nodes.Note that using this selector will modify the DOM, so you may want to clone your document before using.Note that using this selector will modify the DOM, so you may want to clone your document before using.Noteclonep:matchText:firstChild with input <p>One<br />Two</p> will return one PseudoTextElement with text "One".p:matchText:firstChild<p>One<br />Two</p>PseudoTextElementPseudoTextElementOneStructural pseudo selectorsStructural pseudo selectorsStructural pseudo selectors:root The element that is the root of the document. In HTML, this is the html element :root:root:rootThe element that is the root of the document. In HTML, this is the html elementhtml:root:root:nth-child(an+b) elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n. tr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h li:nth-child(an+b):nth-child(an+b)abelements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1. In addition to this, :nth-child() can take odd and even as arguments instead. odd has the same signification as 2n+1, and even has the same signification as 2n.elements that have an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element. For values of a and b greater than zero, this effectively divides the element's children into groups of a elements (the last group taking the remainder), and selecting the bth element of each group. For example, this allows the selectors to address every other row in a table, and could be used to alternate the color of paragraph text in a cycle of four. The a and b values must be integers (positive, negative, or zero). The index of the first child of an element is 1.an+b-1abbeforenabbab:nth-child()oddevenodd2n+1even2ntr:nth-child(2n+1) finds every odd row of a table. :nth-child(10n-1) the 9th, 19th, 29th, etc, element. li:nth-child(5) the 5h litr:nth-child(2n+1):nth-child(10n-1)li:nth-child(5):nth-last-child(an+b) elements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child() tr:nth-last-child(-n+2) the last two rows of a table:nth-last-child(an+b):nth-last-child(an+b)abelements that have an+b-1 siblings after it in the document tree. Otherwise like :nth-child()an+b-1abafter:nth-child()tr:nth-last-child(-n+2) the last two rows of a tabletr:nth-last-child(-n+2):nth-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-of-type(2n+1):nth-of-type(an+b):nth-of-type(an+b)abpseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent elementan+b-1abbeforeimg:nth-of-type(2n+1)img:nth-of-type(2n+1):nth-last-of-type(an+b) pseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element img:nth-last-of-type(2n+1):nth-last-of-type(an+b):nth-last-of-type(an+b)abpseudo-class notation represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent elementan+b-1abafterimg:nth-last-of-type(2n+1)img:nth-last-of-type(2n+1):first-child elements that are the first child of some other element. div > p:first-child:first-child:first-childelements that are the first child of some other element.div > p:first-childdiv > p:first-child:last-child elements that are the last child of some other element. ol > li:last-child:last-child:last-childelements that are the last child of some other element.ol > li:last-childol > li:last-child:first-of-type elements that are the first sibling of its type in the list of children of its parent element dl dt:first-of-type:first-of-type:first-of-typeelements that are the first sibling of its type in the list of children of its parent elementdl dt:first-of-typedl dt:first-of-type:last-of-type elements that are the last sibling of its type in the list of children of its parent element tr > td:last-of-type:last-of-type:last-of-typeelements that are the last sibling of its type in the list of children of its parent elementtr > td:last-of-typetr > td:last-of-type:only-child elements that have a parent element and whose parent element hasve no other element children:only-child:only-childelements that have a parent element and whose parent element hasve no other element children:only-of-type an element that has a parent element and whose parent element has no other element children with the same expanded element name:only-of-type:only-of-typean element that has a parent element and whose parent element has no other element children with the same expanded element name:empty elements that have no children at all:empty:emptyelements that have no children at allAuthor: Jonathan Hedley, jonathan@hedley.net See Also: Element.select(String)Author:Author:Jonathan Hedley, jonathan@hedley.netSee Also:See Also:Element.select(String)Element.select(String)Element.select(String)Nested Class Summary Nested Classes Modifier and Type Class Description static class Selector.SelectorParseException Method Summary All Methods Static Methods Concrete Methods Modifier and Type Method Description static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. static Elements select​(String query, Element root) Find elements matching selector. static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitNested Class Summary Nested Classes Modifier and Type Class Description static class Selector.SelectorParseException Method Summary All Methods Static Methods Concrete Methods Modifier and Type Method Description static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. static Elements select​(String query, Element root) Find elements matching selector. static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitNested Class Summary Nested Classes Modifier and Type Class Description static class Selector.SelectorParseException Method Summary All Methods Static Methods Concrete Methods Modifier and Type Method Description static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. static Elements select​(String query, Element root) Find elements matching selector. static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitNested Class Summary Nested Classes Modifier and Type Class Description static class Selector.SelectorParseExceptionNested Class Summary Nested Classes Modifier and Type Class Description static class Selector.SelectorParseExceptionNested Class SummaryNested Classes Modifier and Type Class Description static class Selector.SelectorParseExceptionNested ClassesNested ClassesModifier and Type Class Description static class Selector.SelectorParseExceptionModifier and Type Class DescriptionModifier and TypeClassDescriptionstatic class Selector.SelectorParseExceptionstatic classstatic classSelector.SelectorParseExceptionSelector.SelectorParseExceptionSelector.SelectorParseExceptionSelector.SelectorParseExceptionMethod Summary All Methods Static Methods Concrete Methods Modifier and Type Method Description static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. static Elements select​(String query, Element root) Find elements matching selector. static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod Summary All Methods Static Methods Concrete Methods Modifier and Type Method Description static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. static Elements select​(String query, Element root) Find elements matching selector. static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethod SummaryAll Methods Static Methods Concrete Methods Modifier and Type Method Description static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. static Elements select​(String query, Element root) Find elements matching selector. static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query.All Methods Static Methods Concrete MethodsAll MethodsAll MethodsStatic MethodsStatic MethodsStatic MethodsConcrete MethodsConcrete MethodsConcrete MethodsModifier and Type Method Description static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. static Elements select​(String query, Element root) Find elements matching selector. static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query.Modifier and Type Method DescriptionModifier and TypeMethodDescriptionstatic Elements select​(String query, Iterable<Element> roots) Find elements matching selector.static Elementsstatic ElementsElementsselect​(String query, Iterable<Element> roots)select​(String query, Iterable<Element> roots)selectselectStringIterableElementFind elements matching selector.Find elements matching selector.static Elements select​(String query, Element root) Find elements matching selector.static Elementsstatic ElementsElementsselect​(String query, Element root)select​(String query, Element root)selectselectStringElementFind elements matching selector.Find elements matching selector.static Elements select​(Evaluator evaluator, Element root) Find elements matching selector.static Elementsstatic ElementsElementsselect​(Evaluator evaluator, Element root)select​(Evaluator evaluator, Element root)selectselectEvaluatorElementFind elements matching selector.Find elements matching selector.static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query.static Elementstatic ElementElementselectFirst​(String cssQuery, Element root)selectFirst​(String cssQuery, Element root)selectFirstselectFirstStringElementFind the first element that matches the query.Find the first element that matches the query.Methods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethods inherited from class java.lang.Object clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitMethods inherited from class java.lang.ObjectObjectclone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, waitcloneequalsfinalizegetClasshashCodenotifynotifyAlltoStringwaitwaitwaitMethod Detail select public static Elements select​(String query, Element root) Find elements matching selector. Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query. select public static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if none select public static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if none selectFirst public static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none.Method Detail select public static Elements select​(String query, Element root) Find elements matching selector. Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query. select public static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if none select public static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if none selectFirst public static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none.Method Detail select public static Elements select​(String query, Element root) Find elements matching selector. Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query. select public static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if none select public static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if none selectFirst public static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none.Method Detail select public static Elements select​(String query, Element root) Find elements matching selector. Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query. select public static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if none select public static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if none selectFirst public static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none.Method Detail select public static Elements select​(String query, Element root) Find elements matching selector. Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query. select public static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if none select public static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if none selectFirst public static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none.Method Detailselect public static Elements select​(String query, Element root) Find elements matching selector. Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query.select public static Elements select​(String query, Element root) Find elements matching selector. Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query.selectpublic static Elements select​(String query, Element root)ElementsStringElementFind elements matching selector.Parameters: query - CSS selector root - root element to descend into Returns: matching elements, empty if none Throws: Selector.SelectorParseException - (unchecked) on an invalid CSS query.Parameters:Parameters:query - CSS selectorqueryroot - root element to descend intorootReturns:Returns:matching elements, empty if noneThrows:Throws:Selector.SelectorParseException - (unchecked) on an invalid CSS query.Selector.SelectorParseExceptionSelector.SelectorParseExceptionselect public static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if noneselect public static Elements select​(Evaluator evaluator, Element root) Find elements matching selector. Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if noneselectpublic static Elements select​(Evaluator evaluator, Element root)ElementsEvaluatorElementFind elements matching selector.Parameters: evaluator - CSS selector root - root element to descend into Returns: matching elements, empty if noneParameters:Parameters:evaluator - CSS selectorevaluatorroot - root element to descend intorootReturns:Returns:matching elements, empty if noneselect public static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if noneselect public static Elements select​(String query, Iterable<Element> roots) Find elements matching selector. Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if noneselectpublic static Elements select​(String query, Iterable<Element> roots)ElementsStringIterableElementFind elements matching selector.Parameters: query - CSS selector roots - root elements to descend into Returns: matching elements, empty if noneParameters:Parameters:query - CSS selectorqueryroots - root elements to descend intorootsReturns:Returns:matching elements, empty if noneselectFirst public static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none.selectFirst public static Element selectFirst​(String cssQuery, Element root) Find the first element that matches the query. Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none.selectFirstpublic static Element selectFirst​(String cssQuery, Element root)ElementStringElementFind the first element that matches the query.Parameters: cssQuery - CSS selector root - root element to descend into Returns: the matching element, or null if none.Parameters:Parameters:cssQuery - CSS selectorcssQueryroot - root element to descend intorootReturns:Returns:the matching element, or null if none.nullSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll Classes<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |NestedField |Constr |MethodMethodDetail: Field | Constr | MethodDetail:Field |Constr |MethodMethodCopyright © 2009–2017 Jonathan Hedley. All rights reserved.Copyright © 2009–2017 Jonathan Hedley. All rights reserved.Jonathan Hedley