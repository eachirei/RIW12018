<div> JavaScript is disabled on your browser. </div> Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Next Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Uses of Classorg.jsoup.nodes.Node Packages that use Node Package Description org.jsoup.helper org.jsoup.nodes HTML document structure nodes. org.jsoup.parser Contains the HTML parser, tag specifications, and HTML tokeniser. org.jsoup.select Packages to support the CSS-style element selector. Uses of Node in org.jsoup.helper Methods in org.jsoup.helper with parameters of type Node Modifier and Type Method Description void W3CDom.W3CBuilder.head​(Node source, int depth) void W3CDom.W3CBuilder.tail​(Node source, int depth) Uses of Node in org.jsoup.nodes Subclasses of Node in org.jsoup.nodes Modifier and Type Class Description class Comment A comment node. class DataNode A data node, for contents of style, script tags etc, where contents should not show in text(). class Document A HTML Document. class DocumentType A <!DOCTYPE> node. class Element A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements). class FormElement A HTML Form Element provides ready access to the form fields/controls that are associated with it. class PseudoTextElement Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax. class TextNode A text node. class XmlDeclaration An XML Declaration. Methods in org.jsoup.nodes that return Node Modifier and Type Method Description Node Node.after​(String html) Insert the specified HTML into the DOM after this node (i.e. Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Node Node.attr​(String attributeKey, String attributeValue) Set an attribute (key=value). Node Node.before​(String html) Insert the specified HTML into the DOM before this node (i.e. Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. Node Node.childNode​(int index) Get a child node by its 0-based index. protected Node[] Node.childNodesAsArray​() Node Node.clearAttributes​() Clear (remove) all of the attributes in this node. Node Node.clone​() Create a stand-alone, deep copy of this node, and all of its children. protected Node Node.doClone​(Node parent) Node Node.filter​(NodeFilter nodeFilter) Perform a depth-first filtering through this node and its descendants. Node Node.nextSibling​() Get this node's next sibling. Node Node.parent​() Gets this node's parent node. Node Node.parentNode​() Gets this node's parent node. Node Node.previousSibling​() Get this node's previous sibling. Node Node.removeAttr​(String attributeKey) Remove an attribute from this element. Node Node.root​() Get this node's root node; that is, its topmost ancestor. Node Node.shallowClone​() Create a stand-alone, shallow copy of this node. Node Node.traverse​(NodeVisitor nodeVisitor) Perform a depth-first traversal through this node and its descendants. Node Node.unwrap​() Removes this node from the DOM, and moves its children up into the node's parent. Node Node.wrap​(String html) Wrap the supplied HTML around this node. Methods in org.jsoup.nodes that return types with arguments of type Node Modifier and Type Method Description List<Node> Node.childNodes​() Get this node's children. List<Node> Node.childNodesCopy​() Returns a deep copy of this node's children. protected List<Node> Element.ensureChildNodes​() protected abstract List<Node> Node.ensureChildNodes​() List<Node> Node.siblingNodes​() Retrieves this node's sibling nodes. Methods in org.jsoup.nodes with parameters of type Node Modifier and Type Method Description protected void Node.addChildren​(int index, Node... children) protected void Node.addChildren​(Node... children) Element Element.after​(Node node) Insert the specified node into the DOM after this node (as a following sibling). Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Element Element.appendChild​(Node child) Add a node child node to this element. Element Element.before​(Node node) Insert the specified node into the DOM before this node (as a preceding sibling). Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. protected Element Element.doClone​(Node parent) protected Node Node.doClone​(Node parent) Element Element.insertChildren​(int index, Node... children) Inserts the given child nodes into this element at the specified index. Element Element.prependChild​(Node child) Add a node to the start of this element's children. protected void FormElement.removeChild​(Node out) protected void Node.removeChild​(Node out) protected void Node.reparentChild​(Node child) protected void Node.replaceChild​(Node out, Node in) void Node.replaceWith​(Node in) Replace this node in the DOM with the supplied node. protected void Node.setParentNode​(Node parentNode) Method parameters in org.jsoup.nodes with type arguments of type Node Modifier and Type Method Description Element Element.insertChildren​(int index, Collection<? extends Node> children) Inserts the given child nodes into this element at the specified index. Uses of Node in org.jsoup.parser Methods in org.jsoup.parser that return types with arguments of type Node Modifier and Type Method Description static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseXmlFragment​(String fragmentXml, String baseUri) Parse a fragment of XML into a list of nodes. Uses of Node in org.jsoup.select Methods in org.jsoup.select with parameters of type Node Modifier and Type Method Description static NodeFilter.FilterResult NodeTraversor.filter​(NodeFilter filter, Node root) Start a depth-first filtering of the root and all of its descendants. NodeFilter.FilterResult NodeFilter.head​(Node node, int depth) Callback for when a node is first visited. void NodeVisitor.head​(Node node, int depth) Callback for when a node is first visited. NodeFilter.FilterResult NodeFilter.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeVisitor.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeTraversor.traverse​(Node root) Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method. static void NodeTraversor.traverse​(NodeVisitor visitor, Node root) Start a depth-first traverse of the root and all of its descendants. Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Next Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Copyright © 2009–2017 Jonathan Hedley. All rights reserved.<div> JavaScript is disabled on your browser. </div>Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Next Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div>Skip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassClassUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Next Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div>Prev NextPrevNextFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll ClassesSEARCH:SEARCH:SEARCH:<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Uses of Classorg.jsoup.nodes.NodeUses of Classorg.jsoup.nodes.NodePackages that use Node Package Description org.jsoup.helper org.jsoup.nodes HTML document structure nodes. org.jsoup.parser Contains the HTML parser, tag specifications, and HTML tokeniser. org.jsoup.select Packages to support the CSS-style element selector. Uses of Node in org.jsoup.helper Methods in org.jsoup.helper with parameters of type Node Modifier and Type Method Description void W3CDom.W3CBuilder.head​(Node source, int depth) void W3CDom.W3CBuilder.tail​(Node source, int depth) Uses of Node in org.jsoup.nodes Subclasses of Node in org.jsoup.nodes Modifier and Type Class Description class Comment A comment node. class DataNode A data node, for contents of style, script tags etc, where contents should not show in text(). class Document A HTML Document. class DocumentType A <!DOCTYPE> node. class Element A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements). class FormElement A HTML Form Element provides ready access to the form fields/controls that are associated with it. class PseudoTextElement Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax. class TextNode A text node. class XmlDeclaration An XML Declaration. Methods in org.jsoup.nodes that return Node Modifier and Type Method Description Node Node.after​(String html) Insert the specified HTML into the DOM after this node (i.e. Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Node Node.attr​(String attributeKey, String attributeValue) Set an attribute (key=value). Node Node.before​(String html) Insert the specified HTML into the DOM before this node (i.e. Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. Node Node.childNode​(int index) Get a child node by its 0-based index. protected Node[] Node.childNodesAsArray​() Node Node.clearAttributes​() Clear (remove) all of the attributes in this node. Node Node.clone​() Create a stand-alone, deep copy of this node, and all of its children. protected Node Node.doClone​(Node parent) Node Node.filter​(NodeFilter nodeFilter) Perform a depth-first filtering through this node and its descendants. Node Node.nextSibling​() Get this node's next sibling. Node Node.parent​() Gets this node's parent node. Node Node.parentNode​() Gets this node's parent node. Node Node.previousSibling​() Get this node's previous sibling. Node Node.removeAttr​(String attributeKey) Remove an attribute from this element. Node Node.root​() Get this node's root node; that is, its topmost ancestor. Node Node.shallowClone​() Create a stand-alone, shallow copy of this node. Node Node.traverse​(NodeVisitor nodeVisitor) Perform a depth-first traversal through this node and its descendants. Node Node.unwrap​() Removes this node from the DOM, and moves its children up into the node's parent. Node Node.wrap​(String html) Wrap the supplied HTML around this node. Methods in org.jsoup.nodes that return types with arguments of type Node Modifier and Type Method Description List<Node> Node.childNodes​() Get this node's children. List<Node> Node.childNodesCopy​() Returns a deep copy of this node's children. protected List<Node> Element.ensureChildNodes​() protected abstract List<Node> Node.ensureChildNodes​() List<Node> Node.siblingNodes​() Retrieves this node's sibling nodes. Methods in org.jsoup.nodes with parameters of type Node Modifier and Type Method Description protected void Node.addChildren​(int index, Node... children) protected void Node.addChildren​(Node... children) Element Element.after​(Node node) Insert the specified node into the DOM after this node (as a following sibling). Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Element Element.appendChild​(Node child) Add a node child node to this element. Element Element.before​(Node node) Insert the specified node into the DOM before this node (as a preceding sibling). Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. protected Element Element.doClone​(Node parent) protected Node Node.doClone​(Node parent) Element Element.insertChildren​(int index, Node... children) Inserts the given child nodes into this element at the specified index. Element Element.prependChild​(Node child) Add a node to the start of this element's children. protected void FormElement.removeChild​(Node out) protected void Node.removeChild​(Node out) protected void Node.reparentChild​(Node child) protected void Node.replaceChild​(Node out, Node in) void Node.replaceWith​(Node in) Replace this node in the DOM with the supplied node. protected void Node.setParentNode​(Node parentNode) Method parameters in org.jsoup.nodes with type arguments of type Node Modifier and Type Method Description Element Element.insertChildren​(int index, Collection<? extends Node> children) Inserts the given child nodes into this element at the specified index. Uses of Node in org.jsoup.parser Methods in org.jsoup.parser that return types with arguments of type Node Modifier and Type Method Description static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseXmlFragment​(String fragmentXml, String baseUri) Parse a fragment of XML into a list of nodes. Uses of Node in org.jsoup.select Methods in org.jsoup.select with parameters of type Node Modifier and Type Method Description static NodeFilter.FilterResult NodeTraversor.filter​(NodeFilter filter, Node root) Start a depth-first filtering of the root and all of its descendants. NodeFilter.FilterResult NodeFilter.head​(Node node, int depth) Callback for when a node is first visited. void NodeVisitor.head​(Node node, int depth) Callback for when a node is first visited. NodeFilter.FilterResult NodeFilter.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeVisitor.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeTraversor.traverse​(Node root) Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method. static void NodeTraversor.traverse​(NodeVisitor visitor, Node root) Start a depth-first traverse of the root and all of its descendants.Packages that use Node Package Description org.jsoup.helper org.jsoup.nodes HTML document structure nodes. org.jsoup.parser Contains the HTML parser, tag specifications, and HTML tokeniser. org.jsoup.select Packages to support the CSS-style element selector. Uses of Node in org.jsoup.helper Methods in org.jsoup.helper with parameters of type Node Modifier and Type Method Description void W3CDom.W3CBuilder.head​(Node source, int depth) void W3CDom.W3CBuilder.tail​(Node source, int depth) Uses of Node in org.jsoup.nodes Subclasses of Node in org.jsoup.nodes Modifier and Type Class Description class Comment A comment node. class DataNode A data node, for contents of style, script tags etc, where contents should not show in text(). class Document A HTML Document. class DocumentType A <!DOCTYPE> node. class Element A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements). class FormElement A HTML Form Element provides ready access to the form fields/controls that are associated with it. class PseudoTextElement Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax. class TextNode A text node. class XmlDeclaration An XML Declaration. Methods in org.jsoup.nodes that return Node Modifier and Type Method Description Node Node.after​(String html) Insert the specified HTML into the DOM after this node (i.e. Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Node Node.attr​(String attributeKey, String attributeValue) Set an attribute (key=value). Node Node.before​(String html) Insert the specified HTML into the DOM before this node (i.e. Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. Node Node.childNode​(int index) Get a child node by its 0-based index. protected Node[] Node.childNodesAsArray​() Node Node.clearAttributes​() Clear (remove) all of the attributes in this node. Node Node.clone​() Create a stand-alone, deep copy of this node, and all of its children. protected Node Node.doClone​(Node parent) Node Node.filter​(NodeFilter nodeFilter) Perform a depth-first filtering through this node and its descendants. Node Node.nextSibling​() Get this node's next sibling. Node Node.parent​() Gets this node's parent node. Node Node.parentNode​() Gets this node's parent node. Node Node.previousSibling​() Get this node's previous sibling. Node Node.removeAttr​(String attributeKey) Remove an attribute from this element. Node Node.root​() Get this node's root node; that is, its topmost ancestor. Node Node.shallowClone​() Create a stand-alone, shallow copy of this node. Node Node.traverse​(NodeVisitor nodeVisitor) Perform a depth-first traversal through this node and its descendants. Node Node.unwrap​() Removes this node from the DOM, and moves its children up into the node's parent. Node Node.wrap​(String html) Wrap the supplied HTML around this node. Methods in org.jsoup.nodes that return types with arguments of type Node Modifier and Type Method Description List<Node> Node.childNodes​() Get this node's children. List<Node> Node.childNodesCopy​() Returns a deep copy of this node's children. protected List<Node> Element.ensureChildNodes​() protected abstract List<Node> Node.ensureChildNodes​() List<Node> Node.siblingNodes​() Retrieves this node's sibling nodes. Methods in org.jsoup.nodes with parameters of type Node Modifier and Type Method Description protected void Node.addChildren​(int index, Node... children) protected void Node.addChildren​(Node... children) Element Element.after​(Node node) Insert the specified node into the DOM after this node (as a following sibling). Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Element Element.appendChild​(Node child) Add a node child node to this element. Element Element.before​(Node node) Insert the specified node into the DOM before this node (as a preceding sibling). Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. protected Element Element.doClone​(Node parent) protected Node Node.doClone​(Node parent) Element Element.insertChildren​(int index, Node... children) Inserts the given child nodes into this element at the specified index. Element Element.prependChild​(Node child) Add a node to the start of this element's children. protected void FormElement.removeChild​(Node out) protected void Node.removeChild​(Node out) protected void Node.reparentChild​(Node child) protected void Node.replaceChild​(Node out, Node in) void Node.replaceWith​(Node in) Replace this node in the DOM with the supplied node. protected void Node.setParentNode​(Node parentNode) Method parameters in org.jsoup.nodes with type arguments of type Node Modifier and Type Method Description Element Element.insertChildren​(int index, Collection<? extends Node> children) Inserts the given child nodes into this element at the specified index. Uses of Node in org.jsoup.parser Methods in org.jsoup.parser that return types with arguments of type Node Modifier and Type Method Description static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseXmlFragment​(String fragmentXml, String baseUri) Parse a fragment of XML into a list of nodes. Uses of Node in org.jsoup.select Methods in org.jsoup.select with parameters of type Node Modifier and Type Method Description static NodeFilter.FilterResult NodeTraversor.filter​(NodeFilter filter, Node root) Start a depth-first filtering of the root and all of its descendants. NodeFilter.FilterResult NodeFilter.head​(Node node, int depth) Callback for when a node is first visited. void NodeVisitor.head​(Node node, int depth) Callback for when a node is first visited. NodeFilter.FilterResult NodeFilter.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeVisitor.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeTraversor.traverse​(Node root) Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method. static void NodeTraversor.traverse​(NodeVisitor visitor, Node root) Start a depth-first traverse of the root and all of its descendants.Packages that use Node Package Description org.jsoup.helper org.jsoup.nodes HTML document structure nodes. org.jsoup.parser Contains the HTML parser, tag specifications, and HTML tokeniser. org.jsoup.select Packages to support the CSS-style element selector.Packages that use Node Package Description org.jsoup.helper org.jsoup.nodes HTML document structure nodes. org.jsoup.parser Contains the HTML parser, tag specifications, and HTML tokeniser. org.jsoup.select Packages to support the CSS-style element selector.Packages that use NodePackages that use NodeNodePackage DescriptionPackage DescriptionPackageDescriptionorg.jsoup.helper org.jsoup.nodes HTML document structure nodes. org.jsoup.parser Contains the HTML parser, tag specifications, and HTML tokeniser. org.jsoup.select Packages to support the CSS-style element selector.org.jsoup.helperorg.jsoup.helperorg.jsoup.helperorg.jsoup.nodes HTML document structure nodes.org.jsoup.nodesorg.jsoup.nodesHTML document structure nodes.HTML document structure nodes.org.jsoup.parser Contains the HTML parser, tag specifications, and HTML tokeniser.org.jsoup.parserorg.jsoup.parserContains the HTML parser, tag specifications, and HTML tokeniser.Contains the HTML parser, tag specifications, and HTML tokeniser.org.jsoup.select Packages to support the CSS-style element selector.org.jsoup.selectorg.jsoup.selectPackages to support the CSS-style element selector.Packages to support the CSS-style element selector.Uses of Node in org.jsoup.helper Methods in org.jsoup.helper with parameters of type Node Modifier and Type Method Description void W3CDom.W3CBuilder.head​(Node source, int depth) void W3CDom.W3CBuilder.tail​(Node source, int depth) Uses of Node in org.jsoup.nodes Subclasses of Node in org.jsoup.nodes Modifier and Type Class Description class Comment A comment node. class DataNode A data node, for contents of style, script tags etc, where contents should not show in text(). class Document A HTML Document. class DocumentType A <!DOCTYPE> node. class Element A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements). class FormElement A HTML Form Element provides ready access to the form fields/controls that are associated with it. class PseudoTextElement Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax. class TextNode A text node. class XmlDeclaration An XML Declaration. Methods in org.jsoup.nodes that return Node Modifier and Type Method Description Node Node.after​(String html) Insert the specified HTML into the DOM after this node (i.e. Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Node Node.attr​(String attributeKey, String attributeValue) Set an attribute (key=value). Node Node.before​(String html) Insert the specified HTML into the DOM before this node (i.e. Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. Node Node.childNode​(int index) Get a child node by its 0-based index. protected Node[] Node.childNodesAsArray​() Node Node.clearAttributes​() Clear (remove) all of the attributes in this node. Node Node.clone​() Create a stand-alone, deep copy of this node, and all of its children. protected Node Node.doClone​(Node parent) Node Node.filter​(NodeFilter nodeFilter) Perform a depth-first filtering through this node and its descendants. Node Node.nextSibling​() Get this node's next sibling. Node Node.parent​() Gets this node's parent node. Node Node.parentNode​() Gets this node's parent node. Node Node.previousSibling​() Get this node's previous sibling. Node Node.removeAttr​(String attributeKey) Remove an attribute from this element. Node Node.root​() Get this node's root node; that is, its topmost ancestor. Node Node.shallowClone​() Create a stand-alone, shallow copy of this node. Node Node.traverse​(NodeVisitor nodeVisitor) Perform a depth-first traversal through this node and its descendants. Node Node.unwrap​() Removes this node from the DOM, and moves its children up into the node's parent. Node Node.wrap​(String html) Wrap the supplied HTML around this node. Methods in org.jsoup.nodes that return types with arguments of type Node Modifier and Type Method Description List<Node> Node.childNodes​() Get this node's children. List<Node> Node.childNodesCopy​() Returns a deep copy of this node's children. protected List<Node> Element.ensureChildNodes​() protected abstract List<Node> Node.ensureChildNodes​() List<Node> Node.siblingNodes​() Retrieves this node's sibling nodes. Methods in org.jsoup.nodes with parameters of type Node Modifier and Type Method Description protected void Node.addChildren​(int index, Node... children) protected void Node.addChildren​(Node... children) Element Element.after​(Node node) Insert the specified node into the DOM after this node (as a following sibling). Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Element Element.appendChild​(Node child) Add a node child node to this element. Element Element.before​(Node node) Insert the specified node into the DOM before this node (as a preceding sibling). Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. protected Element Element.doClone​(Node parent) protected Node Node.doClone​(Node parent) Element Element.insertChildren​(int index, Node... children) Inserts the given child nodes into this element at the specified index. Element Element.prependChild​(Node child) Add a node to the start of this element's children. protected void FormElement.removeChild​(Node out) protected void Node.removeChild​(Node out) protected void Node.reparentChild​(Node child) protected void Node.replaceChild​(Node out, Node in) void Node.replaceWith​(Node in) Replace this node in the DOM with the supplied node. protected void Node.setParentNode​(Node parentNode) Method parameters in org.jsoup.nodes with type arguments of type Node Modifier and Type Method Description Element Element.insertChildren​(int index, Collection<? extends Node> children) Inserts the given child nodes into this element at the specified index. Uses of Node in org.jsoup.parser Methods in org.jsoup.parser that return types with arguments of type Node Modifier and Type Method Description static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseXmlFragment​(String fragmentXml, String baseUri) Parse a fragment of XML into a list of nodes. Uses of Node in org.jsoup.select Methods in org.jsoup.select with parameters of type Node Modifier and Type Method Description static NodeFilter.FilterResult NodeTraversor.filter​(NodeFilter filter, Node root) Start a depth-first filtering of the root and all of its descendants. NodeFilter.FilterResult NodeFilter.head​(Node node, int depth) Callback for when a node is first visited. void NodeVisitor.head​(Node node, int depth) Callback for when a node is first visited. NodeFilter.FilterResult NodeFilter.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeVisitor.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeTraversor.traverse​(Node root) Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method. static void NodeTraversor.traverse​(NodeVisitor visitor, Node root) Start a depth-first traverse of the root and all of its descendants.Uses of Node in org.jsoup.helper Methods in org.jsoup.helper with parameters of type Node Modifier and Type Method Description void W3CDom.W3CBuilder.head​(Node source, int depth) void W3CDom.W3CBuilder.tail​(Node source, int depth) Uses of Node in org.jsoup.nodes Subclasses of Node in org.jsoup.nodes Modifier and Type Class Description class Comment A comment node. class DataNode A data node, for contents of style, script tags etc, where contents should not show in text(). class Document A HTML Document. class DocumentType A <!DOCTYPE> node. class Element A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements). class FormElement A HTML Form Element provides ready access to the form fields/controls that are associated with it. class PseudoTextElement Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax. class TextNode A text node. class XmlDeclaration An XML Declaration. Methods in org.jsoup.nodes that return Node Modifier and Type Method Description Node Node.after​(String html) Insert the specified HTML into the DOM after this node (i.e. Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Node Node.attr​(String attributeKey, String attributeValue) Set an attribute (key=value). Node Node.before​(String html) Insert the specified HTML into the DOM before this node (i.e. Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. Node Node.childNode​(int index) Get a child node by its 0-based index. protected Node[] Node.childNodesAsArray​() Node Node.clearAttributes​() Clear (remove) all of the attributes in this node. Node Node.clone​() Create a stand-alone, deep copy of this node, and all of its children. protected Node Node.doClone​(Node parent) Node Node.filter​(NodeFilter nodeFilter) Perform a depth-first filtering through this node and its descendants. Node Node.nextSibling​() Get this node's next sibling. Node Node.parent​() Gets this node's parent node. Node Node.parentNode​() Gets this node's parent node. Node Node.previousSibling​() Get this node's previous sibling. Node Node.removeAttr​(String attributeKey) Remove an attribute from this element. Node Node.root​() Get this node's root node; that is, its topmost ancestor. Node Node.shallowClone​() Create a stand-alone, shallow copy of this node. Node Node.traverse​(NodeVisitor nodeVisitor) Perform a depth-first traversal through this node and its descendants. Node Node.unwrap​() Removes this node from the DOM, and moves its children up into the node's parent. Node Node.wrap​(String html) Wrap the supplied HTML around this node. Methods in org.jsoup.nodes that return types with arguments of type Node Modifier and Type Method Description List<Node> Node.childNodes​() Get this node's children. List<Node> Node.childNodesCopy​() Returns a deep copy of this node's children. protected List<Node> Element.ensureChildNodes​() protected abstract List<Node> Node.ensureChildNodes​() List<Node> Node.siblingNodes​() Retrieves this node's sibling nodes. Methods in org.jsoup.nodes with parameters of type Node Modifier and Type Method Description protected void Node.addChildren​(int index, Node... children) protected void Node.addChildren​(Node... children) Element Element.after​(Node node) Insert the specified node into the DOM after this node (as a following sibling). Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Element Element.appendChild​(Node child) Add a node child node to this element. Element Element.before​(Node node) Insert the specified node into the DOM before this node (as a preceding sibling). Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. protected Element Element.doClone​(Node parent) protected Node Node.doClone​(Node parent) Element Element.insertChildren​(int index, Node... children) Inserts the given child nodes into this element at the specified index. Element Element.prependChild​(Node child) Add a node to the start of this element's children. protected void FormElement.removeChild​(Node out) protected void Node.removeChild​(Node out) protected void Node.reparentChild​(Node child) protected void Node.replaceChild​(Node out, Node in) void Node.replaceWith​(Node in) Replace this node in the DOM with the supplied node. protected void Node.setParentNode​(Node parentNode) Method parameters in org.jsoup.nodes with type arguments of type Node Modifier and Type Method Description Element Element.insertChildren​(int index, Collection<? extends Node> children) Inserts the given child nodes into this element at the specified index. Uses of Node in org.jsoup.parser Methods in org.jsoup.parser that return types with arguments of type Node Modifier and Type Method Description static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseXmlFragment​(String fragmentXml, String baseUri) Parse a fragment of XML into a list of nodes. Uses of Node in org.jsoup.select Methods in org.jsoup.select with parameters of type Node Modifier and Type Method Description static NodeFilter.FilterResult NodeTraversor.filter​(NodeFilter filter, Node root) Start a depth-first filtering of the root and all of its descendants. NodeFilter.FilterResult NodeFilter.head​(Node node, int depth) Callback for when a node is first visited. void NodeVisitor.head​(Node node, int depth) Callback for when a node is first visited. NodeFilter.FilterResult NodeFilter.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeVisitor.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeTraversor.traverse​(Node root) Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method. static void NodeTraversor.traverse​(NodeVisitor visitor, Node root) Start a depth-first traverse of the root and all of its descendants.Uses of Node in org.jsoup.helper Methods in org.jsoup.helper with parameters of type Node Modifier and Type Method Description void W3CDom.W3CBuilder.head​(Node source, int depth) void W3CDom.W3CBuilder.tail​(Node source, int depth)Uses of Node in org.jsoup.helperNodeorg.jsoup.helperMethods in org.jsoup.helper with parameters of type Node Modifier and Type Method Description void W3CDom.W3CBuilder.head​(Node source, int depth) void W3CDom.W3CBuilder.tail​(Node source, int depth)Methods in org.jsoup.helper with parameters of type NodeMethods in org.jsoup.helper with parameters of type Nodeorg.jsoup.helperNodeModifier and Type Method DescriptionModifier and Type Method DescriptionModifier and TypeMethodDescriptionvoid W3CDom.W3CBuilder.head​(Node source, int depth) void W3CDom.W3CBuilder.tail​(Node source, int depth)void W3CDom.W3CBuilder.head​(Node source, int depth)voidvoidW3CDom.W3CBuilder.head​(Node source, int depth)W3CDom.W3CBuilder.head​(Node source, int depth)headheadNodevoid W3CDom.W3CBuilder.tail​(Node source, int depth)voidvoidW3CDom.W3CBuilder.tail​(Node source, int depth)W3CDom.W3CBuilder.tail​(Node source, int depth)tailtailNodeUses of Node in org.jsoup.nodes Subclasses of Node in org.jsoup.nodes Modifier and Type Class Description class Comment A comment node. class DataNode A data node, for contents of style, script tags etc, where contents should not show in text(). class Document A HTML Document. class DocumentType A <!DOCTYPE> node. class Element A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements). class FormElement A HTML Form Element provides ready access to the form fields/controls that are associated with it. class PseudoTextElement Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax. class TextNode A text node. class XmlDeclaration An XML Declaration. Methods in org.jsoup.nodes that return Node Modifier and Type Method Description Node Node.after​(String html) Insert the specified HTML into the DOM after this node (i.e. Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Node Node.attr​(String attributeKey, String attributeValue) Set an attribute (key=value). Node Node.before​(String html) Insert the specified HTML into the DOM before this node (i.e. Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. Node Node.childNode​(int index) Get a child node by its 0-based index. protected Node[] Node.childNodesAsArray​() Node Node.clearAttributes​() Clear (remove) all of the attributes in this node. Node Node.clone​() Create a stand-alone, deep copy of this node, and all of its children. protected Node Node.doClone​(Node parent) Node Node.filter​(NodeFilter nodeFilter) Perform a depth-first filtering through this node and its descendants. Node Node.nextSibling​() Get this node's next sibling. Node Node.parent​() Gets this node's parent node. Node Node.parentNode​() Gets this node's parent node. Node Node.previousSibling​() Get this node's previous sibling. Node Node.removeAttr​(String attributeKey) Remove an attribute from this element. Node Node.root​() Get this node's root node; that is, its topmost ancestor. Node Node.shallowClone​() Create a stand-alone, shallow copy of this node. Node Node.traverse​(NodeVisitor nodeVisitor) Perform a depth-first traversal through this node and its descendants. Node Node.unwrap​() Removes this node from the DOM, and moves its children up into the node's parent. Node Node.wrap​(String html) Wrap the supplied HTML around this node. Methods in org.jsoup.nodes that return types with arguments of type Node Modifier and Type Method Description List<Node> Node.childNodes​() Get this node's children. List<Node> Node.childNodesCopy​() Returns a deep copy of this node's children. protected List<Node> Element.ensureChildNodes​() protected abstract List<Node> Node.ensureChildNodes​() List<Node> Node.siblingNodes​() Retrieves this node's sibling nodes. Methods in org.jsoup.nodes with parameters of type Node Modifier and Type Method Description protected void Node.addChildren​(int index, Node... children) protected void Node.addChildren​(Node... children) Element Element.after​(Node node) Insert the specified node into the DOM after this node (as a following sibling). Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Element Element.appendChild​(Node child) Add a node child node to this element. Element Element.before​(Node node) Insert the specified node into the DOM before this node (as a preceding sibling). Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. protected Element Element.doClone​(Node parent) protected Node Node.doClone​(Node parent) Element Element.insertChildren​(int index, Node... children) Inserts the given child nodes into this element at the specified index. Element Element.prependChild​(Node child) Add a node to the start of this element's children. protected void FormElement.removeChild​(Node out) protected void Node.removeChild​(Node out) protected void Node.reparentChild​(Node child) protected void Node.replaceChild​(Node out, Node in) void Node.replaceWith​(Node in) Replace this node in the DOM with the supplied node. protected void Node.setParentNode​(Node parentNode) Method parameters in org.jsoup.nodes with type arguments of type Node Modifier and Type Method Description Element Element.insertChildren​(int index, Collection<? extends Node> children) Inserts the given child nodes into this element at the specified index.Uses of Node in org.jsoup.nodesNodeorg.jsoup.nodesSubclasses of Node in org.jsoup.nodes Modifier and Type Class Description class Comment A comment node. class DataNode A data node, for contents of style, script tags etc, where contents should not show in text(). class Document A HTML Document. class DocumentType A <!DOCTYPE> node. class Element A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements). class FormElement A HTML Form Element provides ready access to the form fields/controls that are associated with it. class PseudoTextElement Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax. class TextNode A text node. class XmlDeclaration An XML Declaration.Subclasses of Node in org.jsoup.nodesSubclasses of Node in org.jsoup.nodesNodeorg.jsoup.nodesModifier and Type Class DescriptionModifier and Type Class DescriptionModifier and TypeClassDescriptionclass Comment A comment node. class DataNode A data node, for contents of style, script tags etc, where contents should not show in text(). class Document A HTML Document. class DocumentType A <!DOCTYPE> node. class Element A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements). class FormElement A HTML Form Element provides ready access to the form fields/controls that are associated with it. class PseudoTextElement Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax. class TextNode A text node. class XmlDeclaration An XML Declaration.class Comment A comment node.classclassCommentCommentCommentCommentA comment node.A comment node.class DataNode A data node, for contents of style, script tags etc, where contents should not show in text().classclassDataNodeDataNodeDataNodeDataNodeA data node, for contents of style, script tags etc, where contents should not show in text().A data node, for contents of style, script tags etc, where contents should not show in text().class Document A HTML Document.classclassDocumentDocumentDocumentDocumentA HTML Document.A HTML Document.class DocumentType A <!DOCTYPE> node.classclassDocumentTypeDocumentTypeDocumentTypeDocumentTypeA <!DOCTYPE> node.A <!DOCTYPE> node.<!DOCTYPE>class Element A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements).classclassElementElementElementElementA HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements).A HTML element consists of a tag name, attributes, and child nodes (including text nodes and other elements).class FormElement A HTML Form Element provides ready access to the form fields/controls that are associated with it.classclassFormElementFormElementFormElementFormElementA HTML Form Element provides ready access to the form fields/controls that are associated with it.A HTML Form Element provides ready access to the form fields/controls that are associated with it.class PseudoTextElement Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax.classclassPseudoTextElementPseudoTextElementPseudoTextElementPseudoTextElementRepresents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax.Represents a TextNode as an Element, to enable text nodes to be selected with the Selector :matchText syntax.TextNodeTextNodeElementElementSelectorSelector:matchTextclass TextNode A text node.classclassTextNodeTextNodeTextNodeTextNodeA text node.A text node.class XmlDeclaration An XML Declaration.classclassXmlDeclarationXmlDeclarationXmlDeclarationXmlDeclarationAn XML Declaration.An XML Declaration.Methods in org.jsoup.nodes that return Node Modifier and Type Method Description Node Node.after​(String html) Insert the specified HTML into the DOM after this node (i.e. Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Node Node.attr​(String attributeKey, String attributeValue) Set an attribute (key=value). Node Node.before​(String html) Insert the specified HTML into the DOM before this node (i.e. Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. Node Node.childNode​(int index) Get a child node by its 0-based index. protected Node[] Node.childNodesAsArray​() Node Node.clearAttributes​() Clear (remove) all of the attributes in this node. Node Node.clone​() Create a stand-alone, deep copy of this node, and all of its children. protected Node Node.doClone​(Node parent) Node Node.filter​(NodeFilter nodeFilter) Perform a depth-first filtering through this node and its descendants. Node Node.nextSibling​() Get this node's next sibling. Node Node.parent​() Gets this node's parent node. Node Node.parentNode​() Gets this node's parent node. Node Node.previousSibling​() Get this node's previous sibling. Node Node.removeAttr​(String attributeKey) Remove an attribute from this element. Node Node.root​() Get this node's root node; that is, its topmost ancestor. Node Node.shallowClone​() Create a stand-alone, shallow copy of this node. Node Node.traverse​(NodeVisitor nodeVisitor) Perform a depth-first traversal through this node and its descendants. Node Node.unwrap​() Removes this node from the DOM, and moves its children up into the node's parent. Node Node.wrap​(String html) Wrap the supplied HTML around this node.Methods in org.jsoup.nodes that return NodeMethods in org.jsoup.nodes that return Nodeorg.jsoup.nodesNodeModifier and Type Method DescriptionModifier and Type Method DescriptionModifier and TypeMethodDescriptionNode Node.after​(String html) Insert the specified HTML into the DOM after this node (i.e. Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Node Node.attr​(String attributeKey, String attributeValue) Set an attribute (key=value). Node Node.before​(String html) Insert the specified HTML into the DOM before this node (i.e. Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. Node Node.childNode​(int index) Get a child node by its 0-based index. protected Node[] Node.childNodesAsArray​() Node Node.clearAttributes​() Clear (remove) all of the attributes in this node. Node Node.clone​() Create a stand-alone, deep copy of this node, and all of its children. protected Node Node.doClone​(Node parent) Node Node.filter​(NodeFilter nodeFilter) Perform a depth-first filtering through this node and its descendants. Node Node.nextSibling​() Get this node's next sibling. Node Node.parent​() Gets this node's parent node. Node Node.parentNode​() Gets this node's parent node. Node Node.previousSibling​() Get this node's previous sibling. Node Node.removeAttr​(String attributeKey) Remove an attribute from this element. Node Node.root​() Get this node's root node; that is, its topmost ancestor. Node Node.shallowClone​() Create a stand-alone, shallow copy of this node. Node Node.traverse​(NodeVisitor nodeVisitor) Perform a depth-first traversal through this node and its descendants. Node Node.unwrap​() Removes this node from the DOM, and moves its children up into the node's parent. Node Node.wrap​(String html) Wrap the supplied HTML around this node.Node Node.after​(String html) Insert the specified HTML into the DOM after this node (i.e.NodeNodeNodeNode.after​(String html)Node.after​(String html)afterafterStringInsert the specified HTML into the DOM after this node (i.e.Insert the specified HTML into the DOM after this node (i.e.Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e.NodeNodeNodeNode.after​(Node node)Node.after​(Node node)afterafterNodeInsert the specified node into the DOM after this node (i.e.Insert the specified node into the DOM after this node (i.e.Node Node.attr​(String attributeKey, String attributeValue) Set an attribute (key=value).NodeNodeNodeNode.attr​(String attributeKey, String attributeValue)Node.attr​(String attributeKey, String attributeValue)attrattrStringStringSet an attribute (key=value).Set an attribute (key=value).Node Node.before​(String html) Insert the specified HTML into the DOM before this node (i.e.NodeNodeNodeNode.before​(String html)Node.before​(String html)beforebeforeStringInsert the specified HTML into the DOM before this node (i.e.Insert the specified HTML into the DOM before this node (i.e.Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e.NodeNodeNodeNode.before​(Node node)Node.before​(Node node)beforebeforeNodeInsert the specified node into the DOM before this node (i.e.Insert the specified node into the DOM before this node (i.e.Node Node.childNode​(int index) Get a child node by its 0-based index.NodeNodeNodeNode.childNode​(int index)Node.childNode​(int index)childNodechildNodeGet a child node by its 0-based index.Get a child node by its 0-based index.protected Node[] Node.childNodesAsArray​()protected Node[]protected Node[]NodeNode.childNodesAsArray​()Node.childNodesAsArray​()childNodesAsArraychildNodesAsArrayNode Node.clearAttributes​() Clear (remove) all of the attributes in this node.NodeNodeNodeNode.clearAttributes​()Node.clearAttributes​()clearAttributesclearAttributesClear (remove) all of the attributes in this node.Clear (remove) all of the attributes in this node.Node Node.clone​() Create a stand-alone, deep copy of this node, and all of its children.NodeNodeNodeNode.clone​()Node.clone​()clonecloneCreate a stand-alone, deep copy of this node, and all of its children.Create a stand-alone, deep copy of this node, and all of its children.protected Node Node.doClone​(Node parent)protected Nodeprotected NodeNodeNode.doClone​(Node parent)Node.doClone​(Node parent)doClonedoCloneNodeNode Node.filter​(NodeFilter nodeFilter) Perform a depth-first filtering through this node and its descendants.NodeNodeNodeNode.filter​(NodeFilter nodeFilter)Node.filter​(NodeFilter nodeFilter)filterfilterNodeFilterPerform a depth-first filtering through this node and its descendants.Perform a depth-first filtering through this node and its descendants.Node Node.nextSibling​() Get this node's next sibling.NodeNodeNodeNode.nextSibling​()Node.nextSibling​()nextSiblingnextSiblingGet this node's next sibling.Get this node's next sibling.Node Node.parent​() Gets this node's parent node.NodeNodeNodeNode.parent​()Node.parent​()parentparentGets this node's parent node.Gets this node's parent node.Node Node.parentNode​() Gets this node's parent node.NodeNodeNodeNode.parentNode​()Node.parentNode​()parentNodeparentNodeGets this node's parent node.Gets this node's parent node.Node Node.previousSibling​() Get this node's previous sibling.NodeNodeNodeNode.previousSibling​()Node.previousSibling​()previousSiblingpreviousSiblingGet this node's previous sibling.Get this node's previous sibling.Node Node.removeAttr​(String attributeKey) Remove an attribute from this element.NodeNodeNodeNode.removeAttr​(String attributeKey)Node.removeAttr​(String attributeKey)removeAttrremoveAttrStringRemove an attribute from this element.Remove an attribute from this element.Node Node.root​() Get this node's root node; that is, its topmost ancestor.NodeNodeNodeNode.root​()Node.root​()rootrootGet this node's root node; that is, its topmost ancestor.Get this node's root node; that is, its topmost ancestor.Node Node.shallowClone​() Create a stand-alone, shallow copy of this node.NodeNodeNodeNode.shallowClone​()Node.shallowClone​()shallowCloneshallowCloneCreate a stand-alone, shallow copy of this node.Create a stand-alone, shallow copy of this node.Node Node.traverse​(NodeVisitor nodeVisitor) Perform a depth-first traversal through this node and its descendants.NodeNodeNodeNode.traverse​(NodeVisitor nodeVisitor)Node.traverse​(NodeVisitor nodeVisitor)traversetraverseNodeVisitorPerform a depth-first traversal through this node and its descendants.Perform a depth-first traversal through this node and its descendants.Node Node.unwrap​() Removes this node from the DOM, and moves its children up into the node's parent.NodeNodeNodeNode.unwrap​()Node.unwrap​()unwrapunwrapRemoves this node from the DOM, and moves its children up into the node's parent.Removes this node from the DOM, and moves its children up into the node's parent.Node Node.wrap​(String html) Wrap the supplied HTML around this node.NodeNodeNodeNode.wrap​(String html)Node.wrap​(String html)wrapwrapStringWrap the supplied HTML around this node.Wrap the supplied HTML around this node.Methods in org.jsoup.nodes that return types with arguments of type Node Modifier and Type Method Description List<Node> Node.childNodes​() Get this node's children. List<Node> Node.childNodesCopy​() Returns a deep copy of this node's children. protected List<Node> Element.ensureChildNodes​() protected abstract List<Node> Node.ensureChildNodes​() List<Node> Node.siblingNodes​() Retrieves this node's sibling nodes.Methods in org.jsoup.nodes that return types with arguments of type NodeMethods in org.jsoup.nodes that return types with arguments of type Nodeorg.jsoup.nodesNodeModifier and Type Method DescriptionModifier and Type Method DescriptionModifier and TypeMethodDescriptionList<Node> Node.childNodes​() Get this node's children. List<Node> Node.childNodesCopy​() Returns a deep copy of this node's children. protected List<Node> Element.ensureChildNodes​() protected abstract List<Node> Node.ensureChildNodes​() List<Node> Node.siblingNodes​() Retrieves this node's sibling nodes.List<Node> Node.childNodes​() Get this node's children.List<Node>List<Node>ListNodeNode.childNodes​()Node.childNodes​()childNodeschildNodesGet this node's children.Get this node's children.List<Node> Node.childNodesCopy​() Returns a deep copy of this node's children.List<Node>List<Node>ListNodeNode.childNodesCopy​()Node.childNodesCopy​()childNodesCopychildNodesCopyReturns a deep copy of this node's children.Returns a deep copy of this node's children.protected List<Node> Element.ensureChildNodes​()protected List<Node>protected List<Node>ListNodeElement.ensureChildNodes​()Element.ensureChildNodes​()ensureChildNodesensureChildNodesprotected abstract List<Node> Node.ensureChildNodes​()protected abstract List<Node>protected abstract List<Node>ListNodeNode.ensureChildNodes​()Node.ensureChildNodes​()ensureChildNodesensureChildNodesList<Node> Node.siblingNodes​() Retrieves this node's sibling nodes.List<Node>List<Node>ListNodeNode.siblingNodes​()Node.siblingNodes​()siblingNodessiblingNodesRetrieves this node's sibling nodes.Retrieves this node's sibling nodes.Methods in org.jsoup.nodes with parameters of type Node Modifier and Type Method Description protected void Node.addChildren​(int index, Node... children) protected void Node.addChildren​(Node... children) Element Element.after​(Node node) Insert the specified node into the DOM after this node (as a following sibling). Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Element Element.appendChild​(Node child) Add a node child node to this element. Element Element.before​(Node node) Insert the specified node into the DOM before this node (as a preceding sibling). Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. protected Element Element.doClone​(Node parent) protected Node Node.doClone​(Node parent) Element Element.insertChildren​(int index, Node... children) Inserts the given child nodes into this element at the specified index. Element Element.prependChild​(Node child) Add a node to the start of this element's children. protected void FormElement.removeChild​(Node out) protected void Node.removeChild​(Node out) protected void Node.reparentChild​(Node child) protected void Node.replaceChild​(Node out, Node in) void Node.replaceWith​(Node in) Replace this node in the DOM with the supplied node. protected void Node.setParentNode​(Node parentNode)Methods in org.jsoup.nodes with parameters of type NodeMethods in org.jsoup.nodes with parameters of type Nodeorg.jsoup.nodesNodeModifier and Type Method DescriptionModifier and Type Method DescriptionModifier and TypeMethodDescriptionprotected void Node.addChildren​(int index, Node... children) protected void Node.addChildren​(Node... children) Element Element.after​(Node node) Insert the specified node into the DOM after this node (as a following sibling). Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e. Element Element.appendChild​(Node child) Add a node child node to this element. Element Element.before​(Node node) Insert the specified node into the DOM before this node (as a preceding sibling). Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e. protected Element Element.doClone​(Node parent) protected Node Node.doClone​(Node parent) Element Element.insertChildren​(int index, Node... children) Inserts the given child nodes into this element at the specified index. Element Element.prependChild​(Node child) Add a node to the start of this element's children. protected void FormElement.removeChild​(Node out) protected void Node.removeChild​(Node out) protected void Node.reparentChild​(Node child) protected void Node.replaceChild​(Node out, Node in) void Node.replaceWith​(Node in) Replace this node in the DOM with the supplied node. protected void Node.setParentNode​(Node parentNode)protected void Node.addChildren​(int index, Node... children)protected voidprotected voidNode.addChildren​(int index, Node... children)Node.addChildren​(int index, Node... children)addChildrenaddChildrenNodeprotected void Node.addChildren​(Node... children)protected voidprotected voidNode.addChildren​(Node... children)Node.addChildren​(Node... children)addChildrenaddChildrenNodeElement Element.after​(Node node) Insert the specified node into the DOM after this node (as a following sibling).ElementElementElementElement.after​(Node node)Element.after​(Node node)afterafterNodeInsert the specified node into the DOM after this node (as a following sibling).Insert the specified node into the DOM after this node (as a following sibling).Node Node.after​(Node node) Insert the specified node into the DOM after this node (i.e.NodeNodeNodeNode.after​(Node node)Node.after​(Node node)afterafterNodeInsert the specified node into the DOM after this node (i.e.Insert the specified node into the DOM after this node (i.e.Element Element.appendChild​(Node child) Add a node child node to this element.ElementElementElementElement.appendChild​(Node child)Element.appendChild​(Node child)appendChildappendChildNodeAdd a node child node to this element.Add a node child node to this element.Element Element.before​(Node node) Insert the specified node into the DOM before this node (as a preceding sibling).ElementElementElementElement.before​(Node node)Element.before​(Node node)beforebeforeNodeInsert the specified node into the DOM before this node (as a preceding sibling).Insert the specified node into the DOM before this node (as a preceding sibling).Node Node.before​(Node node) Insert the specified node into the DOM before this node (i.e.NodeNodeNodeNode.before​(Node node)Node.before​(Node node)beforebeforeNodeInsert the specified node into the DOM before this node (i.e.Insert the specified node into the DOM before this node (i.e.protected Element Element.doClone​(Node parent)protected Elementprotected ElementElementElement.doClone​(Node parent)Element.doClone​(Node parent)doClonedoCloneNodeprotected Node Node.doClone​(Node parent)protected Nodeprotected NodeNodeNode.doClone​(Node parent)Node.doClone​(Node parent)doClonedoCloneNodeElement Element.insertChildren​(int index, Node... children) Inserts the given child nodes into this element at the specified index.ElementElementElementElement.insertChildren​(int index, Node... children)Element.insertChildren​(int index, Node... children)insertChildreninsertChildrenNodeInserts the given child nodes into this element at the specified index.Inserts the given child nodes into this element at the specified index.Element Element.prependChild​(Node child) Add a node to the start of this element's children.ElementElementElementElement.prependChild​(Node child)Element.prependChild​(Node child)prependChildprependChildNodeAdd a node to the start of this element's children.Add a node to the start of this element's children.protected void FormElement.removeChild​(Node out)protected voidprotected voidFormElement.removeChild​(Node out)FormElement.removeChild​(Node out)removeChildremoveChildNodeprotected void Node.removeChild​(Node out)protected voidprotected voidNode.removeChild​(Node out)Node.removeChild​(Node out)removeChildremoveChildNodeprotected void Node.reparentChild​(Node child)protected voidprotected voidNode.reparentChild​(Node child)Node.reparentChild​(Node child)reparentChildreparentChildNodeprotected void Node.replaceChild​(Node out, Node in)protected voidprotected voidNode.replaceChild​(Node out, Node in)Node.replaceChild​(Node out, Node in)replaceChildreplaceChildNodeNodevoid Node.replaceWith​(Node in) Replace this node in the DOM with the supplied node.voidvoidNode.replaceWith​(Node in)Node.replaceWith​(Node in)replaceWithreplaceWithNodeReplace this node in the DOM with the supplied node.Replace this node in the DOM with the supplied node.protected void Node.setParentNode​(Node parentNode)protected voidprotected voidNode.setParentNode​(Node parentNode)Node.setParentNode​(Node parentNode)setParentNodesetParentNodeNodeMethod parameters in org.jsoup.nodes with type arguments of type Node Modifier and Type Method Description Element Element.insertChildren​(int index, Collection<? extends Node> children) Inserts the given child nodes into this element at the specified index.Method parameters in org.jsoup.nodes with type arguments of type NodeMethod parameters in org.jsoup.nodes with type arguments of type Nodeorg.jsoup.nodesNodeModifier and Type Method DescriptionModifier and Type Method DescriptionModifier and TypeMethodDescriptionElement Element.insertChildren​(int index, Collection<? extends Node> children) Inserts the given child nodes into this element at the specified index.Element Element.insertChildren​(int index, Collection<? extends Node> children) Inserts the given child nodes into this element at the specified index.ElementElementElementElement.insertChildren​(int index, Collection<? extends Node> children)Element.insertChildren​(int index, Collection<? extends Node> children)insertChildreninsertChildrenCollectionNodeInserts the given child nodes into this element at the specified index.Inserts the given child nodes into this element at the specified index.Uses of Node in org.jsoup.parser Methods in org.jsoup.parser that return types with arguments of type Node Modifier and Type Method Description static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseXmlFragment​(String fragmentXml, String baseUri) Parse a fragment of XML into a list of nodes.Uses of Node in org.jsoup.parserNodeorg.jsoup.parserMethods in org.jsoup.parser that return types with arguments of type Node Modifier and Type Method Description static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseXmlFragment​(String fragmentXml, String baseUri) Parse a fragment of XML into a list of nodes.Methods in org.jsoup.parser that return types with arguments of type NodeMethods in org.jsoup.parser that return types with arguments of type Nodeorg.jsoup.parserNodeModifier and Type Method DescriptionModifier and Type Method DescriptionModifier and TypeMethodDescriptionstatic List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) Parse a fragment of HTML into a list of nodes. static List<Node> Parser.parseXmlFragment​(String fragmentXml, String baseUri) Parse a fragment of XML into a list of nodes.static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri) Parse a fragment of HTML into a list of nodes.static List<Node>static List<Node>ListNodeParser.parseFragment​(String fragmentHtml, Element context, String baseUri)Parser.parseFragment​(String fragmentHtml, Element context, String baseUri)parseFragmentparseFragmentStringElementStringParse a fragment of HTML into a list of nodes.Parse a fragment of HTML into a list of nodes.static List<Node> Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList) Parse a fragment of HTML into a list of nodes.static List<Node>static List<Node>ListNodeParser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList)Parser.parseFragment​(String fragmentHtml, Element context, String baseUri, ParseErrorList errorList)parseFragmentparseFragmentStringElementStringParseErrorListParse a fragment of HTML into a list of nodes.Parse a fragment of HTML into a list of nodes.static List<Node> Parser.parseXmlFragment​(String fragmentXml, String baseUri) Parse a fragment of XML into a list of nodes.static List<Node>static List<Node>ListNodeParser.parseXmlFragment​(String fragmentXml, String baseUri)Parser.parseXmlFragment​(String fragmentXml, String baseUri)parseXmlFragmentparseXmlFragmentStringStringParse a fragment of XML into a list of nodes.Parse a fragment of XML into a list of nodes.Uses of Node in org.jsoup.select Methods in org.jsoup.select with parameters of type Node Modifier and Type Method Description static NodeFilter.FilterResult NodeTraversor.filter​(NodeFilter filter, Node root) Start a depth-first filtering of the root and all of its descendants. NodeFilter.FilterResult NodeFilter.head​(Node node, int depth) Callback for when a node is first visited. void NodeVisitor.head​(Node node, int depth) Callback for when a node is first visited. NodeFilter.FilterResult NodeFilter.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeVisitor.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeTraversor.traverse​(Node root) Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method. static void NodeTraversor.traverse​(NodeVisitor visitor, Node root) Start a depth-first traverse of the root and all of its descendants.Uses of Node in org.jsoup.selectNodeorg.jsoup.selectMethods in org.jsoup.select with parameters of type Node Modifier and Type Method Description static NodeFilter.FilterResult NodeTraversor.filter​(NodeFilter filter, Node root) Start a depth-first filtering of the root and all of its descendants. NodeFilter.FilterResult NodeFilter.head​(Node node, int depth) Callback for when a node is first visited. void NodeVisitor.head​(Node node, int depth) Callback for when a node is first visited. NodeFilter.FilterResult NodeFilter.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeVisitor.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeTraversor.traverse​(Node root) Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method. static void NodeTraversor.traverse​(NodeVisitor visitor, Node root) Start a depth-first traverse of the root and all of its descendants.Methods in org.jsoup.select with parameters of type NodeMethods in org.jsoup.select with parameters of type Nodeorg.jsoup.selectNodeModifier and Type Method DescriptionModifier and Type Method DescriptionModifier and TypeMethodDescriptionstatic NodeFilter.FilterResult NodeTraversor.filter​(NodeFilter filter, Node root) Start a depth-first filtering of the root and all of its descendants. NodeFilter.FilterResult NodeFilter.head​(Node node, int depth) Callback for when a node is first visited. void NodeVisitor.head​(Node node, int depth) Callback for when a node is first visited. NodeFilter.FilterResult NodeFilter.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeVisitor.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited. void NodeTraversor.traverse​(Node root) Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method. static void NodeTraversor.traverse​(NodeVisitor visitor, Node root) Start a depth-first traverse of the root and all of its descendants.static NodeFilter.FilterResult NodeTraversor.filter​(NodeFilter filter, Node root) Start a depth-first filtering of the root and all of its descendants.static NodeFilter.FilterResultstatic NodeFilter.FilterResultNodeFilter.FilterResultNodeTraversor.filter​(NodeFilter filter, Node root)NodeTraversor.filter​(NodeFilter filter, Node root)filterfilterNodeFilterNodeStart a depth-first filtering of the root and all of its descendants.Start a depth-first filtering of the root and all of its descendants.NodeFilter.FilterResult NodeFilter.head​(Node node, int depth) Callback for when a node is first visited.NodeFilter.FilterResultNodeFilter.FilterResultNodeFilter.FilterResultNodeFilter.head​(Node node, int depth)NodeFilter.head​(Node node, int depth)headheadNodeCallback for when a node is first visited.Callback for when a node is first visited.void NodeVisitor.head​(Node node, int depth) Callback for when a node is first visited.voidvoidNodeVisitor.head​(Node node, int depth)NodeVisitor.head​(Node node, int depth)headheadNodeCallback for when a node is first visited.Callback for when a node is first visited.NodeFilter.FilterResult NodeFilter.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited.NodeFilter.FilterResultNodeFilter.FilterResultNodeFilter.FilterResultNodeFilter.tail​(Node node, int depth)NodeFilter.tail​(Node node, int depth)tailtailNodeCallback for when a node is last visited, after all of its descendants have been visited.Callback for when a node is last visited, after all of its descendants have been visited.void NodeVisitor.tail​(Node node, int depth) Callback for when a node is last visited, after all of its descendants have been visited.voidvoidNodeVisitor.tail​(Node node, int depth)NodeVisitor.tail​(Node node, int depth)tailtailNodeCallback for when a node is last visited, after all of its descendants have been visited.Callback for when a node is last visited, after all of its descendants have been visited.void NodeTraversor.traverse​(Node root) Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method.voidvoidNodeTraversor.traverse​(Node root)NodeTraversor.traverse​(Node root)traversetraverseNodeDeprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method.Deprecated. Just use the static NodeTraversor.filter(NodeFilter, Node) method.Deprecated.Just use the static NodeTraversor.filter(NodeFilter, Node) method.Just use the static NodeTraversor.filter(NodeFilter, Node) method.NodeTraversor.filter(NodeFilter, Node)NodeTraversor.filter(NodeFilter, Node)static void NodeTraversor.traverse​(NodeVisitor visitor, Node root) Start a depth-first traverse of the root and all of its descendants.static voidstatic voidNodeTraversor.traverse​(NodeVisitor visitor, Node root)NodeTraversor.traverse​(NodeVisitor visitor, Node root)traversetraverseNodeVisitorNodeStart a depth-first traverse of the root and all of its descendants.Start a depth-first traverse of the root and all of its descendants.Skip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassClassUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Next Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div>Prev NextPrevNextFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll Classes<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Copyright © 2009–2017 Jonathan Hedley. All rights reserved.Copyright © 2009–2017 Jonathan Hedley. All rights reserved.Jonathan Hedley