<div> JavaScript is disabled on your browser. </div> Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Package org.jsoup.nodes Class TextNode java.lang.Object org.jsoup.nodes.Node org.jsoup.nodes.TextNode All Implemented Interfaces: Cloneable public class TextNode extends Node A text node. Author: Jonathan Hedley, jonathan@hedley.net Constructor Summary Constructors Constructor Description TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Method Summary All Methods Static Methods Instance Methods Concrete Methods Deprecated Methods Modifier and Type Method Description String absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e. String attr​(String key) Get an attribute's value by its key. Node attr​(String key, String value) Set an attribute (key=value). Attributes attributes​() Get all of the element's attributes. String baseUri​() Get the base URI of this node. int childNodeSize​() Get the number of child nodes that this node holds. static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. protected List<Node> ensureChildNodes​() String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. boolean hasAttr​(String key) Test if this element has an attribute. protected boolean hasAttributes​() Check if this Node has an actual Attributes object. boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). String nodeName​() Get the node name of this node. Node removeAttr​(String key) Remove an attribute from this element. TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. String text​() Get the text content of this text node. TextNode text​(String text) Set the text content of this text node. String toString​() Methods inherited from class org.jsoup.nodes.Node addChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrap Methods inherited from class java.lang.Object finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait Constructor Detail TextNode public TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text See Also: createFromEncoded(String) TextNode public TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String) Method Detail nodeName public String nodeName​() Description copied from class: Node Get the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof). Specified by: nodeName in class Node Returns: node name text public String text​() Get the text content of this text node. Returns: Unencoded, normalised text. See Also: getWholeText() text public TextNode text​(String text) Set the text content of this text node. Parameters: text - unencoded text Returns: this, for chaining getWholeText public String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. Returns: text isBlank public boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). Returns: true if this document is empty or only whitespace, false if it contains any text content. splitText public TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset. Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset. toString public String toString​() Overrides: toString in class Node createFromEncoded public static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <) createFromEncoded public static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <) hasAttributes protected final boolean hasAttributes​() Description copied from class: Node Check if this Node has an actual Attributes object. Specified by: hasAttributes in class Node attributes public final Attributes attributes​() Description copied from class: Node Get all of the element's attributes. Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML). attr public String attr​(String key) Description copied from class: Node Get an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href"); Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String) attr public Node attr​(String key, String value) Description copied from class: Node Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive. Overrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining) hasAttr public boolean hasAttr​(String key) Description copied from class: Node Test if this element has an attribute. Case insensitive Overrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not. removeAttr public Node removeAttr​(String key) Description copied from class: Node Remove an attribute from this element. Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining) absUrl public String absUrl​(String key) Description copied from class: Node Get an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href"); Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String) baseUri public String baseUri​() Description copied from class: Node Get the base URI of this node. Specified by: baseUri in class Node Returns: base URI doSetBaseUri protected void doSetBaseUri​(String baseUri) Description copied from class: Node Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. Specified by: doSetBaseUri in class Node Parameters: baseUri - new URI childNodeSize public int childNodeSize​() Description copied from class: Node Get the number of child nodes that this node holds. Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds. ensureChildNodes protected List<Node> ensureChildNodes​() Specified by: ensureChildNodes in class Node Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | Method Copyright © 2009–2017 Jonathan Hedley. All rights reserved.<div> JavaScript is disabled on your browser. </div>Skip navigation links Overview Package Class Use Tree Deprecated Index Help Prev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes SEARCH: <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll ClassesSEARCH:SEARCH:SEARCH:<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |Field |Constr |ConstrMethodMethodDetail: Field | Constr | MethodDetail:Field |Constr |ConstrMethodMethodPackage org.jsoup.nodes Class TextNodePackage org.jsoup.nodesPackageorg.jsoup.nodesClass TextNodejava.lang.Object org.jsoup.nodes.Node org.jsoup.nodes.TextNode All Implemented Interfaces: Cloneable public class TextNode extends Node A text node. Author: Jonathan Hedley, jonathan@hedley.net Constructor Summary Constructors Constructor Description TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Method Summary All Methods Static Methods Instance Methods Concrete Methods Deprecated Methods Modifier and Type Method Description String absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e. String attr​(String key) Get an attribute's value by its key. Node attr​(String key, String value) Set an attribute (key=value). Attributes attributes​() Get all of the element's attributes. String baseUri​() Get the base URI of this node. int childNodeSize​() Get the number of child nodes that this node holds. static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. protected List<Node> ensureChildNodes​() String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. boolean hasAttr​(String key) Test if this element has an attribute. protected boolean hasAttributes​() Check if this Node has an actual Attributes object. boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). String nodeName​() Get the node name of this node. Node removeAttr​(String key) Remove an attribute from this element. TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. String text​() Get the text content of this text node. TextNode text​(String text) Set the text content of this text node. String toString​() Methods inherited from class org.jsoup.nodes.Node addChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrap Methods inherited from class java.lang.Object finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait Constructor Detail TextNode public TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text See Also: createFromEncoded(String) TextNode public TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String) Method Detail nodeName public String nodeName​() Description copied from class: Node Get the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof). Specified by: nodeName in class Node Returns: node name text public String text​() Get the text content of this text node. Returns: Unencoded, normalised text. See Also: getWholeText() text public TextNode text​(String text) Set the text content of this text node. Parameters: text - unencoded text Returns: this, for chaining getWholeText public String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. Returns: text isBlank public boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). Returns: true if this document is empty or only whitespace, false if it contains any text content. splitText public TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset. Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset. toString public String toString​() Overrides: toString in class Node createFromEncoded public static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <) createFromEncoded public static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <) hasAttributes protected final boolean hasAttributes​() Description copied from class: Node Check if this Node has an actual Attributes object. Specified by: hasAttributes in class Node attributes public final Attributes attributes​() Description copied from class: Node Get all of the element's attributes. Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML). attr public String attr​(String key) Description copied from class: Node Get an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href"); Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String) attr public Node attr​(String key, String value) Description copied from class: Node Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive. Overrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining) hasAttr public boolean hasAttr​(String key) Description copied from class: Node Test if this element has an attribute. Case insensitive Overrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not. removeAttr public Node removeAttr​(String key) Description copied from class: Node Remove an attribute from this element. Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining) absUrl public String absUrl​(String key) Description copied from class: Node Get an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href"); Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String) baseUri public String baseUri​() Description copied from class: Node Get the base URI of this node. Specified by: baseUri in class Node Returns: base URI doSetBaseUri protected void doSetBaseUri​(String baseUri) Description copied from class: Node Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. Specified by: doSetBaseUri in class Node Parameters: baseUri - new URI childNodeSize public int childNodeSize​() Description copied from class: Node Get the number of child nodes that this node holds. Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds. ensureChildNodes protected List<Node> ensureChildNodes​() Specified by: ensureChildNodes in class Nodejava.lang.Object org.jsoup.nodes.Node org.jsoup.nodes.TextNodejava.lang.Objectjava.lang.Objectorg.jsoup.nodes.Node org.jsoup.nodes.TextNodeorg.jsoup.nodes.Node org.jsoup.nodes.TextNodeorg.jsoup.nodes.Nodeorg.jsoup.nodes.Nodeorg.jsoup.nodes.TextNodeorg.jsoup.nodes.TextNodeorg.jsoup.nodes.TextNodeAll Implemented Interfaces: Cloneable public class TextNode extends Node A text node. Author: Jonathan Hedley, jonathan@hedley.netAll Implemented Interfaces: Cloneable public class TextNode extends Node A text node. Author: Jonathan Hedley, jonathan@hedley.netAll Implemented Interfaces: Cloneable public class TextNode extends Node A text node. Author: Jonathan Hedley, jonathan@hedley.netAll Implemented Interfaces: CloneableAll Implemented Interfaces:CloneableCloneableCloneablepublic class TextNode extends NodeTextNodeNodeA text node.Author: Jonathan Hedley, jonathan@hedley.netAuthor:Author:Jonathan Hedley, jonathan@hedley.netConstructor Summary Constructors Constructor Description TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Method Summary All Methods Static Methods Instance Methods Concrete Methods Deprecated Methods Modifier and Type Method Description String absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e. String attr​(String key) Get an attribute's value by its key. Node attr​(String key, String value) Set an attribute (key=value). Attributes attributes​() Get all of the element's attributes. String baseUri​() Get the base URI of this node. int childNodeSize​() Get the number of child nodes that this node holds. static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. protected List<Node> ensureChildNodes​() String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. boolean hasAttr​(String key) Test if this element has an attribute. protected boolean hasAttributes​() Check if this Node has an actual Attributes object. boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). String nodeName​() Get the node name of this node. Node removeAttr​(String key) Remove an attribute from this element. TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. String text​() Get the text content of this text node. TextNode text​(String text) Set the text content of this text node. String toString​() Methods inherited from class org.jsoup.nodes.Node addChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrap Methods inherited from class java.lang.Object finalize, getClass, hashCode, notify, notifyAll, wait, wait, waitConstructor Summary Constructors Constructor Description TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Method Summary All Methods Static Methods Instance Methods Concrete Methods Deprecated Methods Modifier and Type Method Description String absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e. String attr​(String key) Get an attribute's value by its key. Node attr​(String key, String value) Set an attribute (key=value). Attributes attributes​() Get all of the element's attributes. String baseUri​() Get the base URI of this node. int childNodeSize​() Get the number of child nodes that this node holds. static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. protected List<Node> ensureChildNodes​() String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. boolean hasAttr​(String key) Test if this element has an attribute. protected boolean hasAttributes​() Check if this Node has an actual Attributes object. boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). String nodeName​() Get the node name of this node. Node removeAttr​(String key) Remove an attribute from this element. TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. String text​() Get the text content of this text node. TextNode text​(String text) Set the text content of this text node. String toString​() Methods inherited from class org.jsoup.nodes.Node addChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrap Methods inherited from class java.lang.Object finalize, getClass, hashCode, notify, notifyAll, wait, wait, waitConstructor Summary Constructors Constructor Description TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Method Summary All Methods Static Methods Instance Methods Concrete Methods Deprecated Methods Modifier and Type Method Description String absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e. String attr​(String key) Get an attribute's value by its key. Node attr​(String key, String value) Set an attribute (key=value). Attributes attributes​() Get all of the element's attributes. String baseUri​() Get the base URI of this node. int childNodeSize​() Get the number of child nodes that this node holds. static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. protected List<Node> ensureChildNodes​() String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. boolean hasAttr​(String key) Test if this element has an attribute. protected boolean hasAttributes​() Check if this Node has an actual Attributes object. boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). String nodeName​() Get the node name of this node. Node removeAttr​(String key) Remove an attribute from this element. TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. String text​() Get the text content of this text node. TextNode text​(String text) Set the text content of this text node. String toString​() Methods inherited from class org.jsoup.nodes.Node addChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrap Methods inherited from class java.lang.Object finalize, getClass, hashCode, notify, notifyAll, wait, wait, waitConstructor Summary Constructors Constructor Description TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). TextNode​(String text, String baseUri) Deprecated. use TextNode(String)Constructor Summary Constructors Constructor Description TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). TextNode​(String text, String baseUri) Deprecated. use TextNode(String)Constructor SummaryConstructors Constructor Description TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). TextNode​(String text, String baseUri) Deprecated. use TextNode(String)ConstructorsConstructorsConstructor Description TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). TextNode​(String text, String baseUri) Deprecated. use TextNode(String)Constructor DescriptionConstructorDescriptionTextNode​(String text) Create a new TextNode representing the supplied (unencoded) text).TextNode​(String text)TextNode​(String text)TextNodeTextNodeStringCreate a new TextNode representing the supplied (unencoded) text).Create a new TextNode representing the supplied (unencoded) text).TextNode​(String text, String baseUri) Deprecated. use TextNode(String)TextNode​(String text, String baseUri)TextNode​(String text, String baseUri)TextNodeTextNodeStringStringDeprecated. use TextNode(String)Deprecated. use TextNode(String)Deprecated.use TextNode(String)use TextNode(String)TextNode(String)TextNode(String)Method Summary All Methods Static Methods Instance Methods Concrete Methods Deprecated Methods Modifier and Type Method Description String absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e. String attr​(String key) Get an attribute's value by its key. Node attr​(String key, String value) Set an attribute (key=value). Attributes attributes​() Get all of the element's attributes. String baseUri​() Get the base URI of this node. int childNodeSize​() Get the number of child nodes that this node holds. static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. protected List<Node> ensureChildNodes​() String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. boolean hasAttr​(String key) Test if this element has an attribute. protected boolean hasAttributes​() Check if this Node has an actual Attributes object. boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). String nodeName​() Get the node name of this node. Node removeAttr​(String key) Remove an attribute from this element. TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. String text​() Get the text content of this text node. TextNode text​(String text) Set the text content of this text node. String toString​() Methods inherited from class org.jsoup.nodes.Node addChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrap Methods inherited from class java.lang.Object finalize, getClass, hashCode, notify, notifyAll, wait, wait, waitMethod Summary All Methods Static Methods Instance Methods Concrete Methods Deprecated Methods Modifier and Type Method Description String absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e. String attr​(String key) Get an attribute's value by its key. Node attr​(String key, String value) Set an attribute (key=value). Attributes attributes​() Get all of the element's attributes. String baseUri​() Get the base URI of this node. int childNodeSize​() Get the number of child nodes that this node holds. static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. protected List<Node> ensureChildNodes​() String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. boolean hasAttr​(String key) Test if this element has an attribute. protected boolean hasAttributes​() Check if this Node has an actual Attributes object. boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). String nodeName​() Get the node name of this node. Node removeAttr​(String key) Remove an attribute from this element. TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. String text​() Get the text content of this text node. TextNode text​(String text) Set the text content of this text node. String toString​() Methods inherited from class org.jsoup.nodes.Node addChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrap Methods inherited from class java.lang.Object finalize, getClass, hashCode, notify, notifyAll, wait, wait, waitMethod SummaryAll Methods Static Methods Instance Methods Concrete Methods Deprecated Methods Modifier and Type Method Description String absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e. String attr​(String key) Get an attribute's value by its key. Node attr​(String key, String value) Set an attribute (key=value). Attributes attributes​() Get all of the element's attributes. String baseUri​() Get the base URI of this node. int childNodeSize​() Get the number of child nodes that this node holds. static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. protected List<Node> ensureChildNodes​() String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. boolean hasAttr​(String key) Test if this element has an attribute. protected boolean hasAttributes​() Check if this Node has an actual Attributes object. boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). String nodeName​() Get the node name of this node. Node removeAttr​(String key) Remove an attribute from this element. TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. String text​() Get the text content of this text node. TextNode text​(String text) Set the text content of this text node. String toString​()All Methods Static Methods Instance Methods Concrete Methods Deprecated MethodsAll MethodsAll MethodsStatic MethodsStatic MethodsStatic MethodsInstance MethodsInstance MethodsInstance MethodsConcrete MethodsConcrete MethodsConcrete MethodsDeprecated MethodsDeprecated MethodsDeprecated MethodsModifier and Type Method Description String absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e. String attr​(String key) Get an attribute's value by its key. Node attr​(String key, String value) Set an attribute (key=value). Attributes attributes​() Get all of the element's attributes. String baseUri​() Get the base URI of this node. int childNodeSize​() Get the number of child nodes that this node holds. static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. protected List<Node> ensureChildNodes​() String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. boolean hasAttr​(String key) Test if this element has an attribute. protected boolean hasAttributes​() Check if this Node has an actual Attributes object. boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). String nodeName​() Get the node name of this node. Node removeAttr​(String key) Remove an attribute from this element. TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. String text​() Get the text content of this text node. TextNode text​(String text) Set the text content of this text node. String toString​()Modifier and Type Method DescriptionModifier and TypeMethodDescriptionString absUrl​(String key) Get an absolute URL from a URL attribute that may be relative (i.e.StringStringStringabsUrl​(String key)absUrl​(String key)absUrlabsUrlStringGet an absolute URL from a URL attribute that may be relative (i.e.Get an absolute URL from a URL attribute that may be relative (i.e.String attr​(String key) Get an attribute's value by its key.StringStringStringattr​(String key)attr​(String key)attrattrStringGet an attribute's value by its key.Get an attribute's value by its key.Node attr​(String key, String value) Set an attribute (key=value).NodeNodeNodeattr​(String key, String value)attr​(String key, String value)attrattrStringStringSet an attribute (key=value).Set an attribute (key=value).Attributes attributes​() Get all of the element's attributes.AttributesAttributesAttributesattributes​()attributes​()attributesattributesGet all of the element's attributes.Get all of the element's attributes.String baseUri​() Get the base URI of this node.StringStringStringbaseUri​()baseUri​()baseUribaseUriGet the base URI of this node.Get the base URI of this node.int childNodeSize​() Get the number of child nodes that this node holds.intintchildNodeSize​()childNodeSize​()childNodeSizechildNodeSizeGet the number of child nodes that this node holds.Get the number of child nodes that this node holds.static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data.static TextNodestatic TextNodeTextNodecreateFromEncoded​(String encodedText)createFromEncoded​(String encodedText)createFromEncodedcreateFromEncodedStringCreate a new TextNode from HTML encoded (aka escaped) data.Create a new TextNode from HTML encoded (aka escaped) data.static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs.static TextNodestatic TextNodeTextNodecreateFromEncoded​(String encodedText, String baseUri)createFromEncoded​(String encodedText, String baseUri)createFromEncodedcreateFromEncodedStringStringDeprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs.Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs.Deprecated.use createFromEncoded(String) instead, as LeafNodes don't carry base URIs.use createFromEncoded(String) instead, as LeafNodes don't carry base URIs.createFromEncoded(String)createFromEncoded(String)protected void doSetBaseUri​(String baseUri) Set the baseUri for just this node (not its descendants), if this Node tracks base URIs.protected voidprotected voiddoSetBaseUri​(String baseUri)doSetBaseUri​(String baseUri)doSetBaseUridoSetBaseUriStringSet the baseUri for just this node (not its descendants), if this Node tracks base URIs.Set the baseUri for just this node (not its descendants), if this Node tracks base URIs.protected List<Node> ensureChildNodes​()protected List<Node>protected List<Node>ListNodeensureChildNodes​()ensureChildNodes​()ensureChildNodesensureChildNodesString getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original.StringStringStringgetWholeText​()getWholeText​()getWholeTextgetWholeTextGet the (unencoded) text of this text node, including any newlines and spaces present in the original.Get the (unencoded) text of this text node, including any newlines and spaces present in the original.boolean hasAttr​(String key) Test if this element has an attribute.booleanbooleanhasAttr​(String key)hasAttr​(String key)hasAttrhasAttrStringTest if this element has an attribute.Test if this element has an attribute.protected boolean hasAttributes​() Check if this Node has an actual Attributes object.protected booleanprotected booleanhasAttributes​()hasAttributes​()hasAttributeshasAttributesCheck if this Node has an actual Attributes object.Check if this Node has an actual Attributes object.boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines).booleanbooleanisBlank​()isBlank​()isBlankisBlankTest if this text node is blank -- that is, empty or only whitespace (including newlines).Test if this text node is blank -- that is, empty or only whitespace (including newlines).String nodeName​() Get the node name of this node.StringStringStringnodeName​()nodeName​()nodeNamenodeNameGet the node name of this node.Get the node name of this node.Node removeAttr​(String key) Remove an attribute from this element.NodeNodeNoderemoveAttr​(String key)removeAttr​(String key)removeAttrremoveAttrStringRemove an attribute from this element.Remove an attribute from this element.TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset.TextNodeTextNodeTextNodesplitText​(int offset)splitText​(int offset)splitTextsplitTextSplit this text node into two nodes at the specified string offset.Split this text node into two nodes at the specified string offset.String text​() Get the text content of this text node.StringStringStringtext​()text​()texttextGet the text content of this text node.Get the text content of this text node.TextNode text​(String text) Set the text content of this text node.TextNodeTextNodeTextNodetext​(String text)text​(String text)texttextStringSet the text content of this text node.Set the text content of this text node.String toString​()StringStringStringtoString​()toString​()toStringtoStringMethods inherited from class org.jsoup.nodes.Node addChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrapMethods inherited from class org.jsoup.nodes.Node addChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrapMethods inherited from class org.jsoup.nodes.NodeNodeaddChildren, addChildren, after, after, before, before, childNode, childNodes, childNodesAsArray, childNodesCopy, clearAttributes, clone, doClone, equals, filter, hasParent, hasSameValue, html, indent, nextSibling, outerHtml, outerHtml, ownerDocument, parent, parentNode, previousSibling, remove, removeChild, reparentChild, replaceChild, replaceWith, root, setBaseUri, setParentNode, setSiblingIndex, shallowClone, siblingIndex, siblingNodes, traverse, unwrap, wrapaddChildrenaddChildrenafterafterbeforebeforechildNodechildNodeschildNodesAsArraychildNodesCopyclearAttributesclonedoCloneequalsfilterhasParenthasSameValuehtmlindentnextSiblingouterHtmlouterHtmlownerDocumentparentparentNodepreviousSiblingremoveremoveChildreparentChildreplaceChildreplaceWithrootsetBaseUrisetParentNodesetSiblingIndexshallowClonesiblingIndexsiblingNodestraverseunwrapwrapMethods inherited from class java.lang.Object finalize, getClass, hashCode, notify, notifyAll, wait, wait, waitMethods inherited from class java.lang.Object finalize, getClass, hashCode, notify, notifyAll, wait, wait, waitMethods inherited from class java.lang.ObjectObjectfinalize, getClass, hashCode, notify, notifyAll, wait, wait, waitfinalizegetClasshashCodenotifynotifyAllwaitwaitwaitConstructor Detail TextNode public TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text See Also: createFromEncoded(String) TextNode public TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String) Method Detail nodeName public String nodeName​() Description copied from class: Node Get the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof). Specified by: nodeName in class Node Returns: node name text public String text​() Get the text content of this text node. Returns: Unencoded, normalised text. See Also: getWholeText() text public TextNode text​(String text) Set the text content of this text node. Parameters: text - unencoded text Returns: this, for chaining getWholeText public String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. Returns: text isBlank public boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). Returns: true if this document is empty or only whitespace, false if it contains any text content. splitText public TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset. Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset. toString public String toString​() Overrides: toString in class Node createFromEncoded public static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <) createFromEncoded public static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <) hasAttributes protected final boolean hasAttributes​() Description copied from class: Node Check if this Node has an actual Attributes object. Specified by: hasAttributes in class Node attributes public final Attributes attributes​() Description copied from class: Node Get all of the element's attributes. Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML). attr public String attr​(String key) Description copied from class: Node Get an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href"); Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String) attr public Node attr​(String key, String value) Description copied from class: Node Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive. Overrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining) hasAttr public boolean hasAttr​(String key) Description copied from class: Node Test if this element has an attribute. Case insensitive Overrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not. removeAttr public Node removeAttr​(String key) Description copied from class: Node Remove an attribute from this element. Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining) absUrl public String absUrl​(String key) Description copied from class: Node Get an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href"); Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String) baseUri public String baseUri​() Description copied from class: Node Get the base URI of this node. Specified by: baseUri in class Node Returns: base URI doSetBaseUri protected void doSetBaseUri​(String baseUri) Description copied from class: Node Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. Specified by: doSetBaseUri in class Node Parameters: baseUri - new URI childNodeSize public int childNodeSize​() Description copied from class: Node Get the number of child nodes that this node holds. Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds. ensureChildNodes protected List<Node> ensureChildNodes​() Specified by: ensureChildNodes in class NodeConstructor Detail TextNode public TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text See Also: createFromEncoded(String) TextNode public TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String) Method Detail nodeName public String nodeName​() Description copied from class: Node Get the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof). Specified by: nodeName in class Node Returns: node name text public String text​() Get the text content of this text node. Returns: Unencoded, normalised text. See Also: getWholeText() text public TextNode text​(String text) Set the text content of this text node. Parameters: text - unencoded text Returns: this, for chaining getWholeText public String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. Returns: text isBlank public boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). Returns: true if this document is empty or only whitespace, false if it contains any text content. splitText public TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset. Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset. toString public String toString​() Overrides: toString in class Node createFromEncoded public static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <) createFromEncoded public static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <) hasAttributes protected final boolean hasAttributes​() Description copied from class: Node Check if this Node has an actual Attributes object. Specified by: hasAttributes in class Node attributes public final Attributes attributes​() Description copied from class: Node Get all of the element's attributes. Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML). attr public String attr​(String key) Description copied from class: Node Get an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href"); Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String) attr public Node attr​(String key, String value) Description copied from class: Node Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive. Overrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining) hasAttr public boolean hasAttr​(String key) Description copied from class: Node Test if this element has an attribute. Case insensitive Overrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not. removeAttr public Node removeAttr​(String key) Description copied from class: Node Remove an attribute from this element. Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining) absUrl public String absUrl​(String key) Description copied from class: Node Get an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href"); Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String) baseUri public String baseUri​() Description copied from class: Node Get the base URI of this node. Specified by: baseUri in class Node Returns: base URI doSetBaseUri protected void doSetBaseUri​(String baseUri) Description copied from class: Node Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. Specified by: doSetBaseUri in class Node Parameters: baseUri - new URI childNodeSize public int childNodeSize​() Description copied from class: Node Get the number of child nodes that this node holds. Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds. ensureChildNodes protected List<Node> ensureChildNodes​() Specified by: ensureChildNodes in class NodeConstructor Detail TextNode public TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text See Also: createFromEncoded(String) TextNode public TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String) Method Detail nodeName public String nodeName​() Description copied from class: Node Get the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof). Specified by: nodeName in class Node Returns: node name text public String text​() Get the text content of this text node. Returns: Unencoded, normalised text. See Also: getWholeText() text public TextNode text​(String text) Set the text content of this text node. Parameters: text - unencoded text Returns: this, for chaining getWholeText public String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. Returns: text isBlank public boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). Returns: true if this document is empty or only whitespace, false if it contains any text content. splitText public TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset. Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset. toString public String toString​() Overrides: toString in class Node createFromEncoded public static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <) createFromEncoded public static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <) hasAttributes protected final boolean hasAttributes​() Description copied from class: Node Check if this Node has an actual Attributes object. Specified by: hasAttributes in class Node attributes public final Attributes attributes​() Description copied from class: Node Get all of the element's attributes. Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML). attr public String attr​(String key) Description copied from class: Node Get an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href"); Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String) attr public Node attr​(String key, String value) Description copied from class: Node Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive. Overrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining) hasAttr public boolean hasAttr​(String key) Description copied from class: Node Test if this element has an attribute. Case insensitive Overrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not. removeAttr public Node removeAttr​(String key) Description copied from class: Node Remove an attribute from this element. Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining) absUrl public String absUrl​(String key) Description copied from class: Node Get an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href"); Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String) baseUri public String baseUri​() Description copied from class: Node Get the base URI of this node. Specified by: baseUri in class Node Returns: base URI doSetBaseUri protected void doSetBaseUri​(String baseUri) Description copied from class: Node Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. Specified by: doSetBaseUri in class Node Parameters: baseUri - new URI childNodeSize public int childNodeSize​() Description copied from class: Node Get the number of child nodes that this node holds. Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds. ensureChildNodes protected List<Node> ensureChildNodes​() Specified by: ensureChildNodes in class NodeConstructor Detail TextNode public TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text See Also: createFromEncoded(String) TextNode public TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String)Constructor Detail TextNode public TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text See Also: createFromEncoded(String) TextNode public TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String)Constructor DetailTextNode public TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text See Also: createFromEncoded(String)TextNode public TextNode​(String text) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text See Also: createFromEncoded(String)TextNodepublic TextNode​(String text)StringCreate a new TextNode representing the supplied (unencoded) text).Parameters: text - raw text See Also: createFromEncoded(String)Parameters:Parameters:text - raw texttextSee Also:See Also:createFromEncoded(String)createFromEncoded(String)createFromEncoded(String)TextNode public TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String)TextNode public TextNode​(String text, String baseUri) Deprecated. use TextNode(String) Create a new TextNode representing the supplied (unencoded) text). Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String)TextNodepublic TextNode​(String text, String baseUri)StringStringDeprecated. use TextNode(String)Deprecated.use TextNode(String)TextNode(String)TextNode(String)Create a new TextNode representing the supplied (unencoded) text).Parameters: text - raw text baseUri - base uri - ignored for this node type See Also: createFromEncoded(String, String)Parameters:Parameters:text - raw texttextbaseUri - base uri - ignored for this node typebaseUriSee Also:See Also:createFromEncoded(String, String)createFromEncoded(String, String)createFromEncoded(String, String)Method Detail nodeName public String nodeName​() Description copied from class: Node Get the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof). Specified by: nodeName in class Node Returns: node name text public String text​() Get the text content of this text node. Returns: Unencoded, normalised text. See Also: getWholeText() text public TextNode text​(String text) Set the text content of this text node. Parameters: text - unencoded text Returns: this, for chaining getWholeText public String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. Returns: text isBlank public boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). Returns: true if this document is empty or only whitespace, false if it contains any text content. splitText public TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset. Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset. toString public String toString​() Overrides: toString in class Node createFromEncoded public static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <) createFromEncoded public static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <) hasAttributes protected final boolean hasAttributes​() Description copied from class: Node Check if this Node has an actual Attributes object. Specified by: hasAttributes in class Node attributes public final Attributes attributes​() Description copied from class: Node Get all of the element's attributes. Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML). attr public String attr​(String key) Description copied from class: Node Get an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href"); Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String) attr public Node attr​(String key, String value) Description copied from class: Node Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive. Overrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining) hasAttr public boolean hasAttr​(String key) Description copied from class: Node Test if this element has an attribute. Case insensitive Overrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not. removeAttr public Node removeAttr​(String key) Description copied from class: Node Remove an attribute from this element. Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining) absUrl public String absUrl​(String key) Description copied from class: Node Get an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href"); Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String) baseUri public String baseUri​() Description copied from class: Node Get the base URI of this node. Specified by: baseUri in class Node Returns: base URI doSetBaseUri protected void doSetBaseUri​(String baseUri) Description copied from class: Node Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. Specified by: doSetBaseUri in class Node Parameters: baseUri - new URI childNodeSize public int childNodeSize​() Description copied from class: Node Get the number of child nodes that this node holds. Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds. ensureChildNodes protected List<Node> ensureChildNodes​() Specified by: ensureChildNodes in class NodeMethod Detail nodeName public String nodeName​() Description copied from class: Node Get the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof). Specified by: nodeName in class Node Returns: node name text public String text​() Get the text content of this text node. Returns: Unencoded, normalised text. See Also: getWholeText() text public TextNode text​(String text) Set the text content of this text node. Parameters: text - unencoded text Returns: this, for chaining getWholeText public String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. Returns: text isBlank public boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). Returns: true if this document is empty or only whitespace, false if it contains any text content. splitText public TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset. Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset. toString public String toString​() Overrides: toString in class Node createFromEncoded public static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <) createFromEncoded public static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <) hasAttributes protected final boolean hasAttributes​() Description copied from class: Node Check if this Node has an actual Attributes object. Specified by: hasAttributes in class Node attributes public final Attributes attributes​() Description copied from class: Node Get all of the element's attributes. Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML). attr public String attr​(String key) Description copied from class: Node Get an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href"); Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String) attr public Node attr​(String key, String value) Description copied from class: Node Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive. Overrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining) hasAttr public boolean hasAttr​(String key) Description copied from class: Node Test if this element has an attribute. Case insensitive Overrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not. removeAttr public Node removeAttr​(String key) Description copied from class: Node Remove an attribute from this element. Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining) absUrl public String absUrl​(String key) Description copied from class: Node Get an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href"); Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String) baseUri public String baseUri​() Description copied from class: Node Get the base URI of this node. Specified by: baseUri in class Node Returns: base URI doSetBaseUri protected void doSetBaseUri​(String baseUri) Description copied from class: Node Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. Specified by: doSetBaseUri in class Node Parameters: baseUri - new URI childNodeSize public int childNodeSize​() Description copied from class: Node Get the number of child nodes that this node holds. Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds. ensureChildNodes protected List<Node> ensureChildNodes​() Specified by: ensureChildNodes in class NodeMethod DetailnodeName public String nodeName​() Description copied from class: Node Get the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof). Specified by: nodeName in class Node Returns: node namenodeName public String nodeName​() Description copied from class: Node Get the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof). Specified by: nodeName in class Node Returns: node namenodeNamepublic String nodeName​()StringDescription copied from class: NodeDescription copied from class: NodeNodeNodeGet the node name of this node. Use for debugging purposes and not logic switching (for that, use instanceof).Specified by: nodeName in class Node Returns: node nameSpecified by:Specified by:nodeName in class NodenodeNamenodeNameNodeNodeReturns:Returns:node nametext public String text​() Get the text content of this text node. Returns: Unencoded, normalised text. See Also: getWholeText()text public String text​() Get the text content of this text node. Returns: Unencoded, normalised text. See Also: getWholeText()textpublic String text​()StringGet the text content of this text node.Returns: Unencoded, normalised text. See Also: getWholeText()Returns:Returns:Unencoded, normalised text.See Also:See Also:getWholeText()getWholeText()getWholeText()text public TextNode text​(String text) Set the text content of this text node. Parameters: text - unencoded text Returns: this, for chainingtext public TextNode text​(String text) Set the text content of this text node. Parameters: text - unencoded text Returns: this, for chainingtextpublic TextNode text​(String text)TextNodeStringSet the text content of this text node.Parameters: text - unencoded text Returns: this, for chainingParameters:Parameters:text - unencoded texttextReturns:Returns:this, for chaininggetWholeText public String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. Returns: textgetWholeText public String getWholeText​() Get the (unencoded) text of this text node, including any newlines and spaces present in the original. Returns: textgetWholeTextpublic String getWholeText​()StringGet the (unencoded) text of this text node, including any newlines and spaces present in the original.Returns: textReturns:Returns:textisBlank public boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). Returns: true if this document is empty or only whitespace, false if it contains any text content.isBlank public boolean isBlank​() Test if this text node is blank -- that is, empty or only whitespace (including newlines). Returns: true if this document is empty or only whitespace, false if it contains any text content.isBlankpublic boolean isBlank​()Test if this text node is blank -- that is, empty or only whitespace (including newlines).Returns: true if this document is empty or only whitespace, false if it contains any text content.Returns:Returns:true if this document is empty or only whitespace, false if it contains any text content.splitText public TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset. Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset.splitText public TextNode splitText​(int offset) Split this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset. Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset.splitTextpublic TextNode splitText​(int offset)TextNodeSplit this text node into two nodes at the specified string offset. After splitting, this node will contain the original text up to the offset, and will have a new text node sibling containing the text after the offset.Parameters: offset - string offset point to split node at. Returns: the newly created text node containing the text after the offset.Parameters:Parameters:offset - string offset point to split node at.offsetReturns:Returns:the newly created text node containing the text after the offset.toString public String toString​() Overrides: toString in class NodetoString public String toString​() Overrides: toString in class NodetoStringpublic String toString​()StringOverrides: toString in class NodeOverrides:Overrides:toString in class NodetoStringtoStringNodeNodecreateFromEncoded public static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <)createFromEncoded public static TextNode createFromEncoded​(String encodedText, String baseUri) Deprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs. Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <)createFromEncodedpublic static TextNode createFromEncoded​(String encodedText, String baseUri)TextNodeStringStringDeprecated. use createFromEncoded(String) instead, as LeafNodes don't carry base URIs.Deprecated.use createFromEncoded(String) instead, as LeafNodes don't carry base URIs.createFromEncoded(String)createFromEncoded(String)Create a new TextNode from HTML encoded (aka escaped) data.Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) baseUri - Base uri Returns: TextNode containing unencoded data (e.g. <)Parameters:Parameters:encodedText - Text containing encoded HTML (e.g. &lt;)encodedTextbaseUri - Base uribaseUriReturns:Returns:TextNode containing unencoded data (e.g. <)createFromEncoded public static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <)createFromEncoded public static TextNode createFromEncoded​(String encodedText) Create a new TextNode from HTML encoded (aka escaped) data. Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <)createFromEncodedpublic static TextNode createFromEncoded​(String encodedText)TextNodeStringCreate a new TextNode from HTML encoded (aka escaped) data.Parameters: encodedText - Text containing encoded HTML (e.g. &lt;) Returns: TextNode containing unencoded data (e.g. <)Parameters:Parameters:encodedText - Text containing encoded HTML (e.g. &lt;)encodedTextReturns:Returns:TextNode containing unencoded data (e.g. <)hasAttributes protected final boolean hasAttributes​() Description copied from class: Node Check if this Node has an actual Attributes object. Specified by: hasAttributes in class NodehasAttributes protected final boolean hasAttributes​() Description copied from class: Node Check if this Node has an actual Attributes object. Specified by: hasAttributes in class NodehasAttributesprotected final boolean hasAttributes​()Description copied from class: NodeDescription copied from class: NodeNodeNodeCheck if this Node has an actual Attributes object.Specified by: hasAttributes in class NodeSpecified by:Specified by:hasAttributes in class NodehasAttributeshasAttributesNodeNodeattributes public final Attributes attributes​() Description copied from class: Node Get all of the element's attributes. Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML).attributes public final Attributes attributes​() Description copied from class: Node Get all of the element's attributes. Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML).attributespublic final Attributes attributes​()AttributesDescription copied from class: NodeDescription copied from class: NodeNodeNodeGet all of the element's attributes.Specified by: attributes in class Node Returns: attributes (which implements iterable, in same order as presented in original HTML).Specified by:Specified by:attributes in class NodeattributesattributesNodeNodeReturns:Returns:attributes (which implements iterable, in same order as presented in original HTML).attr public String attr​(String key) Description copied from class: Node Get an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href"); Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String)attr public String attr​(String key) Description copied from class: Node Get an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href"); Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String)attrpublic String attr​(String key)StringStringDescription copied from class: NodeDescription copied from class: NodeNodeNodeGet an attribute's value by its key. Case insensitive To get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method. E.g.: String url = a.attr("abs:href");Case insensitiveTo get an absolute URL from an attribute that may be a relative URL, prefix the key with abs, which is a shortcut to the Node.absUrl(java.lang.String) method.absabsNode.absUrl(java.lang.String)Node.absUrl(java.lang.String)String url = a.attr("abs:href");String url = a.attr("abs:href");Overrides: attr in class Node Parameters: key - The attribute key. Returns: The attribute, or empty string if not present (to avoid nulls). See Also: Node.attributes(), Node.hasAttr(String), Node.absUrl(String)Overrides:Overrides:attr in class NodeattrattrNodeNodeParameters:Parameters:key - The attribute key.keyReturns:Returns:The attribute, or empty string if not present (to avoid nulls).See Also:See Also:Node.attributes(), Node.hasAttr(String), Node.absUrl(String)Node.attributes()Node.attributes()Node.hasAttr(String)Node.hasAttr(String)Node.absUrl(String)Node.absUrl(String)attr public Node attr​(String key, String value) Description copied from class: Node Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive. Overrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining)attr public Node attr​(String key, String value) Description copied from class: Node Set an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive. Overrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining)attrpublic Node attr​(String key, String value)NodeStringStringDescription copied from class: NodeDescription copied from class: NodeNodeNodeSet an attribute (key=value). If the attribute already exists, it is replaced. The attribute key comparison is case insensitive.case insensitiveOverrides: attr in class Node Parameters: key - The attribute key. value - The attribute value. Returns: this (for chaining)Overrides:Overrides:attr in class NodeattrattrNodeNodeParameters:Parameters:key - The attribute key.keyvalue - The attribute value.valueReturns:Returns:this (for chaining)hasAttr public boolean hasAttr​(String key) Description copied from class: Node Test if this element has an attribute. Case insensitive Overrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not.hasAttr public boolean hasAttr​(String key) Description copied from class: Node Test if this element has an attribute. Case insensitive Overrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not.hasAttrpublic boolean hasAttr​(String key)StringDescription copied from class: NodeDescription copied from class: NodeNodeNodeTest if this element has an attribute. Case insensitiveCase insensitiveOverrides: hasAttr in class Node Parameters: key - The attribute key to check. Returns: true if the attribute exists, false if not.Overrides:Overrides:hasAttr in class NodehasAttrhasAttrNodeNodeParameters:Parameters:key - The attribute key to check.keyReturns:Returns:true if the attribute exists, false if not.removeAttr public Node removeAttr​(String key) Description copied from class: Node Remove an attribute from this element. Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining)removeAttr public Node removeAttr​(String key) Description copied from class: Node Remove an attribute from this element. Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining)removeAttrpublic Node removeAttr​(String key)NodeStringDescription copied from class: NodeDescription copied from class: NodeNodeNodeRemove an attribute from this element.Overrides: removeAttr in class Node Parameters: key - The attribute to remove. Returns: this (for chaining)Overrides:Overrides:removeAttr in class NoderemoveAttrremoveAttrNodeNodeParameters:Parameters:key - The attribute to remove.keyReturns:Returns:this (for chaining)absUrl public String absUrl​(String key) Description copied from class: Node Get an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href"); Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String)absUrl public String absUrl​(String key) Description copied from class: Node Get an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href"); Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String)absUrlpublic String absUrl​(String key)StringStringDescription copied from class: NodeDescription copied from class: NodeNodeNodeGet an absolute URL from a URL attribute that may be relative (i.e. an <a href> or <img src>). E.g.: String absUrl = linkEl.absUrl("href"); If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that. As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href");<a href><img src>E.g.: String absUrl = linkEl.absUrl("href");String absUrl = linkEl.absUrl("href");If the attribute value is already absolute (i.e. it starts with a protocol, like http:// or https:// etc), and it successfully parses as a URL, the attribute is returned directly. Otherwise, it is treated as a URL relative to the element's Node.baseUri(), and made absolute using that.http://https://Node.baseUri()Node.baseUri()As an alternate, you can use the Node.attr(java.lang.String) method with the abs: prefix, e.g.: String absUrl = linkEl.attr("abs:href");Node.attr(java.lang.String)Node.attr(java.lang.String)abs:String absUrl = linkEl.attr("abs:href");Overrides: absUrl in class Node Parameters: key - The attribute key Returns: An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL. See Also: Node.attr(java.lang.String), URL(java.net.URL, String)Overrides:Overrides:absUrl in class NodeabsUrlabsUrlNodeNodeParameters:Parameters:key - The attribute keykeyReturns:Returns:An absolute URL if one could be made, or an empty string (not null) if the attribute was missing or could not be made successfully into a URL.See Also:See Also:Node.attr(java.lang.String), URL(java.net.URL, String)Node.attr(java.lang.String)Node.attr(java.lang.String)URL(java.net.URL, String)URL(java.net.URL, String)baseUri public String baseUri​() Description copied from class: Node Get the base URI of this node. Specified by: baseUri in class Node Returns: base URIbaseUri public String baseUri​() Description copied from class: Node Get the base URI of this node. Specified by: baseUri in class Node Returns: base URIbaseUripublic String baseUri​()StringDescription copied from class: NodeDescription copied from class: NodeNodeNodeGet the base URI of this node.Specified by: baseUri in class Node Returns: base URISpecified by:Specified by:baseUri in class NodebaseUribaseUriNodeNodeReturns:Returns:base URIdoSetBaseUri protected void doSetBaseUri​(String baseUri) Description copied from class: Node Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. Specified by: doSetBaseUri in class Node Parameters: baseUri - new URIdoSetBaseUri protected void doSetBaseUri​(String baseUri) Description copied from class: Node Set the baseUri for just this node (not its descendants), if this Node tracks base URIs. Specified by: doSetBaseUri in class Node Parameters: baseUri - new URIdoSetBaseUriprotected void doSetBaseUri​(String baseUri)StringDescription copied from class: NodeDescription copied from class: NodeNodeNodeSet the baseUri for just this node (not its descendants), if this Node tracks base URIs.Specified by: doSetBaseUri in class Node Parameters: baseUri - new URISpecified by:Specified by:doSetBaseUri in class NodedoSetBaseUridoSetBaseUriNodeNodeParameters:Parameters:baseUri - new URIbaseUrichildNodeSize public int childNodeSize​() Description copied from class: Node Get the number of child nodes that this node holds. Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds.childNodeSize public int childNodeSize​() Description copied from class: Node Get the number of child nodes that this node holds. Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds.childNodeSizepublic int childNodeSize​()Description copied from class: NodeDescription copied from class: NodeNodeNodeGet the number of child nodes that this node holds.Specified by: childNodeSize in class Node Returns: the number of child nodes that this node holds.Specified by:Specified by:childNodeSize in class NodechildNodeSizechildNodeSizeNodeNodeReturns:Returns:the number of child nodes that this node holds.ensureChildNodes protected List<Node> ensureChildNodes​() Specified by: ensureChildNodes in class NodeensureChildNodes protected List<Node> ensureChildNodes​() Specified by: ensureChildNodes in class NodeensureChildNodesprotected List<Node> ensureChildNodes​()ListNodeSpecified by: ensureChildNodes in class NodeSpecified by:Specified by:ensureChildNodes in class NodeensureChildNodesensureChildNodesNodeNodeSkip navigation links Overview Package Class Use Tree Deprecated Index HelpSkip navigation linksSkip navigation linksOverview Package Class Use Tree Deprecated Index HelpOverviewOverviewPackagePackageClassUseUseTreeTreeDeprecatedDeprecatedIndexIndexHelpHelpPrev Class Next Class Frames No Frames All Classes <div> JavaScript is disabled on your browser. </div> Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodPrev Class Next ClassPrev ClassPrev ClassPrev ClassNext ClassNext ClassNext ClassFrames No FramesFramesFramesNo FramesNo FramesAll ClassesAll ClassesAll Classes<div> JavaScript is disabled on your browser. </div><div> JavaScript is disabled on your browser. </div>Summary: Nested | Field | Constr | Method Detail: Field | Constr | MethodSummary: Nested | Field | Constr | MethodSummary:Nested |Field |Constr |ConstrMethodMethodDetail: Field | Constr | MethodDetail:Field |Constr |ConstrMethodMethodCopyright © 2009–2017 Jonathan Hedley. All rights reserved.Copyright © 2009–2017 Jonathan Hedley. All rights reserved.Jonathan Hedley